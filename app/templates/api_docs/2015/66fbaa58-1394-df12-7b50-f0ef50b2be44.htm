<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="a7622967-1381-c17f-ed04-1ebe40da0440.htm">
       FamilyItemFactory Class
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Adds a new sweep form to the family document, using a path of curve elements.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
      Autodesk.Revit.Creation
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="ed383459-badd-2323-4f73-0d94fd76ce0f.htm">Sweep</a> <span class="identifier">NewSweep</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">bool</a> <span class="parameter">isSolid</span>,
	<a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a> <span class="parameter">path</span>,
	<a href="ba104029-d175-7e75-caef-667a4281f4af.htm">SketchPlane</a> <span class="parameter">pathPlane</span>,
	<a href="1b77356c-e92b-e151-f8c9-727b3e2b8934.htm">SweepProfile</a> <span class="parameter">profile</span>,
	<a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">int</a> <span class="parameter">profileLocationCurveIndex</span>,
	<a href="7ee6064e-ae88-1efe-a030-dabfae9bacaf.htm">ProfilePlaneLocation</a> <span class="parameter">profilePlaneLocation</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewSweep</span> ( _
	<span class="parameter">isSolid</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a>, _
	<span class="parameter">path</span> <span class="keyword">As</span> <a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a>, _
	<span class="parameter">pathPlane</span> <span class="keyword">As</span> <a href="ba104029-d175-7e75-caef-667a4281f4af.htm">SketchPlane</a>, _
	<span class="parameter">profile</span> <span class="keyword">As</span> <a href="1b77356c-e92b-e151-f8c9-727b3e2b8934.htm">SweepProfile</a>, _
	<span class="parameter">profileLocationCurveIndex</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">Integer</a>, _
	<span class="parameter">profilePlaneLocation</span> <span class="keyword">As</span> <a href="7ee6064e-ae88-1efe-a030-dabfae9bacaf.htm">ProfilePlaneLocation</a> _
) <span class="keyword">As</span> <a href="ed383459-badd-2323-4f73-0d94fd76ce0f.htm">Sweep</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="ed383459-badd-2323-4f73-0d94fd76ce0f.htm">Sweep</a>^ <span class="identifier">NewSweep</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">bool</a> <span class="parameter">isSolid</span>, 
	<a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a>^ <span class="parameter">path</span>, 
	<a href="ba104029-d175-7e75-caef-667a4281f4af.htm">SketchPlane</a>^ <span class="parameter">pathPlane</span>, 
	<a href="1b77356c-e92b-e151-f8c9-727b3e2b8934.htm">SweepProfile</a>^ <span class="parameter">profile</span>, 
	<a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">int</a> <span class="parameter">profileLocationCurveIndex</span>, 
	<a href="7ee6064e-ae88-1efe-a030-dabfae9bacaf.htm">ProfilePlaneLocation</a> <span class="parameter">profilePlaneLocation</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="isSolid">
       <dt>
        <span class="parameter">
         isSolid
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">
         System
         Boolean
        </a>
        <br/>
        Indicates if the Sweep is Solid or Void.
       </dd>
      </dl>
      <dl paramname="path">
       <dt>
        <span class="parameter">
         path
        </span>
       </dt>
       <dd>
        Type:
        <a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">
         Autodesk.Revit.DB
         CurveArray
        </a>
        <br/>
        The path of the sweep. The path should be 2D, where all input curves lie in one plane, and the curves are not 
required to reference existing geometry.
       </dd>
      </dl>
      <dl paramname="pathPlane">
       <dt>
        <span class="parameter">
         pathPlane
        </span>
       </dt>
       <dd>
        Type:
        <a href="ba104029-d175-7e75-caef-667a4281f4af.htm">
         Autodesk.Revit.DB
         SketchPlane
        </a>
        <br/>
        The sketch plane for the path. Use this when you want to create 
a 2D path that resides on an existing planar face. Optional, can be
        <span class="keyword">
        </span>
        <span class="nu">
         a null reference (
         <span class="keyword">
          Nothing
         </span>
         in Visual Basic)
        </span>
        for 3D paths or 
for 2D paths where the path should not reference an existing face.
       </dd>
      </dl>
      <dl paramname="profile">
       <dt>
        <span class="parameter">
         profile
        </span>
       </dt>
       <dd>
        Type:
        <a href="1b77356c-e92b-e151-f8c9-727b3e2b8934.htm">
         Autodesk.Revit.DB
         SweepProfile
        </a>
        <br/>
        The profile of the newly created Sweep. This may contain
more than one curve loop or a profile family. The profile must lie in the XY plane, and it will be 
transformed to the profile plane automatically. Each loop must be a fully closed curve loop and the loops 
must not intersect.
The loop can be a unbound circle or ellipse,  but its geometry will be split in two in 
order to satisfy requirements for sketches used in extrusions.
       </dd>
      </dl>
      <dl paramname="profileLocationCurveIndex">
       <dt>
        <span class="parameter">
         profileLocationCurveIndex
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">
         System
         Int32
        </a>
        <br/>
        The index of the path curves. The curve upon which the profile
plane will be determined.
       </dd>
      </dl>
      <dl paramname="profilePlaneLocation">
       <dt>
        <span class="parameter">
         profilePlaneLocation
        </span>
       </dt>
       <dd>
        Type:
        <a href="7ee6064e-ae88-1efe-a030-dabfae9bacaf.htm">
         Autodesk.Revit.DB
         ProfilePlaneLocation
        </a>
        <br/>
        The location on the profileLocationCurve where the profile
plane will be determined.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     If creation was successful the new Sweep is returned, 
otherwise an exception with failure information will be thrown.
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     This method creates a sweep in a family document. The sweep will trace the profile along the path.
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> Sweep CreateSweep(Autodesk.Revit.DB.Document document, SketchPlane sketchPlane)
{
    Sweep sweep = <span class="highlight-keyword">null</span>;

    <span class="highlight-comment">// make sure we have a family document</span>
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">true</span> == document.IsFamilyDocument)
    {
        <span class="highlight-comment">// Define a profile for the sweep</span>
        CurveArrArray arrarr = <span class="highlight-keyword">new</span> CurveArrArray();
        CurveArray arr = <span class="highlight-keyword">new</span> CurveArray();

        <span class="highlight-comment">// Create an ovoid profile</span>
        XYZ pnt1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ pnt2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ pnt3 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>);
        arr.Append(Arc.Create(pnt2, <span class="highlight-number">1.0</span>d, <span class="highlight-number">0.0</span>d, <span class="highlight-number">180.0</span>d, XYZ.BasisX, XYZ.BasisY));
        arr.Append(Arc.Create(pnt1, pnt3, pnt2));
        arrarr.Append(arr);
        SweepProfile profile = document.Application.Create.NewCurveLoopsProfile(arrarr);

        <span class="highlight-comment">// Create a path for the sweep</span>
        XYZ pnt4 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ pnt5 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
        Curve curve = Line.CreateBound(pnt4, pnt5);

        CurveArray curves = <span class="highlight-keyword">new</span> CurveArray();
        curves.Append(curve);

        <span class="highlight-comment">// create a solid ovoid sweep</span>
        sweep = document.FamilyCreate.NewSweep(<span class="highlight-keyword">true</span>, curves, sketchPlane, profile, <span class="highlight-number">0</span>, ProfilePlaneLocation.Start);

        <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != sweep)
        {
            <span class="highlight-comment">// move to proper place</span>
            XYZ transPoint1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">11</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
            ElementTransformUtils.MoveElement(document, sweep.Id, transPoint1);
        }
        <span class="highlight-keyword">else</span>
        {
            <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"Failed to create a new Sweep."</span>);
        }
    }
    <span class="highlight-keyword">else</span>
    {
        <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"Please open a Family document before invoking this command."</span>);
    }

    <span class="highlight-keyword">return</span> sweep;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateSweep(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document, sketchPlane <span class="highlight-keyword">As</span> SketchPlane) <span class="highlight-keyword">As</span> Sweep
    <span class="highlight-keyword">Dim</span> sweep <span class="highlight-keyword">As</span> Sweep = <span class="highlight-keyword">Nothing</span>

    <span class="highlight-comment">' make sure we have a family document</span>
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">True</span> = document.IsFamilyDocument <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' Define a profile for the sweep</span>
        <span class="highlight-keyword">Dim</span> arrarr <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> CurveArrArray()
        <span class="highlight-keyword">Dim</span> arr <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> CurveArray()

        <span class="highlight-comment">' Create an ovoid profile</span>
        <span class="highlight-keyword">Dim</span> pnt1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> pnt2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> pnt3 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
        arr.Append(Arc.Create(pnt2, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">180.0</span>, XYZ.BasisX, XYZ.BasisY))
        arr.Append(Arc.Create(pnt1, pnt3, pnt2))
        arrarr.Append(arr)
        <span class="highlight-keyword">Dim</span> profile <span class="highlight-keyword">As</span> SweepProfile = document.Application.Create.NewCurveLoopsProfile(arrarr)

        <span class="highlight-comment">' Create a path for the sweep</span>
        <span class="highlight-keyword">Dim</span> pnt4 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> pnt5 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Curve = Line.CreateBound(pnt4, pnt5)

        <span class="highlight-keyword">Dim</span> curves <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> CurveArray()
        curves.Append(curve)

        <span class="highlight-comment">' create a solid ovoid sweep</span>
        sweep = document.FamilyCreate.NewSweep(<span class="highlight-keyword">True</span>, curves, sketchPlane, profile, <span class="highlight-number">0</span>, ProfilePlaneLocation.Start)

        <span class="highlight-keyword">If</span> sweep <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' move to proper place</span>
            <span class="highlight-keyword">Dim</span> transPoint1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">11</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
            ElementTransformUtils.MoveElement(document, sweep.Id, transPoint1)
        <span class="highlight-keyword">Else</span>
            <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> Exception(<span class="highlight-literal">"Failed to create a new Sweep."</span>)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Else</span>
        <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> Exception(<span class="highlight-literal">"Please open a Family document before invoking this command."</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> sweep
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table cellpadding="5" cellspacing="2" frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown when the input argument-path-is
          <span class="keyword">
          </span>
          <span class="nu">
           a null reference (
           <span class="keyword">
            Nothing
           </span>
           in Visual Basic)
          </span>
          or empty.
         </td>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          Thrown when the input argument-profile-is
          <span class="keyword">
          </span>
          <span class="nu">
           a null reference (
           <span class="keyword">
            Nothing
           </span>
           in Visual Basic)
          </span>
          .
         </td>
        </tr>
        <tr>
         <td>
          <a href="60f148c9-ece0-a6bb-4e12-bb4a9c8c8a24.htm">
           Autodesk.Revit.Exceptions
           ArgumentOutOfRangeException
          </a>
         </td>
         <td>
          Thrown when the input argument-profileLocationCurveIndex-is out of index bounds.
         </td>
        </tr>
        <tr>
         <td>
          <a href="60f148c9-ece0-a6bb-4e12-bb4a9c8c8a24.htm">
           Autodesk.Revit.Exceptions
           ArgumentOutOfRangeException
          </a>
         </td>
         <td>
          Thrown when the input argument-profilePlaneLocation-does not exist in the ProfilePlaneLocation enumeration.
         </td>
        </tr>
        <tr>
         <td>
          <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
           Autodesk.Revit.Exceptions
           InvalidOperationException
          </a>
         </td>
         <td>
          Thrown when creation is attempted in Conceptual Mass, 2D, or other family where sweeps cannot be created.
         </td>
        </tr>
        <tr>
         <td>
          <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
           Autodesk.Revit.Exceptions
           InvalidOperationException
          </a>
         </td>
         <td>
          Thrown when the creation failed.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="a7622967-1381-c17f-ed04-1ebe40da0440.htm">
       FamilyItemFactory Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="e22c07dd-0615-5b5d-e40f-eed749b7206f.htm">
       NewSweep Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
       Autodesk.Revit.Creation Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>