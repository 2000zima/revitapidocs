<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="2ec33007-7a2a-f86a-009b-d4c5d235a307.htm">
       Material Class
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     The ElementId of the AppearanceAssetElement.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2014
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="identifier">AppearanceAssetId</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">AppearanceAssetId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">property</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="identifier">AppearanceAssetId</span> {
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">value</span>);
}</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> ReadMaterialAppearanceProp(Document document, Material material)
{
   ElementId appearanceId = material.AppearanceAssetId;
   AppearanceAssetElement appearanceElem = document.GetElement(appearanceId) <span class="highlight-keyword">as</span> AppearanceAssetElement;
   Asset theAsset = appearanceElem.GetRenderingAsset();
   <span class="highlight-keyword">string</span> libraryName = theAsset.LibraryName;
   <span class="highlight-keyword">string</span> title = theAsset.Title;

   <span class="highlight-comment">// The predefined asset can be empty. at this time, get the system appearance asset instead.</span>
   <span class="highlight-keyword">if</span> (theAsset.Size == <span class="highlight-number">0</span>)
   {
      AssetSet systemAppearanceAssets = document.Application.get_Assets(AssetType.Appearance);
      <span class="highlight-keyword">foreach</span> (Asset systemAsset <span class="highlight-keyword">in</span> systemAppearanceAssets)
      {
         <span class="highlight-keyword">if</span>(theAsset.LibraryName == systemAsset.LibraryName
            &amp;&amp; theAsset.Name == systemAsset.Name)
         {
            <span class="highlight-comment">// Read the Asset information here.</span>
            <span class="highlight-keyword">break</span>;
         }
      }
   }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> ReadMaterialAppearanceProp(document <span class="highlight-keyword">As</span> Document, material <span class="highlight-keyword">As</span> Material)
    <span class="highlight-keyword">Dim</span> appearanceId <span class="highlight-keyword">As</span> ElementId = material.AppearanceAssetId
    <span class="highlight-keyword">Dim</span> appearanceElem <span class="highlight-keyword">As</span> AppearanceAssetElement = <span class="highlight-keyword">TryCast</span>(document.GetElement(appearanceId), AppearanceAssetElement)
    <span class="highlight-keyword">Dim</span> theAsset <span class="highlight-keyword">As</span> Asset = appearanceElem.GetRenderingAsset()
    <span class="highlight-keyword">Dim</span> libraryName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = theAsset.LibraryName
    <span class="highlight-keyword">Dim</span> title <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = theAsset.Title

    <span class="highlight-comment">' The predefined asset can be empty. at this time, get the system appearance asset instead.</span>
    <span class="highlight-keyword">If</span> theAsset.Size = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> systemAppearanceAssets <span class="highlight-keyword">As</span> AssetSet = document.Application.Assets(AssetType.Appearance)
        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> systemAsset <span class="highlight-keyword">As</span> Asset <span class="highlight-keyword">In</span> systemAppearanceAssets
            <span class="highlight-keyword">If</span> theAsset.LibraryName = systemAsset.LibraryName <span class="highlight-keyword">AndAlso</span> theAsset.Name = systemAsset.Name <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' Read the Asset information here.</span>
                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table cellpadding="5" cellspacing="2" frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          When setting this property: A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="2ec33007-7a2a-f86a-009b-d4c5d235a307.htm">
       Material Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>