<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="faece83a-6d49-41b0-2713-fe6cfaa5a3b5.htm">
       CompoundStructureLayer Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Id of the material assigned to this layer.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="identifier">MaterialId</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">MaterialId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">property</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="identifier">MaterialId</span> {
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">value</span>);
}</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <h4 class="subHeading">
      Field Value
     </h4>
     The default is InvalidElementId.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetWallLayerMaterial(Autodesk.Revit.DB.Document document, Wall wall)
{
    <span class="highlight-comment">// get WallType of wall</span>
    WallType aWallType = wall.WallType;
    <span class="highlight-comment">// Only Basic Wall has compoundStructure</span>
    <span class="highlight-keyword">if</span> (WallKind.Basic == aWallType.Kind)
    {
        <span class="highlight-comment">// Get CompoundStructure</span>
        CompoundStructure comStruct = aWallType.GetCompoundStructure();
        Categories allCategories = document.Settings.Categories;

        <span class="highlight-comment">// Get the category OST_Walls default Material; </span>
        <span class="highlight-comment">// use if that layer's default Material is &lt;By Category&gt;</span>
        Category wallCategory = allCategories.get_Item(BuiltInCategory.OST_Walls);
        Autodesk.Revit.DB.Material wallMaterial = wallCategory.Material;

        <span class="highlight-keyword">foreach</span> (CompoundStructureLayer structLayer <span class="highlight-keyword">in</span> comStruct.GetLayers())
        {
            Autodesk.Revit.DB.Material layerMaterial = document.GetElement(structLayer.MaterialId) <span class="highlight-keyword">as</span> Material;

            <span class="highlight-comment">// If CompoundStructureLayer's Material is specified, use default</span>
            <span class="highlight-comment">// Material of its Category</span>
            <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == layerMaterial)
            {
                <span class="highlight-keyword">switch</span> (structLayer.Function)
                {
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Finish1:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsFinish1).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Finish2:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsFinish2).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Membrane:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsMembrane).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Structure:
                        layerMaterial =  
                            allCategories.get_Item(BuiltInCategory.OST_WallsStructure).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Substrate:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsSubstrate).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Insulation:
                        layerMaterial = 
                            allCategories.get_Item(BuiltInCategory.OST_WallsInsulation).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">default</span>:
                        <span class="highlight-comment">// It is impossible to reach here</span>
                        <span class="highlight-keyword">break</span>;
                }
                <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == layerMaterial)
                {
                    <span class="highlight-comment">// CompoundStructureLayer's default Material is its SubCategory</span>
                    layerMaterial = wallMaterial;
                }
            }
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,<span class="highlight-literal">"Layer Material: "</span> + layerMaterial);
        }
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetWallLayerMaterial(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document, wall <span class="highlight-keyword">As</span> Wall)
    <span class="highlight-comment">' get WallType of wall</span>
    <span class="highlight-keyword">Dim</span> aWallType <span class="highlight-keyword">As</span> WallType = wall.WallType
    <span class="highlight-comment">' Only Basic Wall has compoundStructure</span>
    <span class="highlight-keyword">If</span> WallKind.Basic = aWallType.Kind <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' Get CompoundStructure</span>
        <span class="highlight-keyword">Dim</span> comStruct <span class="highlight-keyword">As</span> CompoundStructure = aWallType.GetCompoundStructure()
        <span class="highlight-keyword">Dim</span> allCategories <span class="highlight-keyword">As</span> Categories = document.Settings.Categories

        <span class="highlight-comment">' Get the category OST_Walls default Material; </span>
        <span class="highlight-comment">' use if that layer's default Material is &lt;By Category&gt;</span>
        <span class="highlight-keyword">Dim</span> wallCategory <span class="highlight-keyword">As</span> Category = allCategories.Item(BuiltInCategory.OST_Walls)
        <span class="highlight-keyword">Dim</span> wallMaterial <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Material = wallCategory.Material

        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> structLayer <span class="highlight-keyword">As</span> CompoundStructureLayer <span class="highlight-keyword">In</span> comStruct.GetLayers()
            <span class="highlight-keyword">Dim</span> layerMaterial <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Material = <span class="highlight-keyword">TryCast</span>(document.GetElement(structLayer.MaterialId), Material)

            <span class="highlight-comment">' If CompoundStructureLayer's Material is specified, use default</span>
            <span class="highlight-comment">' Material of its Category</span>
            <span class="highlight-keyword">If</span> layerMaterial <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> structLayer.[<span class="highlight-keyword">Function</span>]
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Finish1
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsFinish1).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Finish2
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsFinish2).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Membrane
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsMembrane).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.[<span class="highlight-keyword">Structure</span>]
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsStructure).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Substrate
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsSubstrate).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Insulation
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsInsulation).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> <span class="highlight-keyword">Else</span>
                        <span class="highlight-comment">' It is impossible to reach here</span>
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>
                <span class="highlight-keyword">If</span> layerMaterial <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                    <span class="highlight-comment">' CompoundStructureLayer's default Material is its SubCategory</span>
                    layerMaterial = wallMaterial
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Layer Material: "</span> &amp; layerMaterial.ToString())
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          When setting this property: A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="faece83a-6d49-41b0-2713-fe6cfaa5a3b5.htm">
       CompoundStructureLayer Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>