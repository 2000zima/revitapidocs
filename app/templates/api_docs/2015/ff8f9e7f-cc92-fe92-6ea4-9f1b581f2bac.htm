<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="31b73d46-7d67-5dbb-4dad-80aa597c9afc.htm">
       Selection Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Prompts the user to select multiple elements by drawing a rectangle while showing a custom status prompt string.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="11785869-cc9e-03fc-97db-767a59af10a1.htm">
      Autodesk.Revit.UI.Selection
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPIUI
     </span>
     (in RevitAPIUI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">IList</a>&lt;<a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a>&gt; <span class="identifier">PickElementsByRectangle</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">string</a> <span class="parameter">statusPrompt</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">PickElementsByRectangle</span> ( _
	<span class="parameter">statusPrompt</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> _
) <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">IList</a>(<span class="keyword">Of</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a>)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">IList</a>&lt;<a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a>^&gt;^ <span class="identifier">PickElementsByRectangle</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a>^ <span class="parameter">statusPrompt</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="statusPrompt">
       <dt>
        <span class="parameter">
         statusPrompt
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">
         System
         String
        </a>
        <br/>
        The message shown on the status bar.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     <p>
      A collection of elements selected by the user.
     </p>
     <p>
      Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance.
     </p>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.
     </p>
     <p>
      The selection will not be automatically added to the active selection buffer.
     </p>
     <p>
      Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.
     </p>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">// Use the rectangle picking tool to identify model elements to select.</span>
IList&lt;Element&gt; pickedElements = uidoc.Selection.PickElementsByRectangle(<span class="highlight-literal">"Select by rectangle"</span>);
<span class="highlight-keyword">if</span> (pickedElements.Count &gt; <span class="highlight-number">0</span>)
{ 
    <span class="highlight-comment">// Collect Ids of all picked elements</span>
    IList&lt;ElementId&gt; idsToSelect = <span class="highlight-keyword">new</span> List&lt;ElementId&gt;(pickedElements.Count);
    <span class="highlight-keyword">foreach</span> (Element element <span class="highlight-keyword">in</span> pickedElements)
    {
        idsToSelect.Add(element.Id);
    }

    <span class="highlight-comment">// Update the current selection</span>
    uidoc.Selection.SetElementIds(idsToSelect);
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"{0} elements added to Selection."</span>, idsToSelect.Count));
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">' Use the rectangle picking tool to identify model elements to select.</span>
<span class="highlight-keyword">Dim</span> pickedElements <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> Element) = uidoc.Selection.PickElementsByRectangle(<span class="highlight-literal">"Select by rectangle"</span>)
<span class="highlight-keyword">If</span> pickedElements.Count &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
    <span class="highlight-comment">' Collect Ids of all picked elements</span>
    <span class="highlight-keyword">Dim</span> idsToSelect <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> ElementId) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> ElementId)(pickedElements.Count)
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> element <span class="highlight-keyword">As</span> Element <span class="highlight-keyword">In</span> pickedElements
        idsToSelect.Add(element.Id)
    <span class="highlight-keyword">Next</span>

    <span class="highlight-comment">' Update the current selection</span>
    uidoc.Selection.SetElementIds(idsToSelect)
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"{0} elements added to Selection."</span>, idsToSelect.Count))
<span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          Thrown when the statusPrompt is
          <span class="keyword">
          </span>
          <span class="nu">
           a null reference (
           <span class="keyword">
            Nothing
           </span>
           in Visual Basic)
          </span>
          .
         </td>
        </tr>
        <tr>
         <td>
          <a href="aea34480-ceb5-b49f-129d-0799e7bb1c21.htm">
           Autodesk.Revit.Exceptions
           OperationCanceledException
          </a>
         </td>
         <td>
          Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.
         </td>
        </tr>
        <tr>
         <td>
          <a href="c5b911f6-1e8f-2cd4-6965-286f41221fe0.htm">
           Autodesk.Revit.Exceptions
           ForbiddenForDynamicUpdateException
          </a>
         </td>
         <td>
          Thrown if this method is called during dynamic update.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="31b73d46-7d67-5dbb-4dad-80aa597c9afc.htm">
       Selection Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="b486efdd-0c0d-589f-2dfd-b16d32dca046.htm">
       PickElementsByRectangle Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="11785869-cc9e-03fc-97db-767a59af10a1.htm">
       Autodesk.Revit.UI.Selection Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>