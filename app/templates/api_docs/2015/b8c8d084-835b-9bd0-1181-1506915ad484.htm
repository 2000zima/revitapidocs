<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="e9a5280b-4009-004f-57a4-af1f292f9619.htm">
       TableCellStyle Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Sets cell style override options of this cell.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2014
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SetCellStyleOverrideOptions</span>(
	<a href="ac17323d-f5cf-8a72-34e0-4632173daf52.htm">TableCellStyleOverrideOptions</a> <span class="parameter">helper</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">SetCellStyleOverrideOptions</span> ( _
	<span class="parameter">helper</span> <span class="keyword">As</span> <a href="ac17323d-f5cf-8a72-34e0-4632173daf52.htm">TableCellStyleOverrideOptions</a> _
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">SetCellStyleOverrideOptions</span>(
	<a href="ac17323d-f5cf-8a72-34e0-4632173daf52.htm">TableCellStyleOverrideOptions</a>^ <span class="parameter">helper</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="helper">
       <dt>
        <span class="parameter">
         helper
        </span>
       </dt>
       <dd>
        Type:
        <a href="ac17323d-f5cf-8a72-34e0-4632173daf52.htm">
         Autodesk.Revit.DB
         TableCellStyleOverrideOptions
        </a>
        <br/>
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> ApplyFormattingToField(ViewSchedule schedule, <span class="highlight-keyword">int</span> fieldIndex)
{
    <span class="highlight-comment">// Get the field.</span>
    ScheduleDefinition definition = schedule.Definition;
    ScheduleField field = definition.GetField(fieldIndex);

    <span class="highlight-comment">// Build unit formatting for the field.</span>
    FormatOptions options = field.GetFormatOptions();
    options.UseDefault = <span class="highlight-keyword">false</span>;
    options.DisplayUnits = DisplayUnitType.DUT_SQUARE_INCHES;
    options.UnitSymbol = UnitSymbolType.UST_IN_SUP_2;

    <span class="highlight-comment">// Build style overrides for the field</span>
    <span class="highlight-comment">// Use override options to indicate fields that are overridden and apply changes</span>
    TableCellStyle style = field.GetStyle();
    TableCellStyleOverrideOptions overrideOptions = style.GetCellStyleOverrideOptions();
    overrideOptions.BackgroundColor = <span class="highlight-keyword">true</span>;
    style.BackgroundColor = <span class="highlight-keyword">new</span> Color(<span class="highlight-number">0x00</span>, <span class="highlight-number">0x00</span>, <span class="highlight-number">0xFF</span>);
    overrideOptions.FontColor = <span class="highlight-keyword">true</span>;
    style.TextColor = <span class="highlight-keyword">new</span> Color(<span class="highlight-number">0xFF</span>, <span class="highlight-number">0xFF</span>, <span class="highlight-number">0xFF</span>);
    overrideOptions.Italics = <span class="highlight-keyword">true</span>;
    style.IsFontItalic = <span class="highlight-keyword">true</span>;

    style.SetCellStyleOverrideOptions(overrideOptions);

    <span class="highlight-keyword">double</span> width = field.GridColumnWidth;

    <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(schedule.Document, <span class="highlight-literal">"Set style etc"</span>))
    {
        t.Start();
        field.SetStyle(style);
        field.SetFormatOptions(options);
        <span class="highlight-comment">// Change column width (affects width in grid and on sheet) - units are in Revit length units - ft.</span>
        field.GridColumnWidth = width + <span class="highlight-number">0.5</span>;
        t.Commit();
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> ApplyFormattingToField(schedule <span class="highlight-keyword">As</span> ViewSchedule, fieldIndex <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span>)
    <span class="highlight-comment">' Get the field.</span>
    <span class="highlight-keyword">Dim</span> definition <span class="highlight-keyword">As</span> ScheduleDefinition = schedule.Definition
    <span class="highlight-keyword">Dim</span> field <span class="highlight-keyword">As</span> ScheduleField = definition.GetField(fieldIndex)

    <span class="highlight-comment">' Build unit formatting for the field.</span>
    <span class="highlight-keyword">Dim</span> options <span class="highlight-keyword">As</span> FormatOptions = field.GetFormatOptions()
    options.UseDefault = <span class="highlight-keyword">False</span>
    options.DisplayUnits = DisplayUnitType.DUT_SQUARE_INCHES
    options.UnitSymbol = UnitSymbolType.UST_IN_SUP_2

    <span class="highlight-comment">' Build style overrides for the field</span>
    <span class="highlight-comment">' Use override options to indicate fields that are overridden and apply changes</span>
    <span class="highlight-keyword">Dim</span> style <span class="highlight-keyword">As</span> TableCellStyle = field.GetStyle()
    <span class="highlight-keyword">Dim</span> overrideOptions <span class="highlight-keyword">As</span> TableCellStyleOverrideOptions = style.GetCellStyleOverrideOptions()
    overrideOptions.BackgroundColor = <span class="highlight-keyword">True</span>
    style.BackgroundColor = <span class="highlight-keyword">New</span> Color(<span class="highlight-number">&amp;H0</span>, <span class="highlight-number">&amp;H0</span>, <span class="highlight-number">&amp;HFF</span>)
    overrideOptions.FontColor = <span class="highlight-keyword">True</span>
    style.TextColor = <span class="highlight-keyword">New</span> Color(<span class="highlight-number">&amp;HFF</span>, <span class="highlight-number">&amp;HFF</span>, <span class="highlight-number">&amp;HFF</span>)
    overrideOptions.Italics = <span class="highlight-keyword">True</span>
    style.IsFontItalic = <span class="highlight-keyword">True</span>

    style.SetCellStyleOverrideOptions(overrideOptions)

    <span class="highlight-keyword">Dim</span> width <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = field.GridColumnWidth

    <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(schedule.Document, <span class="highlight-literal">"Set style etc"</span>)
        t.Start()
        field.SetStyle(style)
        field.SetFormatOptions(options)
        <span class="highlight-comment">' Change column width (affects width in grid and on sheet) - units are in Revit length units - ft.</span>
        field.GridColumnWidth = width + <span class="highlight-number">0.5</span>
        t.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="e9a5280b-4009-004f-57a4-af1f292f9619.htm">
       TableCellStyle Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>