<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">
       Document Class
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Paint the element's face with specified material.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2014
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">Paint</span>(
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">elementId</span>,
	<a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">Face</a> <span class="parameter">face</span>,
	<a href="6175e974-870e-7fbc-3df7-46105f937a6e.htm">FamilyParameter</a> <span class="parameter">familyParameter</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">Paint</span> ( _
	<span class="parameter">elementId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>, _
	<span class="parameter">face</span> <span class="keyword">As</span> <a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">Face</a>, _
	<span class="parameter">familyParameter</span> <span class="keyword">As</span> <a href="6175e974-870e-7fbc-3df7-46105f937a6e.htm">FamilyParameter</a> _
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">Paint</span>(
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">elementId</span>, 
	<a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">Face</a>^ <span class="parameter">face</span>, 
	<a href="6175e974-870e-7fbc-3df7-46105f937a6e.htm">FamilyParameter</a>^ <span class="parameter">familyParameter</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="elementId">
       <dt>
        <span class="parameter">
         elementId
        </span>
       </dt>
       <dd>
        Type:
        <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">
         Autodesk.Revit.DB
         ElementId
        </a>
        <br/>
        The element that the face belongs to.
       </dd>
      </dl>
      <dl paramname="face">
       <dt>
        <span class="parameter">
         face
        </span>
       </dt>
       <dd>
        Type:
        <a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">
         Autodesk.Revit.DB
         Face
        </a>
        <br/>
        The painted element's face.
       </dd>
      </dl>
      <dl paramname="familyParameter">
       <dt>
        <span class="parameter">
         familyParameter
        </span>
       </dt>
       <dd>
        Type:
        <a href="6175e974-870e-7fbc-3df7-46105f937a6e.htm">
         Autodesk.Revit.DB
         FamilyParameter
        </a>
        <br/>
        The family parameter associated with a material.
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ApplyPaintByMaterialParameter(Document document, Extrusion extrusion, Material material)
{
   Face geoFace = <span class="highlight-keyword">null</span>;

   <span class="highlight-keyword">using</span> (Transaction transaction = <span class="highlight-keyword">new</span> Transaction(document, <span class="highlight-literal">"Painting"</span>))
   {
      transaction.Start();

      <span class="highlight-comment">// create a new type and material parameter in the document.</span>
      FamilyManager famMgr = document.FamilyManager;
      <span class="highlight-keyword">if</span> (famMgr.Types.Size == <span class="highlight-number">0</span>)
      {
         FamilyType createdType = famMgr.NewType(<span class="highlight-literal">"New_type"</span>);
         famMgr.CurrentType = createdType;
      }

      FamilyParameter materialParam =
         famMgr.AddParameter(<span class="highlight-literal">"Material_Para"</span>, BuiltInParameterGroup.PG_MATERIALS, ParameterType.Material, <span class="highlight-keyword">true</span>);

      famMgr.Set(materialParam, material.Id);

      <span class="highlight-comment">// Before acquiring the geometry, make sure the detail level is set to 'Fine'</span>
      Options geoOptions = <span class="highlight-keyword">new</span> Options();
      geoOptions.DetailLevel = ViewDetailLevel.Fine;

      <span class="highlight-comment">// Find the first geometry face of the given extrusion object</span>
      GeometryElement geoElem = extrusion.get_Geometry(geoOptions);
      IEnumerator&lt;GeometryObject&gt; geoObjectItor = geoElem.GetEnumerator();
      <span class="highlight-keyword">while</span> (geoObjectItor.MoveNext())
      {
         <span class="highlight-comment">// need to find a solid first</span>
         Solid theSolid = geoObjectItor.Current <span class="highlight-keyword">as</span> Solid;
         <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != theSolid)
         {
            <span class="highlight-keyword">foreach</span> (Face face <span class="highlight-keyword">in</span> theSolid.Faces)
            {
               geoFace = face;
               <span class="highlight-keyword">break</span>;
            }
         }
      }

      <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == geoFace)
      {
         TaskDialog.Show(<span class="highlight-literal">"Failure"</span>, <span class="highlight-literal">"Could not find a face to paint."</span>);
         transaction.RollBack();
         <span class="highlight-keyword">return</span>;
      }

      <span class="highlight-comment">// Paint a material family parameter to the extrusion face.</span>
      document.Paint(extrusion.Id, geoFace, materialParam);
      transaction.Commit();
   }

   <span class="highlight-comment">// For illustration purposes only, check if the painted material indeed got applied</span>

   <span class="highlight-keyword">bool</span> isPainted = document.IsPainted(extrusion.Id, geoFace);
   <span class="highlight-keyword">if</span> (isPainted)
   {
      ElementId paintedMatId = document.GetPaintedMaterial(extrusion.Id, geoFace);
      <span class="highlight-keyword">if</span> (paintedMatId == material.Id)
      {
         TaskDialog.Show(<span class="highlight-literal">"Painting material"</span>, <span class="highlight-literal">"Face painted successfully."</span>);
      }
   }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> ApplyPaintByMaterialParameter(document <span class="highlight-keyword">As</span> Document, extrusion <span class="highlight-keyword">As</span> Extrusion, material <span class="highlight-keyword">As</span> Material)
    <span class="highlight-keyword">Dim</span> geoFace <span class="highlight-keyword">As</span> Face = <span class="highlight-keyword">Nothing</span>

    <span class="highlight-keyword">Using</span> transaction <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(document, <span class="highlight-literal">"Painting"</span>)
        transaction.Start()

        <span class="highlight-comment">' create a new type and material parameter in the document.</span>
        <span class="highlight-keyword">Dim</span> famMgr <span class="highlight-keyword">As</span> FamilyManager = document.FamilyManager
        <span class="highlight-keyword">If</span> famMgr.Types.Size = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> createdType <span class="highlight-keyword">As</span> FamilyType = famMgr.NewType(<span class="highlight-literal">"New_type"</span>)
            famMgr.CurrentType = createdType
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

        <span class="highlight-keyword">Dim</span> materialParam <span class="highlight-keyword">As</span> FamilyParameter = famMgr.AddParameter(<span class="highlight-literal">"Material_Para"</span>, BuiltInParameterGroup.PG_MATERIALS, ParameterType.Material, <span class="highlight-keyword">True</span>)

        famMgr.[<span class="highlight-keyword">Set</span>](materialParam, material.Id)

        <span class="highlight-comment">' Before acquiring the geometry, make sure the detail level is set to 'Fine'</span>
        <span class="highlight-keyword">Dim</span> geoOptions <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Options()
        geoOptions.DetailLevel = ViewDetailLevel.Fine

        <span class="highlight-comment">' Find the first geometry face of the given extrusion object</span>
        <span class="highlight-keyword">Dim</span> geoElem <span class="highlight-keyword">As</span> GeometryElement = extrusion.Geometry(geoOptions)
        <span class="highlight-keyword">Dim</span> geoObjectItor <span class="highlight-keyword">As</span> IEnumerator(<span class="highlight-keyword">Of</span> GeometryObject) = geoElem.GetEnumerator()
        <span class="highlight-keyword">While</span> geoObjectItor.MoveNext()
            <span class="highlight-comment">' need to find a solid first</span>
            <span class="highlight-keyword">Dim</span> theSolid <span class="highlight-keyword">As</span> Solid = <span class="highlight-keyword">TryCast</span>(geoObjectItor.Current, Solid)
            <span class="highlight-keyword">If</span> theSolid <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> face <span class="highlight-keyword">As</span> Face <span class="highlight-keyword">In</span> theSolid.Faces
                    geoFace = face
                    <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
                <span class="highlight-keyword">Next</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">While</span>

        <span class="highlight-keyword">If</span> geoFace <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            TaskDialog.Show(<span class="highlight-literal">"Failure"</span>, <span class="highlight-literal">"Could not find a face to paint."</span>)
            transaction.RollBack()
            <span class="highlight-keyword">Return</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

        <span class="highlight-comment">' Paint a material family parameter to the extrusion face.</span>
        document.Paint(extrusion.Id, geoFace, materialParam)
        transaction.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

    <span class="highlight-comment">' For illustration purposes only, check if the painted material indeed got applied</span>


    <span class="highlight-keyword">Dim</span> isPainted <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = document.IsPainted(extrusion.Id, geoFace)
    <span class="highlight-keyword">If</span> isPainted <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> paintedMatId <span class="highlight-keyword">As</span> ElementId = document.GetPaintedMaterial(extrusion.Id, geoFace)
        <span class="highlight-keyword">If</span> paintedMatId = material.Id <span class="highlight-keyword">Then</span>
            TaskDialog.Show(<span class="highlight-literal">"Painting material"</span>, <span class="highlight-literal">"Face painted successfully."</span>)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table cellpadding="5" cellspacing="2" frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          The element elementId does not exist in the document.
   -or-
   The element materialId does not exist in the document.
   -or-
   The face doesn't belongs to the element.
   -or-
   The family parameter doesn't specify a material element.
   -or-
   The element's face cannot be painted.
         </td>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
        <tr>
         <td>
          <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
           Autodesk.Revit.Exceptions
           InvalidOperationException
          </a>
         </td>
         <td>
          This document is not modifiable.
   -or-
   This operation is valid only in family.
         </td>
        </tr>
        <tr>
         <td>
          <a href="53205486-5917-7c33-8e67-e362106ddc97.htm">
           Autodesk.Revit.Exceptions
           ModificationForbiddenException
          </a>
         </td>
         <td>
          The document is in failure mode: an operation has failed,
   and Revit requires the user to either cancel the operation
   or fix the problem (usually by deleting certain elements).
   -or-
   The document is being loaded, or is in the midst of another
   sensitive process.
         </td>
        </tr>
        <tr>
         <td>
          <a href="8f025460-c283-ea99-aa8a-5a36e11528f4.htm">
           Autodesk.Revit.Exceptions
           ModificationOutsideTransactionException
          </a>
         </td>
         <td>
          The document has no open transaction.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">
       Document Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="f6a99488-ae33-46f8-849d-4c68869f68cd.htm">
       Paint Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>