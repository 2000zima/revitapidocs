<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="7d0dc6df-db0e-6a07-3b42-8dde1bedb3c1.htm">
       IExportContext Interface
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     This method marks the beginning of export of a light object.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2014
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">void</span> <span class="identifier">OnLight</span>(
	<a href="3904e399-f67a-a111-d963-5f91665b233c.htm">LightNode</a> <span class="parameter">node</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Sub</span> <span class="identifier">OnLight</span> ( _
	<span class="parameter">node</span> <span class="keyword">As</span> <a href="3904e399-f67a-a111-d963-5f91665b233c.htm">LightNode</a> _
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">void</span> <span class="identifier">OnLight</span>(
	<a href="3904e399-f67a-a111-d963-5f91665b233c.htm">LightNode</a>^ <span class="parameter">node</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="node">
       <dt>
        <span class="parameter">
         node
        </span>
       </dt>
       <dd>
        Type:
        <a href="3904e399-f67a-a111-d963-5f91665b233c.htm">
         Autodesk.Revit.DB
         LightNode
        </a>
        <br/>
        A node describing the light object.
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This method is called for instances of lights</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;remarks&gt;</span>
<span class="highlight-comment">/// The Light API can be used to get more information about each particular light</span>
<span class="highlight-comment">/// &lt;/remarks&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> OnLight(LightNode node)
{
   <span class="highlight-comment">// Obtain local transform data of the light object.</span>
   Transform lightTrf = node.GetTransform();

   <span class="highlight-comment">// Note: 1. If your light coordinate system differs from the one in REvit, </span>
   <span class="highlight-comment">//   The light's local transform should be adjusted to reflect the difference.</span>

   <span class="highlight-comment">// Note 2. This local transform describes the light source position and light direction data.</span>
   <span class="highlight-comment">//   It means the "TiltAngle" property of a spot light has already been accounted for.</span>

   <span class="highlight-comment">// If a stack of transformation is maintained by the context object,</span>
   <span class="highlight-comment">// the current combined transform will be multiplied by the local transform.</span>
   Transform lightWorldTrf = m_TransformationStack.Peek().Multiply(lightTrf);

}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">' &lt;summary&gt;</span>
<span class="highlight-comment">' This method is called for instances of lights</span>
<span class="highlight-comment">' &lt;/summary&gt;</span>
<span class="highlight-comment">' &lt;remarks&gt;</span>
<span class="highlight-comment">' The Light API can be used to get more information about each particular light</span>
<span class="highlight-comment">' &lt;/remarks&gt;</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> OnLight(node <span class="highlight-keyword">As</span> LightNode) <span class="highlight-keyword">Implements</span> IExportContext.OnLight
    <span class="highlight-comment">' Obtain local transform data of the light object.</span>
    <span class="highlight-keyword">Dim</span> lightTrf <span class="highlight-keyword">As</span> Transform = node.GetTransform()

    <span class="highlight-comment">' Note: 1. If your light coordinate system differs from the one in REvit, </span>
    <span class="highlight-comment">'   The light's local transform should be adjusted to reflect the difference.</span>


    <span class="highlight-comment">' Note 2. This local transform describes the light source position and light direction data.</span>
    <span class="highlight-comment">'   It means the "TiltAngle" property of a spot light has already been accounted for.</span>


    <span class="highlight-comment">' If a stack of transformation is maintained by the context object,</span>
    <span class="highlight-comment">' the current combined transform will be multiplied by the local transform.</span>
    <span class="highlight-keyword">Dim</span> lightWorldTrf <span class="highlight-keyword">As</span> Transform = m_TransformationStack.Peek().Multiply(lightTrf)

<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="7d0dc6df-db0e-6a07-3b42-8dde1bedb3c1.htm">
       IExportContext Interface
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>