<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="5d70c697-396a-cc67-2caf-5608f556a456.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     An object that represents a spot dimension within the Revit project.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SpotDimension</span> : <a href="210f88be-e3c5-26a4-7dd8-3296f6725cce.htm">Dimension</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">SpotDimension</span> _
	<span class="keyword">Inherits</span> <a href="210f88be-e3c5-26a4-7dd8-3296f6725cce.htm">Dimension</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">SpotDimension</span> : <span class="keyword">public</span> <a href="210f88be-e3c5-26a4-7dd8-3296f6725cce.htm">Dimension</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Getinfo_SpotDimension(SpotDimension spotDimension)
{
    <span class="highlight-keyword">string</span> message = <span class="highlight-literal">"SpotDimension's Location : "</span>;
    Location location = spotDimension.Location;

    <span class="highlight-keyword">if</span> (location <span class="highlight-keyword">is</span> LocationPoint)
    {
        LocationPoint point = location <span class="highlight-keyword">as</span> LocationPoint;

        message += <span class="highlight-literal">"\n"</span> + location.GetType().Name + <span class="highlight-literal">" : "</span>;
        message += <span class="highlight-literal">"("</span> + point.Point.X + <span class="highlight-literal">", "</span> + point.Point.Y + <span class="highlight-literal">", "</span> + point.Point.Z + <span class="highlight-literal">")"</span>;
    }
    <span class="highlight-keyword">else</span>
    {
        LocationCurve locCurve = location <span class="highlight-keyword">as</span> LocationCurve;
        Curve curve = locCurve.Curve;
        message += <span class="highlight-literal">"\n"</span> + location.GetType().Name + <span class="highlight-literal">" : "</span>;
        message += <span class="highlight-literal">"\nStart Point : "</span> + <span class="highlight-literal">"("</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).X + <span class="highlight-literal">", "</span>
                    + curve.GetEndPoint(<span class="highlight-number">0</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).Z + <span class="highlight-literal">")"</span>;
        message += <span class="highlight-literal">"\nEnd point : "</span> + <span class="highlight-literal">"("</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).X + <span class="highlight-literal">", "</span>
                    + curve.GetEndPoint(<span class="highlight-number">1</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).Z + <span class="highlight-literal">")"</span>;
    }

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,message);
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> Getinfo_SpotDimension(spotDimension <span class="highlight-keyword">As</span> SpotDimension)
    <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"SpotDimension's Location : "</span>
    <span class="highlight-keyword">Dim</span> location <span class="highlight-keyword">As</span> Location = spotDimension.Location

    <span class="highlight-keyword">If</span> <span class="highlight-keyword">TypeOf</span> location <span class="highlight-keyword">Is</span> LocationPoint <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> point <span class="highlight-keyword">As</span> LocationPoint = <span class="highlight-keyword">TryCast</span>(location, LocationPoint)

        message += vbLf + location.[<span class="highlight-keyword">GetType</span>]().Name &amp; <span class="highlight-literal">" : "</span>
        message += ((<span class="highlight-literal">"("</span> + point.Point.X &amp; <span class="highlight-literal">", "</span>) + point.Point.Y &amp; <span class="highlight-literal">", "</span>) + point.Point.Z &amp; <span class="highlight-literal">")"</span>
    <span class="highlight-keyword">Else</span>
        <span class="highlight-keyword">Dim</span> locCurve <span class="highlight-keyword">As</span> LocationCurve = <span class="highlight-keyword">TryCast</span>(location, LocationCurve)
        <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Curve = locCurve.Curve
        message += vbLf + location.[<span class="highlight-keyword">GetType</span>]().Name &amp; <span class="highlight-literal">" : "</span>
        message += (((vbLf &amp; <span class="highlight-literal">"Start Point : "</span> &amp; <span class="highlight-literal">"("</span>) + curve.GetEndPoint(<span class="highlight-number">0</span>).X &amp; <span class="highlight-literal">", "</span>) + curve.GetEndPoint(<span class="highlight-number">0</span>).Y &amp; <span class="highlight-literal">", "</span>) + curve.GetEndPoint(<span class="highlight-number">0</span>).Z &amp; <span class="highlight-literal">")"</span>
        message += (((vbLf &amp; <span class="highlight-literal">"End point : "</span> &amp; <span class="highlight-literal">"("</span>) + curve.GetEndPoint(<span class="highlight-number">1</span>).X &amp; <span class="highlight-literal">", "</span>) + curve.GetEndPoint(<span class="highlight-number">1</span>).Y &amp; <span class="highlight-literal">", "</span>) + curve.GetEndPoint(<span class="highlight-number">1</span>).Z &amp; <span class="highlight-literal">")"</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
      Autodesk.Revit.DB
      Element
     </a>
     <br/>
     <a href="210f88be-e3c5-26a4-7dd8-3296f6725cce.htm">
      Autodesk.Revit.DB
      Dimension
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      SpotDimension
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="5d70c697-396a-cc67-2caf-5608f556a456.htm">
       SpotDimension Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>