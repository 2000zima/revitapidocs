<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="0a6d155e-6ef1-7215-f8f1-c1d8203797ee.htm">
       SpatialFieldManager Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Creates empty analysis results primitive associated with a face and a transform.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="958e2e12-587d-f188-5d7b-f13d7dbfdf48.htm">
      Autodesk.Revit.DB.Analysis
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2011
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">int</a> <span class="identifier">AddSpatialFieldPrimitive</span>(
	<a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">Face</a> <span class="parameter">face</span>,
	<a href="58dd01c8-b3fc-7142-e4f3-c524079a282d.htm">Transform</a> <span class="parameter">trf</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">AddSpatialFieldPrimitive</span> ( _
	<span class="parameter">face</span> <span class="keyword">As</span> <a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">Face</a>, _
	<span class="parameter">trf</span> <span class="keyword">As</span> <a href="58dd01c8-b3fc-7142-e4f3-c524079a282d.htm">Transform</a> _
) <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">Integer</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">int</a> <span class="identifier">AddSpatialFieldPrimitive</span>(
	<a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">Face</a>^ <span class="parameter">face</span>, 
	<a href="58dd01c8-b3fc-7142-e4f3-c524079a282d.htm">Transform</a>^ <span class="parameter">trf</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="face">
       <dt>
        <span class="parameter">
         face
        </span>
       </dt>
       <dd>
        Type:
        <a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">
         Autodesk.Revit.DB
         Face
        </a>
        <br/>
        Face to be associated with the primitive
       </dd>
      </dl>
      <dl paramname="trf">
       <dt>
        <span class="parameter">
         trf
        </span>
       </dt>
       <dd>
        Type:
        <a href="58dd01c8-b3fc-7142-e4f3-c524079a282d.htm">
         Autodesk.Revit.DB
         Transform
        </a>
        <br/>
        Conformal Transform to be applied to %face%
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     Unique index of primitive for future references
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      This method accepts a reference to a model face, and a transform to be applied to
   that face, allowing the display of analytical results on faces which are not
   strictly a part of the Revit model.
     </p>
     <p>
      This method should not be used if the transform is the identity transform,
   i.e. the intent is to display results on a face which is part of the Revit model.
   In that case, use the overload of this method which accepts
   a reference.
     </p>
     <p>
      If the input face is from the geometry of a symbol, the face will be considered to be
   in the location specified by its symbol geometry. If your intention is to transform the face
   relative to its location in the instance, your input transform must consist of the instance's
   transform left multiplied by the extra transform to get the results you expect.
     </p>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">// Create SpatialFieldPrimitive to display results offset from a face</span>
BoundingBoxUV bb = face.GetBoundingBox();
UV min = bb.Min;
UV max = bb.Max;

<span class="highlight-comment">// Find the face normal at the center of the face's bounding box</span>
UV faceCenter = <span class="highlight-keyword">new</span> UV((max.U + min.U) / <span class="highlight-number">2</span>, (max.V + min.V) / <span class="highlight-number">2</span>);
Transform computeDerivatives = face.ComputeDerivatives(faceCenter);
XYZ faceCenterNormal = computeDerivatives.BasisZ;

<span class="highlight-comment">// Normalize the normal vector and multiply by 2.5 </span>
XYZ faceCenterNormalMultiplied = faceCenterNormal.Normalize().Multiply(<span class="highlight-number">2.5</span>);
Transform transform = Transform.CreateTranslation(faceCenterNormalMultiplied);

<span class="highlight-comment">// Use face and transform when adding the SpatialFieldPrimitive</span>
SpatialFieldManager sfm = SpatialFieldManager.CreateSpatialFieldManager(doc.ActiveView, <span class="highlight-number">3</span>);
<span class="highlight-keyword">int</span> idx = sfm.AddSpatialFieldPrimitive(face, transform);</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">' Create SpatialFieldPrimitive to display results offset from a face</span>
<span class="highlight-keyword">Dim</span> bb <span class="highlight-keyword">As</span> BoundingBoxUV = face.GetBoundingBox()
<span class="highlight-keyword">Dim</span> min <span class="highlight-keyword">As</span> UV = bb.Min
<span class="highlight-keyword">Dim</span> max <span class="highlight-keyword">As</span> UV = bb.Max

<span class="highlight-comment">' Find the face normal at the center of the face's bounding box</span>
<span class="highlight-keyword">Dim</span> faceCenter <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> UV((max.U + min.U) / <span class="highlight-number">2</span>, (max.V + min.V) / <span class="highlight-number">2</span>)
<span class="highlight-keyword">Dim</span> computeDerivatives <span class="highlight-keyword">As</span> Transform = face.ComputeDerivatives(faceCenter)
<span class="highlight-keyword">Dim</span> faceCenterNormal <span class="highlight-keyword">As</span> XYZ = computeDerivatives.BasisZ

<span class="highlight-comment">' Normalize the normal vector and multiply by 2.5 </span>
<span class="highlight-keyword">Dim</span> faceCenterNormalMultiplied <span class="highlight-keyword">As</span> XYZ = faceCenterNormal.Normalize().Multiply(<span class="highlight-number">2.5</span>)
<span class="highlight-keyword">Dim</span> transform__1 <span class="highlight-keyword">As</span> Transform = Transform.CreateTranslation(faceCenterNormalMultiplied)

<span class="highlight-comment">' Use face and transform when adding the SpatialFieldPrimitive</span>
<span class="highlight-keyword">Dim</span> sfm <span class="highlight-keyword">As</span> SpatialFieldManager = SpatialFieldManager.CreateSpatialFieldManager(doc.ActiveView, <span class="highlight-number">3</span>)
<span class="highlight-keyword">Dim</span> idx <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = sfm.AddSpatialFieldPrimitive(face, transform__1)</code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
        <tr>
         <td>
          <a href="60f148c9-ece0-a6bb-4e12-bb4a9c8c8a24.htm">
           Autodesk.Revit.Exceptions
           ArgumentOutOfRangeException
          </a>
         </td>
         <td>
          trf is not conformal.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="0a6d155e-6ef1-7215-f8f1-c1d8203797ee.htm">
       SpatialFieldManager Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="125b85d3-9b44-c90d-2eab-7334be74117f.htm">
       AddSpatialFieldPrimitive Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="958e2e12-587d-f188-5d7b-f13d7dbfdf48.htm">
       Autodesk.Revit.DB.Analysis Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>