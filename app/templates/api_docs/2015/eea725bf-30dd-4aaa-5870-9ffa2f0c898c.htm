<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="b552fb54-8dff-6690-e16e-cc46cbc46d6b.htm">
       AnalyticalLink Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Creates a new instance of a AnalyticalLink element between two Hubs.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">
      Autodesk.Revit.DB.Structure
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2013
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">static</span> <a href="b552fb54-8dff-6690-e16e-cc46cbc46d6b.htm">AnalyticalLink</a> <span class="identifier">Create</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a> <span class="parameter">doc</span>,
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">type</span>,
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">startHubId</span>,
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">endHubId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Create</span> ( _
	<span class="parameter">doc</span> <span class="keyword">As</span> <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>, _
	<span class="parameter">type</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>, _
	<span class="parameter">startHubId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>, _
	<span class="parameter">endHubId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> _
) <span class="keyword">As</span> <a href="b552fb54-8dff-6690-e16e-cc46cbc46d6b.htm">AnalyticalLink</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">static</span> <a href="b552fb54-8dff-6690-e16e-cc46cbc46d6b.htm">AnalyticalLink</a>^ <span class="identifier">Create</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>^ <span class="parameter">doc</span>, 
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">type</span>, 
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">startHubId</span>, 
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">endHubId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="doc">
       <dt>
        <span class="parameter">
         doc
        </span>
       </dt>
       <dd>
        Type:
        <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">
         Autodesk.Revit.DB
         Document
        </a>
        <br/>
        Document to which new AnalyticalLink should be added.
       </dd>
      </dl>
      <dl paramname="type">
       <dt>
        <span class="parameter">
         type
        </span>
       </dt>
       <dd>
        Type:
        <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">
         Autodesk.Revit.DB
         ElementId
        </a>
        <br/>
        AnalyticalLinkType for the new AnalyticalLink.
       </dd>
      </dl>
      <dl paramname="startHubId">
       <dt>
        <span class="parameter">
         startHubId
        </span>
       </dt>
       <dd>
        Type:
        <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">
         Autodesk.Revit.DB
         ElementId
        </a>
        <br/>
        Hub at start of AnalyticalLink.
       </dd>
      </dl>
      <dl paramname="endHubId">
       <dt>
        <span class="parameter">
         endHubId
        </span>
       </dt>
       <dd>
        Type:
        <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">
         Autodesk.Revit.DB
         ElementId
        </a>
        <br/>
        Hub at end of AnalyticalLink.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     The newly created AnalyticalLink instance.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> CreateLink(Document doc, FamilyInstance fi1, FamilyInstance fi2)
{
    FilteredElementCollector hubCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
    hubCollector.OfClass(<span class="highlight-keyword">typeof</span>(Hub));  <span class="highlight-comment">//Get all hubs</span>
    ICollection&lt;Element&gt; allHubs = hubCollector.ToElements();
    FilteredElementCollector linktypeCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
    linktypeCollector.OfClass(<span class="highlight-keyword">typeof</span>(AnalyticalLinkType));
    ElementId firstLinkType = linktypeCollector.ToElementIds().First();  <span class="highlight-comment">//Get the first analytical link type.  </span>

    <span class="highlight-comment">// Get hub Ids from two selected family instance items</span>
    ElementId startHubId = GetHub(fi1.GetAnalyticalModel().Id, allHubs); 
    ElementId endHubId = GetHub(fi2.GetAnalyticalModel().Id, allHubs);  

    Transaction tran = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Create Link"</span>);
    tran.Start();
    <span class="highlight-comment">//Create a link between these two hubs.</span>
    AnalyticalLink createdLink = AnalyticalLink.Create(doc, firstLinkType, startHubId, endHubId);  
    tran.Commit();
}

<span class="highlight-comment">//Get the first Hub on a given AnalyticalModel element</span>
<span class="highlight-keyword">private</span> ElementId GetHub(ElementId hostId, ICollection&lt;Element&gt; allHubs)
{
    <span class="highlight-keyword">foreach</span> (Element ehub <span class="highlight-keyword">in</span> allHubs)
    {
        Hub hub = ehub <span class="highlight-keyword">as</span> Hub;
        ConnectorManager manager = hub.GetHubConnectorManager();
        ConnectorSet connectors = manager.Connectors;
        <span class="highlight-keyword">foreach</span> (Connector connector <span class="highlight-keyword">in</span> connectors)
        {
            ConnectorSet refConnectors = connector.AllRefs;
            <span class="highlight-keyword">foreach</span> (Connector refConnector <span class="highlight-keyword">in</span> refConnectors)
            {
                <span class="highlight-keyword">if</span> (refConnector.Owner.Id == hostId)
                {
                    <span class="highlight-keyword">return</span> hub.Id;
                }
            }
        }
    }
    <span class="highlight-keyword">return</span> ElementId.InvalidElementId;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> CreateLink(doc <span class="highlight-keyword">As</span> Document, fi1 <span class="highlight-keyword">As</span> FamilyInstance, fi2 <span class="highlight-keyword">As</span> FamilyInstance)
    <span class="highlight-keyword">Dim</span> hubCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
    hubCollector.OfClass(<span class="highlight-keyword">GetType</span>(Hub))
    <span class="highlight-comment">'Get all hubs</span>
    <span class="highlight-keyword">Dim</span> allHubs <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element) = hubCollector.ToElements()
    <span class="highlight-keyword">Dim</span> linktypeCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
    linktypeCollector.OfClass(<span class="highlight-keyword">GetType</span>(AnalyticalLinkType))
    <span class="highlight-keyword">Dim</span> firstLinkType <span class="highlight-keyword">As</span> ElementId = linktypeCollector.ToElementIds().First()
    <span class="highlight-comment">'Get the first analytical link type.  </span>
    <span class="highlight-comment">' Get hub Ids from two selected family instance items</span>
    <span class="highlight-keyword">Dim</span> startHubId <span class="highlight-keyword">As</span> ElementId = GetHub(fi1.GetAnalyticalModel().Id, allHubs)
    <span class="highlight-keyword">Dim</span> endHubId <span class="highlight-keyword">As</span> ElementId = GetHub(fi2.GetAnalyticalModel().Id, allHubs)

    <span class="highlight-keyword">Dim</span> tran <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Create Link"</span>)
    tran.Start()
    <span class="highlight-comment">'Create a link between these two hubs.</span>
    <span class="highlight-keyword">Dim</span> createdLink <span class="highlight-keyword">As</span> AnalyticalLink = AnalyticalLink.Create(doc, firstLinkType, startHubId, endHubId)
    tran.Commit()
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-comment">'Get the first Hub on a given AnalyticalModel element</span>
<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> GetHub(hostId <span class="highlight-keyword">As</span> ElementId, allHubs <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element)) <span class="highlight-keyword">As</span> ElementId
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> ehub <span class="highlight-keyword">As</span> Element <span class="highlight-keyword">In</span> allHubs
        <span class="highlight-keyword">Dim</span> hub <span class="highlight-keyword">As</span> Hub = <span class="highlight-keyword">TryCast</span>(ehub, Hub)
        <span class="highlight-keyword">Dim</span> manager <span class="highlight-keyword">As</span> ConnectorManager = hub.GetHubConnectorManager()
        <span class="highlight-keyword">Dim</span> connectors <span class="highlight-keyword">As</span> ConnectorSet = manager.Connectors
        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> connector <span class="highlight-keyword">As</span> Connector <span class="highlight-keyword">In</span> connectors
            <span class="highlight-keyword">Dim</span> refConnectors <span class="highlight-keyword">As</span> ConnectorSet = connector.AllRefs
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> refConnector <span class="highlight-keyword">As</span> Connector <span class="highlight-keyword">In</span> refConnectors
                <span class="highlight-keyword">If</span> refConnector.Owner.Id = hostId <span class="highlight-keyword">Then</span>
                    <span class="highlight-keyword">Return</span> hub.Id
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Next</span>
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">Return</span> ElementId.InvalidElementId
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          startHubId is not a valid Hub ID for an AnalyticalLink element.
   -or-
   endHubId is not a valid Hub ID for an AnalyticalLink element.
   -or-
   Thrown if startHubId or endHubId do not represent ids of Hubs.
   -or-
   Thrown if startHubId == endHubId.
   -or-
   Thrown if type does not represent an id of an AnalyticalLinkType.
         </td>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
        <tr>
         <td>
          <a href="3693dcdf-67fb-0128-3be8-cad150e9498e.htm">
           Autodesk.Revit.Exceptions
           DisabledDisciplineException
          </a>
         </td>
         <td>
          None of the following disciplines is enabled: Structural.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="b552fb54-8dff-6690-e16e-cc46cbc46d6b.htm">
       AnalyticalLink Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">
       Autodesk.Revit.DB.Structure Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>