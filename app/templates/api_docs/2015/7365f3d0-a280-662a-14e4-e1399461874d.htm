<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="17443734-a25a-88e2-7e88-6aa48003dc1d.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Represents the properties of a material pertinent to rendering.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="56410233-9c8f-db1d-0940-954dd9d7682c.htm">
      Autodesk.Revit.Utility
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Asset</span> : <a href="f21c9b03-eb7a-7993-c77d-e21ba5b3a20a.htm">AssetProperties</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Asset</span> _
	<span class="keyword">Inherits</span> <a href="f21c9b03-eb7a-7993-c77d-e21ba5b3a20a.htm">AssetProperties</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Asset</span> : <span class="keyword">public</span> <a href="f21c9b03-eb7a-7993-c77d-e21ba5b3a20a.htm">AssetProperties</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ReadAsset(Asset asset)
{
   <span class="highlight-comment">// Get the asset name, type and library name.</span>
   AssetType type = asset.AssetType;
   <span class="highlight-keyword">string</span> name = asset.Name;
   <span class="highlight-keyword">string</span> libraryName = asset.LibraryName;

   <span class="highlight-comment">// travel the asset properties in the asset.</span>
   <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> idx = <span class="highlight-number">0</span>; idx &lt; asset.Size; idx++)
   {
      AssetProperty prop = asset[idx];
      ReadAssetProperty(prop);
   }
}

<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ReadAssetProperty(AssetProperty prop)
{
   <span class="highlight-keyword">switch</span> (prop.Type)
   {
      <span class="highlight-comment">// Retrieve the value from simple type property is easy.</span>
      <span class="highlight-comment">// for example, retrieve bool property value.</span>
      <span class="highlight-keyword">case</span> AssetPropertyType.APT_Boolean:
         AssetPropertyBoolean boolProp = prop <span class="highlight-keyword">as</span> AssetPropertyBoolean;
         <span class="highlight-keyword">bool</span> propValue = boolProp.Value;
         <span class="highlight-keyword">break</span>;

      <span class="highlight-comment">// When you retrieve the value from the data array property,</span>
      <span class="highlight-comment">// you may need to get which value the property stands for.</span>
      <span class="highlight-comment">// for example, the APT_Double44 may be a transform data.</span>
      <span class="highlight-keyword">case</span> AssetPropertyType.APT_Double44:
         AssetPropertyDoubleArray4d transformProp = prop <span class="highlight-keyword">as</span> AssetPropertyDoubleArray4d;
         Autodesk.Revit.DB.DoubleArray tranformValue = transformProp.Value;
         <span class="highlight-keyword">break</span>;

      <span class="highlight-comment">// The APT_List contains a list of sub asset properties with same type.</span>
      <span class="highlight-keyword">case</span> AssetPropertyType.APT_List:
         AssetPropertyList propList = prop <span class="highlight-keyword">as</span> AssetPropertyList;
         IList&lt;AssetProperty&gt; subProps = propList.GetValue();
         <span class="highlight-keyword">if</span> (subProps.Count == <span class="highlight-number">0</span>)
            <span class="highlight-keyword">break</span>;
         <span class="highlight-keyword">switch</span> (subProps[<span class="highlight-number">0</span>].Type)
         {
            <span class="highlight-keyword">case</span> AssetPropertyType.APT_Integer:
               <span class="highlight-keyword">foreach</span> (AssetProperty subProp <span class="highlight-keyword">in</span> subProps)
               {
                  AssetPropertyInteger intProp = subProp <span class="highlight-keyword">as</span> AssetPropertyInteger;
                  <span class="highlight-keyword">int</span> intValue = intProp.Value;
               }
               <span class="highlight-keyword">break</span>;
         }
         <span class="highlight-keyword">break</span>;

      <span class="highlight-keyword">case</span> AssetPropertyType.APT_Asset:
         Asset propAsset = prop <span class="highlight-keyword">as</span> Asset;
         ReadAsset(propAsset);
         <span class="highlight-keyword">break</span>;
      <span class="highlight-keyword">default</span>:
         <span class="highlight-keyword">break</span>;
   }

   <span class="highlight-comment">// Get the connected properties.</span>
   <span class="highlight-comment">// please notice that the information of many texture stores here.</span>
   <span class="highlight-keyword">if</span> (prop.NumberOfConnectedProperties == <span class="highlight-number">0</span>)
      <span class="highlight-keyword">return</span>;
   <span class="highlight-keyword">foreach</span> (AssetProperty connectedProp <span class="highlight-keyword">in</span> prop.GetAllConnectedProperties())
   {
      <span class="highlight-comment">// Note: Usually, the connected property is an Asset.</span>
      ReadAssetProperty(connectedProp);
   }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> ReadAsset(asset <span class="highlight-keyword">As</span> Asset)
    <span class="highlight-comment">' Get the asset name, type and library name.</span>
    <span class="highlight-keyword">Dim</span> type <span class="highlight-keyword">As</span> AssetType = asset.AssetType
    <span class="highlight-keyword">Dim</span> name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = asset.Name
    <span class="highlight-keyword">Dim</span> libraryName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = asset.LibraryName

    <span class="highlight-comment">' travel the asset properties in the asset.</span>
    <span class="highlight-keyword">For</span> idx <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> asset.Size - <span class="highlight-number">1</span>
        <span class="highlight-keyword">Dim</span> prop <span class="highlight-keyword">As</span> AssetProperty = asset(idx)
        ReadAssetProperty(prop)
    <span class="highlight-keyword">Next</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> ReadAssetProperty(prop <span class="highlight-keyword">As</span> AssetProperty)
    <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> prop.Type
        <span class="highlight-comment">' Retrieve the value from simple type property is easy.</span>
        <span class="highlight-comment">' for example, retrieve bool property value.</span>
        <span class="highlight-keyword">Case</span> AssetPropertyType.APT_Boolean
            <span class="highlight-keyword">Dim</span> boolProp <span class="highlight-keyword">As</span> AssetPropertyBoolean = <span class="highlight-keyword">TryCast</span>(prop, AssetPropertyBoolean)
            <span class="highlight-keyword">Dim</span> propValue <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = boolProp.Value
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>

            <span class="highlight-comment">' When you retrieve the value from the data array property,</span>
            <span class="highlight-comment">' you may need to get which value the property stands for.</span>
            <span class="highlight-comment">' for example, the APT_Double44 may be a transform data.</span>
        <span class="highlight-keyword">Case</span> AssetPropertyType.APT_Double44
            <span class="highlight-keyword">Dim</span> transformProp <span class="highlight-keyword">As</span> AssetPropertyDoubleArray4d = <span class="highlight-keyword">TryCast</span>(prop, AssetPropertyDoubleArray4d)
            <span class="highlight-keyword">Dim</span> tranformValue <span class="highlight-keyword">As</span> Autodesk.Revit.DB.DoubleArray = transformProp.Value
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>

            <span class="highlight-comment">' The APT_List contains a list of sub asset properties with same type.</span>
        <span class="highlight-keyword">Case</span> AssetPropertyType.APT_List
            <span class="highlight-keyword">Dim</span> propList <span class="highlight-keyword">As</span> AssetPropertyList = <span class="highlight-keyword">TryCast</span>(prop, AssetPropertyList)
            <span class="highlight-keyword">Dim</span> subProps <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> AssetProperty) = propList.GetValue()
            <span class="highlight-keyword">If</span> subProps.Count = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> subProps(<span class="highlight-number">0</span>).Type
                <span class="highlight-keyword">Case</span> AssetPropertyType.APT_Integer
                    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> subProp <span class="highlight-keyword">As</span> AssetProperty <span class="highlight-keyword">In</span> subProps
                        <span class="highlight-keyword">Dim</span> intProp <span class="highlight-keyword">As</span> AssetPropertyInteger = <span class="highlight-keyword">TryCast</span>(subProp, AssetPropertyInteger)
                        <span class="highlight-keyword">Dim</span> intValue <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = intProp.Value
                    <span class="highlight-keyword">Next</span>
                    <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>

        <span class="highlight-keyword">Case</span> AssetPropertyType.APT_Asset
            <span class="highlight-keyword">Dim</span> propAsset <span class="highlight-keyword">As</span> Asset = <span class="highlight-keyword">TryCast</span>(prop, Asset)
            ReadAsset(propAsset)
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> <span class="highlight-keyword">Else</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>

    <span class="highlight-comment">' Get the connected properties.</span>
    <span class="highlight-comment">' please notice that the information of many texture stores here.</span>
    <span class="highlight-keyword">If</span> prop.NumberOfConnectedProperties = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> connectedProp <span class="highlight-keyword">As</span> AssetProperty <span class="highlight-keyword">In</span> prop.GetAllConnectedProperties()
        <span class="highlight-comment">' Note: Usually, the connected property is an Asset.</span>
        ReadAssetProperty(connectedProp)
    <span class="highlight-keyword">Next</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="44f260ef-8ba6-2874-1302-c61544c04b5d.htm">
      Autodesk.Revit.Utility
      AssetProperty
     </a>
     <br/>
     <a href="f21c9b03-eb7a-7993-c77d-e21ba5b3a20a.htm">
      Autodesk.Revit.Utility
      AssetProperties
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.Utility
      Asset
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="17443734-a25a-88e2-7e88-6aa48003dc1d.htm">
       Asset Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="56410233-9c8f-db1d-0940-954dd9d7682c.htm">
       Autodesk.Revit.Utility Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>