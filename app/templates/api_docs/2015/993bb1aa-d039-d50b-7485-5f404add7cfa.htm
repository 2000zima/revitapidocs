<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="cba2c84a-22c0-e6e7-a99c-67656901853a.htm">
       ItemFactoryBase Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Inserts a new instance of a family onto a face of an existing element,
 using a line on that face for its position, and a type/symbol.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
      Autodesk.Revit.Creation
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a> <span class="identifier">NewFamilyInstance</span>(
	<a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">Face</a> <span class="parameter">face</span>,
	<a href="e7329450-434a-918b-661c-65e15e0585a5.htm">Line</a> <span class="parameter">position</span>,
	<a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a> <span class="parameter">symbol</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewFamilyInstance</span> ( _
	<span class="parameter">face</span> <span class="keyword">As</span> <a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">Face</a>, _
	<span class="parameter">position</span> <span class="keyword">As</span> <a href="e7329450-434a-918b-661c-65e15e0585a5.htm">Line</a>, _
	<span class="parameter">symbol</span> <span class="keyword">As</span> <a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a> _
) <span class="keyword">As</span> <a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a>^ <span class="identifier">NewFamilyInstance</span>(
	<a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">Face</a>^ <span class="parameter">face</span>, 
	<a href="e7329450-434a-918b-661c-65e15e0585a5.htm">Line</a>^ <span class="parameter">position</span>, 
	<a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a>^ <span class="parameter">symbol</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="face">
       <dt>
        <span class="parameter">
         face
        </span>
       </dt>
       <dd>
        Type:
        <a href="e32b3b1f-66fc-57cb-6e1c-aa81d1bf3e63.htm">
         Autodesk.Revit.DB
         Face
        </a>
        <br/>
        A face of a geometry object.
       </dd>
      </dl>
      <dl paramname="position">
       <dt>
        <span class="parameter">
         position
        </span>
       </dt>
       <dd>
        Type:
        <a href="e7329450-434a-918b-661c-65e15e0585a5.htm">
         Autodesk.Revit.DB
         Line
        </a>
        <br/>
        A line on the face defining where the symbol is to be placed.
       </dd>
      </dl>
      <dl paramname="symbol">
       <dt>
        <span class="parameter">
         symbol
        </span>
       </dt>
       <dd>
        Type:
        <a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">
         Autodesk.Revit.DB
         FamilySymbol
        </a>
        <br/>
        A FamilySymbol object that represents the type of the instance that is to be inserted.
Note that this symbol must represent a family whose
        <a href="7fcd2fda-21c3-9b9b-8ef3-ae2e53e02a05.htm">
         FamilyPlacementType
        </a>
        is WorkPlaneBased or CurveBased.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     An instance of the new object if creation was successful, otherwise
     <span class="keyword">
     </span>
     <span class="nu">
      a null reference (
      <span class="keyword">
       Nothing
      </span>
      in Visual Basic)
     </span>
     .
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     Use this method to insert one family instance on a face of another element, 
using a line on the face to define the position and direction of the new symbol.
     <p>
      The type/symbol that is used must be loaded into the document before this method
is called. Families and their symbols can be loaded using the Document.LoadFamily or
Document.LoadFamilySymbol methods.
     </p>
     <p>
      The host object must support insertion of instances, otherwise this method 
will fail. If the instance fails to be created an exception may be thrown.
     </p>
     <p>
      Note: if the created family instance includes nested instances, the API framework will automatically regenerate 
the document during this method call.
     </p>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> PlaceStiffenerOnWallFace(Autodesk.Revit.DB.Document doc, Wall wall)
{
    <span class="highlight-comment">// The structural stiffeners family type is compatible with line-based face placement</span>
    FilteredElementCollector fsCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
    fsCollector.OfClass(<span class="highlight-keyword">typeof</span>(FamilySymbol)).OfCategory(BuiltInCategory.OST_StructuralStiffener);
    FamilySymbol stiffenerSymbol = fsCollector.FirstElement() <span class="highlight-keyword">as</span> FamilySymbol;

    <span class="highlight-comment">// The only way to get a Face to use with this NewFamilyInstance overload</span>
    <span class="highlight-comment">// is from Element.Geometry with ComputeReferences turned on</span>
    Face face = <span class="highlight-keyword">null</span>;
    Options geomOptions = <span class="highlight-keyword">new</span> Options();
    geomOptions.ComputeReferences = <span class="highlight-keyword">true</span>;
    GeometryElement wallGeom = wall.get_Geometry(geomOptions);
    <span class="highlight-keyword">foreach</span> (GeometryObject geomObj <span class="highlight-keyword">in</span> wallGeom)
    {
        Solid geomSolid = geomObj <span class="highlight-keyword">as</span> Solid;
        <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != geomSolid)
        {
            <span class="highlight-keyword">foreach</span> (Face geomFace <span class="highlight-keyword">in</span> geomSolid.Faces)
            {
                face = geomFace;
                <span class="highlight-keyword">break</span>;
            }
            <span class="highlight-keyword">break</span>;
        }
    }

    <span class="highlight-comment">// Generate line for path</span>
    BoundingBoxUV bbox = face.GetBoundingBox();
    UV lowerLeft = bbox.Min;
    UV upperRight = bbox.Max;
    <span class="highlight-keyword">double</span> deltaU = upperRight.U - lowerLeft.U;
    <span class="highlight-keyword">double</span> deltaV = upperRight.V - lowerLeft.V;
    <span class="highlight-keyword">double</span> vOffset = deltaV * <span class="highlight-number">0.80</span>; <span class="highlight-comment">// 80% up the wall face</span>

    UV firstPoint = lowerLeft + <span class="highlight-keyword">new</span> UV(deltaU * <span class="highlight-number">0.30</span>, vOffset);
    UV lastPoint = lowerLeft + <span class="highlight-keyword">new</span> UV(deltaU * <span class="highlight-number">0.70</span>, vOffset);

    Line line = Line.CreateBound(face.Evaluate(firstPoint), face.Evaluate(lastPoint));

    doc.Create.NewFamilyInstance(face, line, stiffenerSymbol);     
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> PlaceStiffenerOnWallFace(doc <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document, wall <span class="highlight-keyword">As</span> Wall)
    <span class="highlight-comment">' The structural stiffeners family type is compatible with line-based face placement</span>
    <span class="highlight-keyword">Dim</span> fsCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
    fsCollector.OfClass(<span class="highlight-keyword">GetType</span>(FamilySymbol)).OfCategory(BuiltInCategory.OST_StructuralStiffener)
    <span class="highlight-keyword">Dim</span> stiffenerSymbol <span class="highlight-keyword">As</span> FamilySymbol = <span class="highlight-keyword">TryCast</span>(fsCollector.FirstElement(), FamilySymbol)

    <span class="highlight-comment">' The only way to get a Face to use with this NewFamilyInstance overload</span>
    <span class="highlight-comment">' is from Element.Geometry with ComputeReferences turned on</span>
    <span class="highlight-keyword">Dim</span> face <span class="highlight-keyword">As</span> Face = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> geomOptions <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Options()
    geomOptions.ComputeReferences = <span class="highlight-keyword">True</span>
    <span class="highlight-keyword">Dim</span> wallGeom <span class="highlight-keyword">As</span> GeometryElement = wall.Geometry(geomOptions)
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> geomObj <span class="highlight-keyword">As</span> GeometryObject <span class="highlight-keyword">In</span> wallGeom
        <span class="highlight-keyword">Dim</span> geomSolid <span class="highlight-keyword">As</span> Solid = <span class="highlight-keyword">TryCast</span>(geomObj, Solid)
        <span class="highlight-keyword">If</span> geomSolid <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> geomFace <span class="highlight-keyword">As</span> Face <span class="highlight-keyword">In</span> geomSolid.Faces
                face = geomFace
                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
            <span class="highlight-keyword">Next</span>
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-comment">' Generate line for path</span>
    <span class="highlight-keyword">Dim</span> bbox <span class="highlight-keyword">As</span> BoundingBoxUV = face.GetBoundingBox()
    <span class="highlight-keyword">Dim</span> lowerLeft <span class="highlight-keyword">As</span> UV = bbox.Min
    <span class="highlight-keyword">Dim</span> upperRight <span class="highlight-keyword">As</span> UV = bbox.Max
    <span class="highlight-keyword">Dim</span> deltaU <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = upperRight.U - lowerLeft.U
    <span class="highlight-keyword">Dim</span> deltaV <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = upperRight.V - lowerLeft.V
    <span class="highlight-keyword">Dim</span> vOffset <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = deltaV * <span class="highlight-number">0.8</span>
    <span class="highlight-comment">' 80% up the wall face</span>
    <span class="highlight-keyword">Dim</span> firstPoint <span class="highlight-keyword">As</span> UV = lowerLeft + <span class="highlight-keyword">New</span> UV(deltaU * <span class="highlight-number">0.3</span>, vOffset)
    <span class="highlight-keyword">Dim</span> lastPoint <span class="highlight-keyword">As</span> UV = lowerLeft + <span class="highlight-keyword">New</span> UV(deltaU * <span class="highlight-number">0.7</span>, vOffset)

    <span class="highlight-keyword">Dim</span> line__1 <span class="highlight-keyword">As</span> Line = Line.CreateBound(face.Evaluate(firstPoint), face.Evaluate(lastPoint))

    doc.Create.NewFamilyInstance(face, line__1, stiffenerSymbol)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          Thrown when a non-optional argument was null.
         </td>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown when the function cannot get the Reference 
from the face, or, Family cannot be placed as line-based on an input face reference, because its FamilyPlacementType 
is not WorkPlaneBased or CurveBased
         </td>
        </tr>
        <tr>
         <td>
          <a href="05972c68-fa6d-3a83-d720-ad84fbc4780f.htm">
           Autodesk.Revit.Exceptions
           ArgumentsInconsistentException
          </a>
         </td>
         <td>
          Thrown when the family cannot be placed on 
this line as it does not coincide with the input face.
         </td>
        </tr>
        <tr>
         <td>
          <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
           Autodesk.Revit.Exceptions
           InvalidOperationException
          </a>
         </td>
         <td>
          Thrown when Revit is unable to place the family
instance.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="cba2c84a-22c0-e6e7-a99c-67656901853a.htm">
       ItemFactoryBase Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="451ee414-cea0-e9bd-227b-c73bc93507dd.htm">
       NewFamilyInstance Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
       Autodesk.Revit.Creation Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>