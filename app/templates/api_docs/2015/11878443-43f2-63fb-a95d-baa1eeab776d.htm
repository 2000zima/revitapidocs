<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="f1113d30-4c36-7844-1537-aad7f095cea0.htm">
       TransactionGroup Class
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Commits the transaction group.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2011
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="29b9a7a8-6754-8310-e063-622b569bb6d5.htm">TransactionStatus</a> <span class="identifier">Commit</span>()</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Commit</span> <span class="keyword">As</span> <a href="29b9a7a8-6754-8310-e063-622b569bb6d5.htm">TransactionStatus</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="29b9a7a8-6754-8310-e063-622b569bb6d5.htm">TransactionStatus</a> <span class="identifier">Commit</span>()</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     If finished successfully, this method returns TransactionStatus.Committed.
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      Committing a group does not change the model.
   It only confirms the commitment of all inner groups and transactions.
     </p>
     <p>
      Commit can be called only when all inner transaction groups and transactions are finished,
   i.e. after they were either committed or rolled back. If there is still a transaction or an inner
   transaction group open, an attempt to commit this outer group will cause an exception.
     </p>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GroupedOperations(Autodesk.Revit.DB.Document document)
{
   <span class="highlight-comment">// All and any transaction group should be enclosed in a 'using' block or guarded within </span>
   <span class="highlight-comment">// a try-catch-finally blocks to guarantee that the group does not out-live its scope.</span>
   <span class="highlight-keyword">using</span> (TransactionGroup transGroup = <span class="highlight-keyword">new</span> TransactionGroup(document, <span class="highlight-literal">"Level and Grid"</span>))
   {
      <span class="highlight-keyword">if</span> (transGroup.Start() == TransactionStatus.Started)
      {
         <span class="highlight-comment">// We are going to call two methods, each having its own local transaction.</span>
         <span class="highlight-comment">// For our compound operation to be considered successful, both the individual</span>
         <span class="highlight-comment">// transactions must succeed. If either one fails, we will roll our group back,</span>
         <span class="highlight-comment">// regardless of what transactions might have already been committed.</span>

         <span class="highlight-keyword">if</span> (CreateLevel(document, <span class="highlight-number">35.0</span>) &amp;&amp; CreateGrid(document, <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)))
         {
            <span class="highlight-comment">// The process of committing of a group does not do anything to the already committed</span>
            <span class="highlight-comment">// transactions. They will stay available on the undo menu and may still be undone</span>
            <span class="highlight-comment">// individually. If it is not desirable if one transaction from a multi-transaction</span>
            <span class="highlight-comment">// operation can be undone by th end user, then the transaction group must be</span>
            <span class="highlight-comment">// assimilated instead of committed. See TransactionGroup.Assimilate for details.</span>
            transGroup.Commit();
         }
         <span class="highlight-keyword">else</span>
         {
            <span class="highlight-comment">// Since we could not successfully finish at least one of the individual</span>
            <span class="highlight-comment">// operation, we are going to roll the entire group back, which will</span>
            <span class="highlight-comment">// undo any transaction already committed while this group was open.</span>
            transGroup.RollBack();
         }
      }
   }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GroupedOperations(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document)
    <span class="highlight-comment">' All and any transaction group should be enclosed in a 'using' block or guarded within </span>
    <span class="highlight-comment">' a try-catch-finally blocks to guarantee that the group does not out-live its scope.</span>
    <span class="highlight-keyword">Using</span> transGroup <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TransactionGroup(document, <span class="highlight-literal">"Level and Grid"</span>)
        <span class="highlight-keyword">If</span> transGroup.Start() = TransactionStatus.Started <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' We are going to call two methods, each having its own local transaction.</span>
            <span class="highlight-comment">' For our compound operation to be considered successful, both the individual</span>
            <span class="highlight-comment">' transactions must succeed. If either one fails, we will roll our group back,</span>
            <span class="highlight-comment">' regardless of what transactions might have already been committed.</span>


            <span class="highlight-keyword">If</span> CreateLevel(document, <span class="highlight-number">35.0</span>) <span class="highlight-keyword">AndAlso</span> CreateGrid(document, <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)) <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' The process of committing of a group does not do anything to the already committed</span>
                <span class="highlight-comment">' transactions. They will stay available on the undo menu and may still be undone</span>
                <span class="highlight-comment">' individually. If it is not desirable if one transaction from a multi-transaction</span>
                <span class="highlight-comment">' operation can be undone by th end user, then the transaction group must be</span>
                <span class="highlight-comment">' assimilated instead of committed. See TransactionGroup.Assimilate for details.</span>
                transGroup.Commit()
            <span class="highlight-keyword">Else</span>
                <span class="highlight-comment">' Since we could not successfully finish at least one of the individual</span>
                <span class="highlight-comment">' operation, we are going to roll the entire group back, which will</span>
                <span class="highlight-comment">' undo any transaction already committed while this group was open.</span>
                transGroup.RollBack()
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table cellpadding="5" cellspacing="2" frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
           Autodesk.Revit.Exceptions
           InvalidOperationException
          </a>
         </td>
         <td>
          The Transaction group has not been started (its status is not 'Started')..
   -or-
   The transaction's document is currently in failure mode.
   Transaction groups cannot be closed until failure handling is finished.
   You may use a transaction finalizer to close a group after the failure handling ends.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="f1113d30-4c36-7844-1537-aad7f095cea0.htm">
       TransactionGroup Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>