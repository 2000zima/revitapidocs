<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="308ebf8d-d96d-4643-cd1d-34fffcea53fd.htm">
       Transaction Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Sets the transaction's name.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SetName</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">string</a> <span class="parameter">name</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">SetName</span> ( _
	<span class="parameter">name</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> _
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">SetName</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a>^ <span class="parameter">name</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="name">
       <dt>
        <span class="parameter">
         name
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">
         System
         String
        </a>
        <br/>
        A name for the transaction.
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     A transaction needs a name before it can be started, i.e. before one
   of the 'Start' method is invoked for this transaction object.
   The name will later appear in the Undo menu in Revit after a transaction
   is successfully committed.
     <p>
      Another ways of setting the name is either during construction
   or during the
      <a href="5fb266f4-5eca-049f-6a30-f3ed76687409.htm">
       Start(String)
      </a>
      method.
     </p>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">bool</span> ModelChangingMethod(Autodesk.Revit.DB.Document document)
{
    <span class="highlight-keyword">bool</span> result = <span class="highlight-keyword">false</span>;

    <span class="highlight-comment">// All and any transaction should be enclosed in a 'using'</span>
    <span class="highlight-comment">// block or guarded within a try-catch-finally blocks</span>
    <span class="highlight-comment">// to guarantee that a transaction does not out-live its scope.</span>
    <span class="highlight-keyword">using</span> (Transaction transaction = <span class="highlight-keyword">new</span> Transaction(document))
    {
        <span class="highlight-comment">// We can either start a transaction with a name or give</span>
        <span class="highlight-comment">// it a name later, but we have to name it before we commit.</span>
        transaction.Start();

        <span class="highlight-comment">// Some modification(s) of the model here, likely resulting in </span>
        <span class="highlight-comment">// changes of the 'result' value</span>
        <span class="highlight-comment">// result = ..... </span>

        <span class="highlight-keyword">if</span> (result == <span class="highlight-keyword">true</span>)
        {
            <span class="highlight-comment">// Since the transaction is still unnamed,</span>
            <span class="highlight-comment">// we have to give it a name now before we commit</span>

            transaction.SetName(<span class="highlight-literal">"Model change"</span>);

            <span class="highlight-comment">// Now we can commit</span>
            <span class="highlight-keyword">if</span> (TransactionStatus.Committed != transaction.Commit())
            {
                result = <span class="highlight-keyword">false</span>;
            }
        }
        <span class="highlight-keyword">else</span>  <span class="highlight-comment">// if modifications failed, transaction is to be rolled back</span>
        {
            transaction.RollBack();
        }
    }
    <span class="highlight-keyword">return</span> result;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> ModelChangingMethod(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span>
    <span class="highlight-keyword">Dim</span> result <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = <span class="highlight-keyword">False</span>

    <span class="highlight-comment">' All and any transaction should be enclosed in a 'using'</span>
    <span class="highlight-comment">' block or guarded within a try-catch-finally blocks</span>
    <span class="highlight-comment">' to guarantee that a transaction does not out-live its scope.</span>
    <span class="highlight-keyword">Using</span> transaction <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(document)
        <span class="highlight-comment">' We can either start a transaction with a name or give</span>
        <span class="highlight-comment">' it a name later, but we have to name it before we commit.</span>
        transaction.Start()

        <span class="highlight-comment">' Some modification(s) of the model here, likely resulting in </span>
        <span class="highlight-comment">' changes of the 'result' value</span>
        <span class="highlight-comment">' result = ..... </span>


        <span class="highlight-keyword">If</span> result = <span class="highlight-keyword">True</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' Since the transaction is still unnamed,</span>
            <span class="highlight-comment">' we have to give it a name now before we commit</span>


            transaction.SetName(<span class="highlight-literal">"Model change"</span>)

            <span class="highlight-comment">' Now we can commit</span>
            <span class="highlight-keyword">If</span> TransactionStatus.Committed &lt;&gt; transaction.Commit() <span class="highlight-keyword">Then</span>
                result = <span class="highlight-keyword">False</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Else</span>
            <span class="highlight-comment">' if modifications failed, transaction is to be rolled back</span>
            transaction.RollBack()
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
    <span class="highlight-keyword">Return</span> result
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          The name argument is an empty string.
         </td>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="308ebf8d-d96d-4643-cd1d-34fffcea53fd.htm">
       Transaction Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>