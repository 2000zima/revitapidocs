<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="c0004971-3810-eeb8-72bd-e116886ec3c8.htm">
       OpenOptions Class
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Sets the object used to configure the worksets to open when the model is opened.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2014
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SetOpenWorksetsConfiguration</span>(
	<a href="eefef6f4-0892-4bb5-8840-5e99aebc65c9.htm">WorksetConfiguration</a> <span class="parameter">openConfiguration</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">SetOpenWorksetsConfiguration</span> ( _
	<span class="parameter">openConfiguration</span> <span class="keyword">As</span> <a href="eefef6f4-0892-4bb5-8840-5e99aebc65c9.htm">WorksetConfiguration</a> _
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">SetOpenWorksetsConfiguration</span>(
	<a href="eefef6f4-0892-4bb5-8840-5e99aebc65c9.htm">WorksetConfiguration</a>^ <span class="parameter">openConfiguration</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="openConfiguration">
       <dt>
        <span class="parameter">
         openConfiguration
        </span>
       </dt>
       <dd>
        Type:
        <a href="eefef6f4-0892-4bb5-8840-5e99aebc65c9.htm">
         Autodesk.Revit.DB
         WorksetConfiguration
        </a>
        <br/>
        The options.  If
        <span class="keyword">
        </span>
        <span class="nu">
         a null reference (
         <span class="keyword">
          Nothing
         </span>
         in Visual Basic)
        </span>
        , all user-created worksets will be opened.
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     These options are ignored for non-workshared models.
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code>Document OpenDocumentWithWorksets(Application app, ModelPath projectPath)
{
    Document doc = <span class="highlight-keyword">null</span>;
    <span class="highlight-keyword">try</span>
    {
        <span class="highlight-comment">// Get info on all the user worksets in the project prior to opening</span>
        IList&lt;WorksetPreview&gt; worksets = WorksharingUtils.GetUserWorksetInfo(projectPath);
        IList&lt;WorksetId&gt; worksetIds = <span class="highlight-keyword">new</span> List&lt;WorksetId&gt;();
        <span class="highlight-comment">// Find two predetermined worksets</span>
        <span class="highlight-keyword">foreach</span> (WorksetPreview worksetPrev <span class="highlight-keyword">in</span> worksets)
        {
            <span class="highlight-keyword">if</span> (worksetPrev.Name.CompareTo(<span class="highlight-literal">"Workset1"</span>) == <span class="highlight-number">0</span> ||
                worksetPrev.Name.CompareTo(<span class="highlight-literal">"Workset2"</span>) == <span class="highlight-number">0</span>)
            {
                worksetIds.Add(worksetPrev.Id);
            }
        }

        OpenOptions openOptions = <span class="highlight-keyword">new</span> OpenOptions();
        <span class="highlight-comment">// Setup config to close all worksets by default</span>
        WorksetConfiguration openConfig = <span class="highlight-keyword">new</span> WorksetConfiguration(WorksetConfigurationOption.CloseAllWorksets);
        <span class="highlight-comment">// Set list of worksets for opening </span>
        openConfig.Open(worksetIds);
        openOptions.SetOpenWorksetsConfiguration(openConfig);
        doc = app.OpenDocumentFile(projectPath, openOptions);
    }
    <span class="highlight-keyword">catch</span> (Exception e)
    {
        TaskDialog.Show(<span class="highlight-literal">"Open File Failed"</span>, e.Message);
    }

    <span class="highlight-keyword">return</span> doc;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> OpenDocumentWithWorksets(app <span class="highlight-keyword">As</span> Application, projectPath <span class="highlight-keyword">As</span> ModelPath) <span class="highlight-keyword">As</span> Document
    <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Try</span>
        <span class="highlight-comment">' Get info on all the user worksets in the project prior to opening</span>
        <span class="highlight-keyword">Dim</span> worksets <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> WorksetPreview) = WorksharingUtils.GetUserWorksetInfo(projectPath)
        <span class="highlight-keyword">Dim</span> worksetIds <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> WorksetId) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> WorksetId)()
        <span class="highlight-comment">' Find two predetermined worksets</span>
        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> worksetPrev <span class="highlight-keyword">As</span> WorksetPreview <span class="highlight-keyword">In</span> worksets
            <span class="highlight-keyword">If</span> worksetPrev.Name.CompareTo(<span class="highlight-literal">"Workset1"</span>) = <span class="highlight-number">0</span> <span class="highlight-keyword">OrElse</span> worksetPrev.Name.CompareTo(<span class="highlight-literal">"Workset2"</span>) = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                worksetIds.Add(worksetPrev.Id)
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Next</span>

        <span class="highlight-keyword">Dim</span> openOptions <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> OpenOptions()
        <span class="highlight-comment">' Setup config to close all worksets by default</span>
        <span class="highlight-keyword">Dim</span> openConfig <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> WorksetConfiguration(WorksetConfigurationOption.CloseAllWorksets)
        <span class="highlight-comment">' Set list of worksets for opening </span>
        openConfig.Open(worksetIds)
        openOptions.SetOpenWorksetsConfiguration(openConfig)
        doc = app.OpenDocumentFile(projectPath, openOptions)
    <span class="highlight-keyword">Catch</span> e <span class="highlight-keyword">As</span> Exception
        TaskDialog.Show(<span class="highlight-literal">"Open File Failed"</span>, e.Message)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Try</span>

    <span class="highlight-keyword">Return</span> doc
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="c0004971-3810-eeb8-72bd-e116886ec3c8.htm">
       OpenOptions Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>