<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="d2038b2b-73d0-45d9-249a-541f256fa249.htm">
       Members
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Stores vectors at one domain point.
   Each vector corresponds to a "measurement" for which this vector was calculated.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="958e2e12-587d-f188-5d7b-f13d7dbfdf48.htm">
      Autodesk.Revit.DB.Analysis
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2012
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">VectorAtPoint</span> : <a href="67c49547-b5b9-59ad-8106-65d90886a381.htm">ValueAtPointBase</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">VectorAtPoint</span> _
	<span class="keyword">Inherits</span> <a href="67c49547-b5b9-59ad-8106-65d90886a381.htm">ValueAtPointBase</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">VectorAtPoint</span> : <span class="keyword">public</span> <a href="67c49547-b5b9-59ad-8106-65d90886a381.htm">ValueAtPointBase</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">// Place analysis results in the form of vectors at each of a beam or column's analytical model curve</span>
Curve curve = familyInstance.GetAnalyticalModel().GetCurve();

Transform transform = familyInstance.GetTransform();
<span class="highlight-keyword">int</span> index = spatialFieldManager.AddSpatialFieldPrimitive(curve, Transform.Identity);

IList&lt;<span class="highlight-keyword">double</span>&gt; doubleList = <span class="highlight-keyword">new</span> List&lt;<span class="highlight-keyword">double</span>&gt;();
doubleList.Add(curve.GetEndParameter(<span class="highlight-number">0</span>)); <span class="highlight-comment">// vectors will be at each end of the analytical model curve</span>
doubleList.Add(curve.GetEndParameter(<span class="highlight-number">1</span>));
FieldDomainPointsByParameter pointsByParameter = <span class="highlight-keyword">new</span> FieldDomainPointsByParameter(doubleList);

List&lt;XYZ&gt; xyzList = <span class="highlight-keyword">new</span> List&lt;XYZ&gt;();
xyzList.Add(curve.ComputeDerivatives(<span class="highlight-number">0</span>, <span class="highlight-keyword">true</span>).BasisX.Normalize()); <span class="highlight-comment">// vectors will be tangent to the curve at its ends</span>
IList&lt;VectorAtPoint&gt; vectorList = <span class="highlight-keyword">new</span> List&lt;VectorAtPoint&gt;();
vectorList.Add(<span class="highlight-keyword">new</span> VectorAtPoint(xyzList));
xyzList.Clear();
xyzList.Add(curve.ComputeDerivatives(<span class="highlight-number">1</span>, <span class="highlight-keyword">true</span>).BasisX.Normalize().Negate());
vectorList.Add(<span class="highlight-keyword">new</span> VectorAtPoint(xyzList));
FieldValues fieldValues = <span class="highlight-keyword">new</span> FieldValues(vectorList);</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">' Place analysis results in the form of vectors at each of a beam or column's analytical model curve</span>
<span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Curve = familyInstance.GetAnalyticalModel().GetCurve()

<span class="highlight-keyword">Dim</span> transform__1 <span class="highlight-keyword">As</span> Transform = familyInstance.GetTransform()
<span class="highlight-keyword">Dim</span> index <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = spatialFieldManager.AddSpatialFieldPrimitive(curve, Transform.Identity)

<span class="highlight-keyword">Dim</span> doubleList <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">Double</span>) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">Double</span>)()
doubleList.Add(curve.GetEndParameter(<span class="highlight-number">0</span>))
<span class="highlight-comment">' vectors will be at each end of the analytical model curve</span>
doubleList.Add(curve.GetEndParameter(<span class="highlight-number">1</span>))
<span class="highlight-keyword">Dim</span> pointsByParameter <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FieldDomainPointsByParameter(doubleList)

<span class="highlight-keyword">Dim</span> xyzList <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> XYZ)()
xyzList.Add(curve.ComputeDerivatives(<span class="highlight-number">0</span>, <span class="highlight-keyword">True</span>).BasisX.Normalize())
<span class="highlight-comment">' vectors will be tangent to the curve at its ends</span>
<span class="highlight-keyword">Dim</span> vectorList <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> VectorAtPoint) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> VectorAtPoint)()
vectorList.Add(<span class="highlight-keyword">New</span> VectorAtPoint(xyzList))
xyzList.Clear()
xyzList.Add(curve.ComputeDerivatives(<span class="highlight-number">1</span>, <span class="highlight-keyword">True</span>).BasisX.Normalize().Negate())
vectorList.Add(<span class="highlight-keyword">New</span> VectorAtPoint(xyzList))
<span class="highlight-keyword">Dim</span> fieldValues <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FieldValues(vectorList)</code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="67c49547-b5b9-59ad-8106-65d90886a381.htm">
      Autodesk.Revit.DB
      ValueAtPointBase
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB.Analysis
      VectorAtPoint
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="d2038b2b-73d0-45d9-249a-541f256fa249.htm">
       VectorAtPoint Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="958e2e12-587d-f188-5d7b-f13d7dbfdf48.htm">
       Autodesk.Revit.DB.Analysis Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>