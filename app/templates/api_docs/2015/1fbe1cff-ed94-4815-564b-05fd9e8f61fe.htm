<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="7ef1b6ab-3aaa-3ac3-34c3-81d7b44534be.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     A filter used to match elements with a bounding box that intersects the given Outline.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2011
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">BoundingBoxIntersectsFilter</span> : <a href="ebc95d82-11fc-69f6-2df1-52331dd36443.htm">ElementQuickFilter</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">BoundingBoxIntersectsFilter</span> _
	<span class="keyword">Inherits</span> <a href="ebc95d82-11fc-69f6-2df1-52331dd36443.htm">ElementQuickFilter</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">BoundingBoxIntersectsFilter</span> : <span class="keyword">public</span> <a href="ebc95d82-11fc-69f6-2df1-52331dd36443.htm">ElementQuickFilter</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     This filter excludes all objects derived from View and objects derived from ElementType.
   This filter is a quick filter.
   Quick filters operate only on the ElementRecord, a low-memory class which has
   a limited interface to read element properties. Elements which are rejected
   by a quick filter will not be expanded in memory.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">// Use BoundingBoxIntersects filter to find elements with a bounding box that intersects the </span>
<span class="highlight-comment">// given Outline in the document. </span>

<span class="highlight-comment">// Create a Outline, uses a minimum and maximum XYZ point to initialize the outline. </span>
Outline myOutLn = <span class="highlight-keyword">new</span> Outline(<span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>, <span class="highlight-number">100</span>));

<span class="highlight-comment">// Create a BoundingBoxIntersects filter with this Outline</span>
BoundingBoxIntersectsFilter filter = <span class="highlight-keyword">new</span> BoundingBoxIntersectsFilter(myOutLn);

<span class="highlight-comment">// Apply the filter to the elements in the active document</span>
<span class="highlight-comment">// This filter excludes all objects derived from View and objects derived from ElementType</span>
FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
IList&lt;Element&gt; elements = collector.WherePasses(filter).ToElements();


<span class="highlight-comment">// Find all walls which don't intersect with BoundingBox: use an inverted filter to match elements</span>
<span class="highlight-comment">// Use shortcut command OfClass() to find walls only</span>
BoundingBoxIntersectsFilter invertFilter = <span class="highlight-keyword">new</span> BoundingBoxIntersectsFilter(myOutLn, <span class="highlight-keyword">true</span>); <span class="highlight-comment">// inverted filter</span>
collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
IList&lt;Element&gt; notIntersectWalls =
    collector.OfClass(<span class="highlight-keyword">typeof</span>(Wall)).WherePasses(invertFilter).ToElements();</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">' Use BoundingBoxIntersects filter to find elements with a bounding box that intersects the </span>
<span class="highlight-comment">' given Outline in the document. </span>


<span class="highlight-comment">' Create a Outline, uses a minimum and maximum XYZ point to initialize the outline. </span>
<span class="highlight-keyword">Dim</span> myOutLn <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Outline(<span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>), <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>, <span class="highlight-number">100</span>))

<span class="highlight-comment">' Create a BoundingBoxIntersects filter with this Outline</span>
<span class="highlight-keyword">Dim</span> filter <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> BoundingBoxIntersectsFilter(myOutLn)

<span class="highlight-comment">' Apply the filter to the elements in the active document</span>
<span class="highlight-comment">' This filter excludes all objects derived from View and objects derived from ElementType</span>
<span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
<span class="highlight-keyword">Dim</span> elements <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> Element) = collector.WherePasses(filter).ToElements()


<span class="highlight-comment">' Find all walls which don't intersect with BoundingBox: use an inverted filter to match elements</span>
<span class="highlight-comment">' Use shortcut command OfClass() to find walls only</span>
<span class="highlight-keyword">Dim</span> invertFilter <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> BoundingBoxIntersectsFilter(myOutLn, <span class="highlight-keyword">True</span>)
<span class="highlight-comment">' inverted filter</span>
collector = <span class="highlight-keyword">New</span> FilteredElementCollector(document)
<span class="highlight-keyword">Dim</span> notIntersectWalls <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> Element) = collector.OfClass(<span class="highlight-keyword">GetType</span>(Wall)).WherePasses(invertFilter).ToElements()</code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="b8b46cbf-9ecc-0745-ec53-c3c3b6510113.htm">
      Autodesk.Revit.DB
      ElementFilter
     </a>
     <br/>
     <a href="ebc95d82-11fc-69f6-2df1-52331dd36443.htm">
      Autodesk.Revit.DB
      ElementQuickFilter
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      BoundingBoxIntersectsFilter
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="7ef1b6ab-3aaa-3ac3-34c3-81d7b44534be.htm">
       BoundingBoxIntersectsFilter Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>