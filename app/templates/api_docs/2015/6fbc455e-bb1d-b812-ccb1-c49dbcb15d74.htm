<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="cd5dedd9-3347-3175-365f-2f325eddbd92.htm">
       Members
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Represents a set of one-dimensional point coordinates (defined usually on curve)
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="958e2e12-587d-f188-5d7b-f13d7dbfdf48.htm">
      Autodesk.Revit.DB.Analysis
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2011
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">FieldDomainPointsByParameter</span> : <a href="5b145517-1904-4b5f-2f66-0d84b259335b.htm">FieldDomainPoints</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">FieldDomainPointsByParameter</span> _
	<span class="keyword">Inherits</span> <a href="5b145517-1904-4b5f-2f66-0d84b259335b.htm">FieldDomainPoints</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">FieldDomainPointsByParameter</span> : <span class="keyword">public</span> <a href="5b145517-1904-4b5f-2f66-0d84b259335b.htm">FieldDomainPoints</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code>Document doc = commandData.Application.ActiveUIDocument.Document;
UIDocument uiDoc = commandData.Application.ActiveUIDocument;

SpatialFieldManager sfm = SpatialFieldManager.GetSpatialFieldManager(doc.ActiveView);
<span class="highlight-keyword">if</span> (sfm == <span class="highlight-keyword">null</span>)
{
    sfm = SpatialFieldManager.CreateSpatialFieldManager(doc.ActiveView, <span class="highlight-number">1</span>);
}

ReferenceArray ra = <span class="highlight-keyword">new</span> ReferenceArray();
Reference curveRef = uiDoc.Selection.PickObject(ObjectType.Element, <span class="highlight-literal">"Select a curve"</span>);
ra.Append(curveRef);

<span class="highlight-keyword">foreach</span> (Reference reference <span class="highlight-keyword">in</span> ra)
{
    ModelCurve modelCurve = doc.GetElement(reference) <span class="highlight-keyword">as</span> ModelCurve;
    Curve curve = modelCurve.GeometryCurve;
    <span class="highlight-keyword">if</span> (curve == <span class="highlight-keyword">null</span>)
    {
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Must select a curve"</span>);
        <span class="highlight-keyword">return</span> Result.Cancelled;
    }
    <span class="highlight-keyword">else</span>
    {
        <span class="highlight-keyword">int</span> idx = sfm.AddSpatialFieldPrimitive(curve.Reference);

        IList&lt;<span class="highlight-keyword">double</span>&gt; pts = <span class="highlight-keyword">new</span> List&lt;<span class="highlight-keyword">double</span>&gt;();

        <span class="highlight-keyword">double</span> u = curve.GetEndParameter(<span class="highlight-number">0</span>);
        <span class="highlight-keyword">double</span> range = curve.GetEndParameter(<span class="highlight-number">1</span>) - u;
        <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> ii = <span class="highlight-number">0</span>; ii &lt; <span class="highlight-number">10</span>; ii++)
        {
            pts.Add(u);
            u = u + range / <span class="highlight-number">10</span>;
        }

        FieldDomainPointsByParameter pnts = <span class="highlight-keyword">new</span> FieldDomainPointsByParameter(pts);

        List&lt;<span class="highlight-keyword">double</span>&gt; doubleList = <span class="highlight-keyword">new</span> List&lt;<span class="highlight-keyword">double</span>&gt;();
        IList&lt;ValueAtPoint&gt; valList = <span class="highlight-keyword">new</span> List&lt;ValueAtPoint&gt;();
        <span class="highlight-keyword">double</span> x = <span class="highlight-number">0</span>;
        <span class="highlight-keyword">while</span> (valList.Count &lt; pts.Count)
        <span class="highlight-comment">//for (double x = 0; x &lt; 1; x = x + 0.1)</span>
        {
            doubleList.Clear();
            doubleList.Add(x * <span class="highlight-number">10</span>);
            valList.Add(<span class="highlight-keyword">new</span> ValueAtPoint(doubleList));
            x = x + <span class="highlight-number">0.1</span>;
        }
        FieldValues vals = <span class="highlight-keyword">new</span> FieldValues(valList);

        AnalysisResultSchema resultSchema = <span class="highlight-keyword">new</span> AnalysisResultSchema(<span class="highlight-literal">"Schema Name"</span>, <span class="highlight-literal">"Description"</span>);
        <span class="highlight-keyword">int</span> schemaIndex = sfm.RegisterResult(resultSchema);
        sfm.UpdateSpatialFieldPrimitive(idx, pnts, vals, schemaIndex);
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = commandData.Application.ActiveUIDocument.Document
<span class="highlight-keyword">Dim</span> uiDoc <span class="highlight-keyword">As</span> UIDocument = commandData.Application.ActiveUIDocument

<span class="highlight-keyword">Dim</span> sfm <span class="highlight-keyword">As</span> SpatialFieldManager = SpatialFieldManager.GetSpatialFieldManager(doc.ActiveView)
<span class="highlight-keyword">If</span> sfm <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
    sfm = SpatialFieldManager.CreateSpatialFieldManager(doc.ActiveView, <span class="highlight-number">1</span>)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

<span class="highlight-keyword">Dim</span> ra <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ReferenceArray()
<span class="highlight-keyword">Dim</span> curveRef <span class="highlight-keyword">As</span> Reference = uiDoc.Selection.PickObject(ObjectType.Element, <span class="highlight-literal">"Select a curve"</span>)
ra.Append(curveRef)

<span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> reference <span class="highlight-keyword">As</span> Reference <span class="highlight-keyword">In</span> ra
    <span class="highlight-keyword">Dim</span> modelCurve <span class="highlight-keyword">As</span> ModelCurve = <span class="highlight-keyword">TryCast</span>(doc.GetElement(reference), ModelCurve)
    <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Curve = modelCurve.GeometryCurve
    <span class="highlight-keyword">If</span> curve <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Must select a curve"</span>)
        <span class="highlight-keyword">Return</span> Result.Cancelled
    <span class="highlight-keyword">Else</span>
        <span class="highlight-keyword">Dim</span> idx <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = sfm.AddSpatialFieldPrimitive(curve.Reference)

        <span class="highlight-keyword">Dim</span> pts <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">Double</span>) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">Double</span>)()

        <span class="highlight-keyword">Dim</span> u <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = curve.GetEndParameter(<span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> range <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = curve.GetEndParameter(<span class="highlight-number">1</span>) - u
        <span class="highlight-keyword">For</span> ii <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> <span class="highlight-number">9</span>
            pts.Add(u)
            u = u + range / <span class="highlight-number">10</span>
        <span class="highlight-keyword">Next</span>

        <span class="highlight-keyword">Dim</span> pnts <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FieldDomainPointsByParameter(pts)

        <span class="highlight-keyword">Dim</span> doubleList <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">Double</span>)()
        <span class="highlight-keyword">Dim</span> valList <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> ValueAtPoint) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> ValueAtPoint)()
        <span class="highlight-keyword">Dim</span> x <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0</span>
        <span class="highlight-keyword">While</span> valList.Count &lt; pts.Count
            <span class="highlight-comment">'for (double x = 0; x &lt; 1; x = x + 0.1)</span>
            doubleList.Clear()
            doubleList.Add(x * <span class="highlight-number">10</span>)
            valList.Add(<span class="highlight-keyword">New</span> ValueAtPoint(doubleList))
            x = x + <span class="highlight-number">0.1</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">While</span>
        <span class="highlight-keyword">Dim</span> vals <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FieldValues(valList)

        <span class="highlight-keyword">Dim</span> resultSchema <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> AnalysisResultSchema(<span class="highlight-literal">"Schema Name"</span>, <span class="highlight-literal">"Description"</span>)
        <span class="highlight-keyword">Dim</span> schemaIndex <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = sfm.RegisterResult(resultSchema)
        sfm.UpdateSpatialFieldPrimitive(idx, pnts, vals, schemaIndex)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">Next</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="5b145517-1904-4b5f-2f66-0d84b259335b.htm">
      Autodesk.Revit.DB.Analysis
      FieldDomainPoints
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB.Analysis
      FieldDomainPointsByParameter
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="cd5dedd9-3347-3175-365f-2f325eddbd92.htm">
       FieldDomainPointsByParameter Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="958e2e12-587d-f188-5d7b-f13d7dbfdf48.htm">
       Autodesk.Revit.DB.Analysis Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>