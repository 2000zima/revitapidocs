<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">
       Document Class
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Creates a floor within the project with the given horizontal profile and floor style on the specified level with the specified normal vector.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
      Autodesk.Revit.Creation
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="96cc6685-003d-ff90-1c5b-c25a4830f0f7.htm">Floor</a> <span class="identifier">NewFloor</span>(
	<a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a> <span class="parameter">profile</span>,
	<a href="b6fd8c08-7eea-1ab4-b7ab-096778b46e8f.htm">FloorType</a> <span class="parameter">floorType</span>,
	<a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a> <span class="parameter">level</span>,
	<a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">bool</a> <span class="parameter">structural</span>,
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a> <span class="parameter">normal</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewFloor</span> ( _
	<span class="parameter">profile</span> <span class="keyword">As</span> <a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a>, _
	<span class="parameter">floorType</span> <span class="keyword">As</span> <a href="b6fd8c08-7eea-1ab4-b7ab-096778b46e8f.htm">FloorType</a>, _
	<span class="parameter">level</span> <span class="keyword">As</span> <a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a>, _
	<span class="parameter">structural</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a>, _
	<span class="parameter">normal</span> <span class="keyword">As</span> <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a> _
) <span class="keyword">As</span> <a href="96cc6685-003d-ff90-1c5b-c25a4830f0f7.htm">Floor</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="96cc6685-003d-ff90-1c5b-c25a4830f0f7.htm">Floor</a>^ <span class="identifier">NewFloor</span>(
	<a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a>^ <span class="parameter">profile</span>, 
	<a href="b6fd8c08-7eea-1ab4-b7ab-096778b46e8f.htm">FloorType</a>^ <span class="parameter">floorType</span>, 
	<a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a>^ <span class="parameter">level</span>, 
	<a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">bool</a> <span class="parameter">structural</span>, 
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>^ <span class="parameter">normal</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="profile">
       <dt>
        <span class="parameter">
         profile
        </span>
       </dt>
       <dd>
        Type:
        <a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">
         Autodesk.Revit.DB
         CurveArray
        </a>
        <br/>
        An array of planar lines and arcs that represent the horizontal profile of the floor.
       </dd>
      </dl>
      <dl paramname="floorType">
       <dt>
        <span class="parameter">
         floorType
        </span>
       </dt>
       <dd>
        Type:
        <a href="b6fd8c08-7eea-1ab4-b7ab-096778b46e8f.htm">
         Autodesk.Revit.DB
         FloorType
        </a>
        <br/>
        A floor type to be used by the new floor instead of the default type.
       </dd>
      </dl>
      <dl paramname="level">
       <dt>
        <span class="parameter">
         level
        </span>
       </dt>
       <dd>
        Type:
        <a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">
         Autodesk.Revit.DB
         Level
        </a>
        <br/>
        The level on which the floor is to be placed.
       </dd>
      </dl>
      <dl paramname="structural">
       <dt>
        <span class="parameter">
         structural
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">
         System
         Boolean
        </a>
        <br/>
        If set, specifies that the floor is structural in nature.
       </dd>
      </dl>
      <dl paramname="normal">
       <dt>
        <span class="parameter">
         normal
        </span>
       </dt>
       <dd>
        Type:
        <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">
         Autodesk.Revit.DB
         XYZ
        </a>
        <br/>
        A vector that must be perpendicular to the profile which dictates which side of the floor is considered
to be upper and down.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     if successful, a new floor object within the project, otherwise
     <span class="keyword">
     </span>
     <span class="nu">
      a null reference (
      <span class="keyword">
       Nothing
      </span>
      in Visual Basic)
     </span>
     .
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     The curves of the profile must be contiguous and 
   the Face formed by profile should be suitable to create floor.
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code>Floor CreateFloor(UIApplication application, Level level)
{
    <span class="highlight-comment">// Get the Revit document</span>
    Autodesk.Revit.DB.Document document = application.ActiveUIDocument.Document;

    <span class="highlight-comment">// Get the application creation object</span>
    Autodesk.Revit.Creation.Application appCreation = application.Application.Create;

    <span class="highlight-comment">// Get a floor type for floor creation</span>
    FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    collector.OfClass(<span class="highlight-keyword">typeof</span>(FloorType));
    FloorType floorType = collector.FirstElement() <span class="highlight-keyword">as</span> FloorType;

    <span class="highlight-comment">// Build a floor profile for the floor creation</span>
    XYZ first = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
    XYZ second = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">20</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
    XYZ third = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">20</span>, <span class="highlight-number">15</span>, <span class="highlight-number">0</span>);
    XYZ fourth = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">15</span>, <span class="highlight-number">0</span>);
    CurveArray profile = <span class="highlight-keyword">new</span> CurveArray();
    profile.Append(Line.CreateBound(first, second));
    profile.Append(Line.CreateBound(second, third));
    profile.Append(Line.CreateBound(third, fourth));
    profile.Append(Line.CreateBound(fourth, first));

    <span class="highlight-comment">// The normal vector (0,0,1) that must be perpendicular to the profile.</span>
    XYZ normal = XYZ.BasisZ;

    <span class="highlight-keyword">return</span> document.Create.NewFloor(profile, floorType, level, <span class="highlight-keyword">true</span>, normal);
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateFloor(application <span class="highlight-keyword">As</span> UIApplication, level <span class="highlight-keyword">As</span> Level) <span class="highlight-keyword">As</span> Floor
    <span class="highlight-comment">' Get the Revit document</span>
    <span class="highlight-keyword">Dim</span> document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document = application.ActiveUIDocument.Document

    <span class="highlight-comment">' Get the application creation object</span>
    <span class="highlight-keyword">Dim</span> appCreation <span class="highlight-keyword">As</span> Autodesk.Revit.Creation.Application = application.Application.Create

    <span class="highlight-comment">' Get a floor type for floor creation</span>
    <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
    collector.OfClass(<span class="highlight-keyword">GetType</span>(FloorType))
    <span class="highlight-keyword">Dim</span> floorType <span class="highlight-keyword">As</span> FloorType = <span class="highlight-keyword">TryCast</span>(collector.FirstElement(), FloorType)

    <span class="highlight-comment">' Build a floor profile for the floor creation</span>
    <span class="highlight-keyword">Dim</span> first <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> second <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">20</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> third <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">20</span>, <span class="highlight-number">15</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> fourth <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">15</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> profile <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> CurveArray()
    profile.Append(Line.CreateBound(first, second))
    profile.Append(Line.CreateBound(second, third))
    profile.Append(Line.CreateBound(third, fourth))
    profile.Append(Line.CreateBound(fourth, first))

    <span class="highlight-comment">' The normal vector (0,0,1) that must be perpendicular to the profile.</span>
    <span class="highlight-keyword">Dim</span> normal <span class="highlight-keyword">As</span> XYZ = XYZ.BasisZ

    <span class="highlight-keyword">Return</span> document.Create.NewFloor(profile, floorType, level, <span class="highlight-keyword">True</span>, normal)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">
       Document Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="a026924c-ed96-761a-8d0d-2114086fe656.htm">
       NewFloor Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
       Autodesk.Revit.Creation Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>