<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="0208ce8d-f4fa-a9a3-1c25-9fd5b25ae785.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Class for 3D views
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">View3D</span> : <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">View3D</span> _
	<span class="keyword">Inherits</span> <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">View3D</span> : <span class="keyword">public</span> <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Getinfo_View3D(View3D view3D)
{
    <span class="highlight-keyword">string</span> message = <span class="highlight-literal">"View3D: "</span>;
    <span class="highlight-comment">// The position of the camera.</span>
    XYZ eyePosition = view3D.GetOrientation().EyePosition;
    message += <span class="highlight-literal">"\nCamera position: ("</span> + eyePosition.X + <span class="highlight-literal">", "</span> +
                eyePosition.Y + <span class="highlight-literal">", "</span> + eyePosition.Z + <span class="highlight-literal">")"</span>;

    <span class="highlight-comment">// Identifies whether this is a perspective view. </span>
    <span class="highlight-keyword">if</span> (view3D.IsPerspective)
    {
        message += <span class="highlight-literal">"\nThe view is a perspective."</span>;
    }

    <span class="highlight-comment">// The section box of the 3D view cuts the model by its bounds.</span>
    BoundingBoxXYZ sectionBox = view3D.GetSectionBox();
    XYZ max = sectionBox.Max; <span class="highlight-comment">//Maximum coordinates (upper-right-front corner of the box).</span>
    XYZ min = sectionBox.Min; <span class="highlight-comment">//Minimum coordinates (lower-left-rear corner of the box).</span>
    message += <span class="highlight-literal">"\nSection Box: "</span>;
    message += <span class="highlight-literal">"\nMaximum coordinates: ("</span> + max.X + <span class="highlight-literal">", "</span> + max.Y + <span class="highlight-literal">", "</span> + max.Z + <span class="highlight-literal">")"</span>;
    message += <span class="highlight-literal">"\nMinimum coordinates: ("</span> + min.X + <span class="highlight-literal">", "</span> + min.Y + <span class="highlight-literal">", "</span> + min.Z + <span class="highlight-literal">")"</span>;

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,message);
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> Getinfo_View3D(view3D <span class="highlight-keyword">As</span> View3D)
    <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"View3D: "</span>
    <span class="highlight-comment">' The position of the camera.</span>
    <span class="highlight-keyword">Dim</span> eyePosition <span class="highlight-keyword">As</span> XYZ = view3D.GetOrientation().EyePosition
    message += ((vbLf &amp; <span class="highlight-literal">"Camera position: ("</span> + eyePosition.X &amp; <span class="highlight-literal">", "</span>) + eyePosition.Y &amp; <span class="highlight-literal">", "</span>) + eyePosition.Z &amp; <span class="highlight-literal">")"</span>

    <span class="highlight-comment">' Identifies whether this is a perspective view. </span>
    <span class="highlight-keyword">If</span> view3D.IsPerspective <span class="highlight-keyword">Then</span>
        message += vbLf &amp; <span class="highlight-literal">"The view is a perspective."</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' The section box of the 3D view cuts the model by its bounds.</span>
    <span class="highlight-keyword">Dim</span> sectionBox <span class="highlight-keyword">As</span> BoundingBoxXYZ = view3D.GetSectionBox()
    <span class="highlight-keyword">Dim</span> max <span class="highlight-keyword">As</span> XYZ = sectionBox.Max
    <span class="highlight-comment">'Maximum coordinates (upper-right-front corner of the box).</span>
    <span class="highlight-keyword">Dim</span> min <span class="highlight-keyword">As</span> XYZ = sectionBox.Min
    <span class="highlight-comment">'Minimum coordinates (lower-left-rear corner of the box).</span>
    message += vbLf &amp; <span class="highlight-literal">"Section Box: "</span>
    message += ((vbLf &amp; <span class="highlight-literal">"Maximum coordinates: ("</span> + max.X &amp; <span class="highlight-literal">", "</span>) + max.Y &amp; <span class="highlight-literal">", "</span>) + max.Z &amp; <span class="highlight-literal">")"</span>
    message += ((vbLf &amp; <span class="highlight-literal">"Minimum coordinates: ("</span> + min.X &amp; <span class="highlight-literal">", "</span>) + min.Y &amp; <span class="highlight-literal">", "</span>) + min.Z &amp; <span class="highlight-literal">")"</span>

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
      Autodesk.Revit.DB
      Element
     </a>
     <br/>
     <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">
      Autodesk.Revit.DB
      View
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      View3D
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="0208ce8d-f4fa-a9a3-1c25-9fd5b25ae785.htm">
       View3D Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>