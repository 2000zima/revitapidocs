<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="c534940b-0237-0169-902e-333590e62bb3.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       See Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Represents a panel added by an External Application or External Command into the Add-Ins tab.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="e86fd90a-8957-02a6-da7f-ced248966e3e.htm">
      Autodesk.Revit.UI
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPIUI
     </span>
     (in RevitAPIUI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">RibbonPanel</span></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">RibbonPanel</span></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">RibbonPanel</span></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     The Panel class provides read and write access to the RibbonItems contained in the panel. Use of this class is not supported in Revit Macros.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> Result OnStartup(UIControlledApplication application)
{
    <span class="highlight-comment">// add new ribbon panel</span>
    RibbonPanel ribbonPanel = application.CreateRibbonPanel(<span class="highlight-literal">"NewRibbonPanel"</span>);

    <span class="highlight-comment">//Create a push button in the ribbon panel �NewRibbonPanel"</span>
    <span class="highlight-keyword">string</span> assembly = <span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\HelloWorld.dll"</span>;
    PushButton pushButton = ribbonPanel.AddItem(<span class="highlight-keyword">new</span> PushButtonData(<span class="highlight-literal">"Hello Button"</span>, 
        <span class="highlight-literal">"Hello Button"</span>, assembly, <span class="highlight-literal">"Hello.HelloButton"</span>)) <span class="highlight-keyword">as</span> PushButton;

    <span class="highlight-comment">// create bitmap image for button</span>
    Uri uriImage = <span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\39-Globe_32x32.png"</span>);
    BitmapImage largeImage = <span class="highlight-keyword">new</span> BitmapImage(uriImage);

    <span class="highlight-comment">// assign bitmap to button</span>
    pushButton.LargeImage = largeImage;

    <span class="highlight-comment">// assign a small bitmap to button which is used if command</span>
    <span class="highlight-comment">// is moved to Quick Access Toolbar</span>
    Uri uriSmallImage = <span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\39-Globe_16x16.png"</span>);
    BitmapImage smallImage = <span class="highlight-keyword">new</span> BitmapImage(uriSmallImage);

    <span class="highlight-comment">// assign small image to button</span>
    pushButton.Image = smallImage;

    <span class="highlight-comment">// add a vertical separator bar to the panel</span>
    ribbonPanel.AddSeparator();

    <span class="highlight-comment">// define 3 new buttons to be added as stacked buttons</span>
    PushButtonData buttonRed = <span class="highlight-keyword">new</span> PushButtonData (<span class="highlight-literal">"Hello Red"</span>, <span class="highlight-literal">"Hello Red"</span>, 
        assembly, <span class="highlight-literal">"Hello.HelloRed"</span>);
    buttonRed.Image = <span class="highlight-keyword">new</span> BitmapImage(<span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\Red.bmp"</span>));
    PushButtonData buttonBlue = <span class="highlight-keyword">new</span> PushButtonData(<span class="highlight-literal">"Hello Blue"</span>, <span class="highlight-literal">"Hello Blue"</span>, 
        assembly, <span class="highlight-literal">"Hello.HelloBlue"</span>);
    buttonBlue.Image = <span class="highlight-keyword">new</span> BitmapImage(<span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\Blue.bmp"</span>));
    PushButtonData buttonGreen = <span class="highlight-keyword">new</span> PushButtonData(<span class="highlight-literal">"Hello Green"</span>, <span class="highlight-literal">"Hello Green"</span>, 
        assembly, <span class="highlight-literal">"Hello.HelloGreen"</span>);
    buttonGreen.Image =
        <span class="highlight-keyword">new</span> BitmapImage(<span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\Green.bmp"</span>));

    <span class="highlight-comment">// add 3 stacked buttons to the panel</span>
    ribbonPanel.AddStackedItems(buttonRed, buttonBlue, buttonGreen);

    <span class="highlight-comment">// add a pull-down button to the panel </span>
    PulldownButton pulldownButton = ribbonPanel.AddItem(<span class="highlight-keyword">new</span> PulldownButtonData(<span class="highlight-literal">"Hello"</span>, 
        <span class="highlight-literal">"Hello 123"</span>)) <span class="highlight-keyword">as</span> PulldownButton;
    pulldownButton.LargeImage =
        <span class="highlight-keyword">new</span> BitmapImage(<span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\Hello.bmp"</span>));

    <span class="highlight-comment">// add some menu items to the pull-down button and assign bitmaps to them</span>
    PushButton buttonOne = pulldownButton.AddPushButton(<span class="highlight-keyword">new</span> PushButtonData(<span class="highlight-literal">"Hello One"</span>, 
        <span class="highlight-literal">"Hello 123"</span>, assembly, <span class="highlight-literal">"Hello.HelloOne"</span>));
    buttonOne.LargeImage =
        <span class="highlight-keyword">new</span> BitmapImage(<span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\One.bmp"</span>));
    PushButton buttonTwo = pulldownButton.AddPushButton(<span class="highlight-keyword">new</span> PushButtonData(<span class="highlight-literal">"Hello Two"</span>, 
        <span class="highlight-literal">"Hello 123"</span>, assembly, <span class="highlight-literal">"Hello.HelloTwo"</span>));
    buttonTwo.LargeImage =
        <span class="highlight-keyword">new</span> BitmapImage(<span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\Two.bmp"</span>));
    PushButton buttonThree = pulldownButton.AddPushButton(<span class="highlight-keyword">new</span> PushButtonData(<span class="highlight-literal">"Hello Three"</span>, 
        <span class="highlight-literal">"Hello 123"</span>, assembly, <span class="highlight-literal">"Hello.HelloThree"</span>));
    buttonThree.LargeImage =
        <span class="highlight-keyword">new</span> BitmapImage(<span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">@"D:\Sample\HelloWorld\bin\Debug\Three.bmp"</span>));

    <span class="highlight-keyword">return</span> Result.Succeeded;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnStartup(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnStartup
    <span class="highlight-comment">' add new ribbon panel</span>
    <span class="highlight-keyword">Dim</span> ribbonPanel <span class="highlight-keyword">As</span> RibbonPanel = application.CreateRibbonPanel(<span class="highlight-literal">"NewRibbonPanel"</span>)

    <span class="highlight-comment">'Create a push button in the ribbon panel �NewRibbonPanel"</span>
    <span class="highlight-keyword">Dim</span> assembly <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\HelloWorld.dll"</span>
    <span class="highlight-keyword">Dim</span> pushButton <span class="highlight-keyword">As</span> PushButton = <span class="highlight-keyword">TryCast</span>(ribbonPanel.AddItem(<span class="highlight-keyword">New</span> PushButtonData(<span class="highlight-literal">"Hello Button"</span>, <span class="highlight-literal">"Hello Button"</span>, assembly, <span class="highlight-literal">"Hello.HelloButton"</span>)), PushButton)

    <span class="highlight-comment">' create bitmap image for button</span>
    <span class="highlight-keyword">Dim</span> uriImage <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Uri(<span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\39-Globe_32x32.png"</span>)
    <span class="highlight-keyword">Dim</span> largeImage <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> BitmapImage(uriImage)

    <span class="highlight-comment">' assign bitmap to button</span>
    pushButton.LargeImage = largeImage

    <span class="highlight-comment">' assign a small bitmap to button which is used if command</span>
    <span class="highlight-comment">' is moved to Quick Access Toolbar</span>
    <span class="highlight-keyword">Dim</span> uriSmallImage <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Uri(<span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\39-Globe_16x16.png"</span>)
    <span class="highlight-keyword">Dim</span> smallImage <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> BitmapImage(uriSmallImage)

    <span class="highlight-comment">' assign small image to button</span>
    pushButton.Image = smallImage

    <span class="highlight-comment">' add a vertical separator bar to the panel</span>
    ribbonPanel.AddSeparator()

    <span class="highlight-comment">' define 3 new buttons to be added as stacked buttons</span>
    <span class="highlight-keyword">Dim</span> buttonRed <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> PushButtonData(<span class="highlight-literal">"Hello Red"</span>, <span class="highlight-literal">"Hello Red"</span>, assembly, <span class="highlight-literal">"Hello.HelloRed"</span>)
    buttonRed.Image = <span class="highlight-keyword">New</span> BitmapImage(<span class="highlight-keyword">New</span> Uri(<span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\Red.bmp"</span>))
    <span class="highlight-keyword">Dim</span> buttonBlue <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> PushButtonData(<span class="highlight-literal">"Hello Blue"</span>, <span class="highlight-literal">"Hello Blue"</span>, assembly, <span class="highlight-literal">"Hello.HelloBlue"</span>)
    buttonBlue.Image = <span class="highlight-keyword">New</span> BitmapImage(<span class="highlight-keyword">New</span> Uri(<span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\Blue.bmp"</span>))
    <span class="highlight-keyword">Dim</span> buttonGreen <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> PushButtonData(<span class="highlight-literal">"Hello Green"</span>, <span class="highlight-literal">"Hello Green"</span>, assembly, <span class="highlight-literal">"Hello.HelloGreen"</span>)
    buttonGreen.Image = <span class="highlight-keyword">New</span> BitmapImage(<span class="highlight-keyword">New</span> Uri(<span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\Green.bmp"</span>))

    <span class="highlight-comment">' add 3 stacked buttons to the panel</span>
    ribbonPanel.AddStackedItems(buttonRed, buttonBlue, buttonGreen)

    <span class="highlight-comment">' add a pull-down button to the panel </span>
    <span class="highlight-keyword">Dim</span> pulldownButton <span class="highlight-keyword">As</span> PulldownButton = <span class="highlight-keyword">TryCast</span>(ribbonPanel.AddItem(<span class="highlight-keyword">New</span> PulldownButtonData(<span class="highlight-literal">"Hello"</span>, <span class="highlight-literal">"Hello 123"</span>)), PulldownButton)
    pulldownButton.LargeImage = <span class="highlight-keyword">New</span> BitmapImage(<span class="highlight-keyword">New</span> Uri(<span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\Hello.bmp"</span>))

    <span class="highlight-comment">' add some menu items to the pull-down button and assign bitmaps to them</span>
    <span class="highlight-keyword">Dim</span> buttonOne <span class="highlight-keyword">As</span> PushButton = pulldownButton.AddPushButton(<span class="highlight-keyword">New</span> PushButtonData(<span class="highlight-literal">"Hello One"</span>, <span class="highlight-literal">"Hello 123"</span>, assembly, <span class="highlight-literal">"Hello.HelloOne"</span>))
    buttonOne.LargeImage = <span class="highlight-keyword">New</span> BitmapImage(<span class="highlight-keyword">New</span> Uri(<span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\One.bmp"</span>))
    <span class="highlight-keyword">Dim</span> buttonTwo <span class="highlight-keyword">As</span> PushButton = pulldownButton.AddPushButton(<span class="highlight-keyword">New</span> PushButtonData(<span class="highlight-literal">"Hello Two"</span>, <span class="highlight-literal">"Hello 123"</span>, assembly, <span class="highlight-literal">"Hello.HelloTwo"</span>))
    buttonTwo.LargeImage = <span class="highlight-keyword">New</span> BitmapImage(<span class="highlight-keyword">New</span> Uri(<span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\Two.bmp"</span>))
    <span class="highlight-keyword">Dim</span> buttonThree <span class="highlight-keyword">As</span> PushButton = pulldownButton.AddPushButton(<span class="highlight-keyword">New</span> PushButtonData(<span class="highlight-literal">"Hello Three"</span>, <span class="highlight-literal">"Hello 123"</span>, assembly, <span class="highlight-literal">"Hello.HelloThree"</span>))
    buttonThree.LargeImage = <span class="highlight-keyword">New</span> BitmapImage(<span class="highlight-keyword">New</span> Uri(<span class="highlight-literal">"D:\Sample\HelloWorld\bin\Debug\Three.bmp"</span>))

    <span class="highlight-keyword">Return</span> Result.Succeeded
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.UI
      RibbonPanel
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="c534940b-0237-0169-902e-333590e62bb3.htm">
       RibbonPanel Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="e86fd90a-8957-02a6-da7f-ced248966e3e.htm">
       Autodesk.Revit.UI Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>