<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">
       FillPatternElement Class
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Creates a new FillPatternElement.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2012
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">static</span> <a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">FillPatternElement</a> <span class="identifier">Create</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a> <span class="parameter">document</span>,
	<a href="cc546ee9-ba80-c13d-4b74-8c0e2517bc28.htm">FillPattern</a> <span class="parameter">fillPattern</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Create</span> ( _
	<span class="parameter">document</span> <span class="keyword">As</span> <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>, _
	<span class="parameter">fillPattern</span> <span class="keyword">As</span> <a href="cc546ee9-ba80-c13d-4b74-8c0e2517bc28.htm">FillPattern</a> _
) <span class="keyword">As</span> <a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">FillPatternElement</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">static</span> <a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">FillPatternElement</a>^ <span class="identifier">Create</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>^ <span class="parameter">document</span>, 
	<a href="cc546ee9-ba80-c13d-4b74-8c0e2517bc28.htm">FillPattern</a>^ <span class="parameter">fillPattern</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="document">
       <dt>
        <span class="parameter">
         document
        </span>
       </dt>
       <dd>
        Type:
        <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">
         Autodesk.Revit.DB
         Document
        </a>
        <br/>
        The document in which to create the FillPatternElement.
       </dd>
      </dl>
      <dl paramname="fillPattern">
       <dt>
        <span class="parameter">
         fillPattern
        </span>
       </dt>
       <dd>
        Type:
        <a href="cc546ee9-ba80-c13d-4b74-8c0e2517bc28.htm">
         Autodesk.Revit.DB
         FillPattern
        </a>
        <br/>
        The FillPattern associated to the newly created FillPatternElement.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     The newly created FillPatternElement.
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">// Create a complex fill pattern</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> CreateComplexFillPattern(Document doc)
{
    <span class="highlight-comment">// Create the fill pattern</span>
    FillPattern fillPattern = <span class="highlight-keyword">new</span> FillPattern(<span class="highlight-literal">"API-created"</span>, FillPatternTarget.Model,
                                              FillPatternHostOrientation.ToHost);

    <span class="highlight-comment">// Add grids</span>
    List&lt;FillGrid&gt; grids = <span class="highlight-keyword">new</span> List&lt;FillGrid&gt;();

    <span class="highlight-comment">//Horizontal lines.  </span>
    <span class="highlight-comment">// The arguments: origin, offset (vertical distance between lines), </span>
    <span class="highlight-comment">// angle, shift (delta between location of start point per line)</span>
    <span class="highlight-comment">// The last two arguments are the segments: e.g. 1.0 units on, </span>
    <span class="highlight-comment">// 0.1 units off (units are Revit units (ft))</span>
    grids.Add(CreateGrid(<span class="highlight-keyword">new</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0.55</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>));
    grids.Add(CreateGrid(<span class="highlight-keyword">new</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.5</span>), <span class="highlight-number">0.5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0.55</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>));

    <span class="highlight-comment">// Vertical lines.  </span>
    grids.Add(CreateGrid(<span class="highlight-keyword">new</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.55</span>, Math.PI / <span class="highlight-number">2</span>, <span class="highlight-number">0.5</span>, <span class="highlight-number">0.4</span>, <span class="highlight-number">0.6</span>));
    grids.Add(CreateGrid(<span class="highlight-keyword">new</span> UV(<span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.55</span>, Math.PI / <span class="highlight-number">2</span>, <span class="highlight-number">0.5</span>, <span class="highlight-number">0.4</span>, <span class="highlight-number">0.6</span>));

    fillPattern.SetFillGrids(grids);

    <span class="highlight-comment">// Create the fill pattern element. Now document is modified; transaction is needed</span>
    <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Create fill pattern"</span>))
    {
       t.Start();
       FillPatternElement patternElement = FillPatternElement.Create(doc, fillPattern);
       t.Commit();
    }
}

<span class="highlight-comment">// Creates and returns a new fill grid</span>
<span class="highlight-keyword">private</span> FillGrid CreateGrid(UV origin, <span class="highlight-keyword">double</span> offset, <span class="highlight-keyword">double</span> angle,
                            <span class="highlight-keyword">double</span> shift, <span class="highlight-keyword">params</span> <span class="highlight-keyword">double</span>[] segments)
{
    FillGrid fillGrid = <span class="highlight-keyword">new</span> FillGrid();
    fillGrid.Origin = origin;
    fillGrid.Offset = offset;
    fillGrid.Angle = angle;
    fillGrid.Shift = shift;
    List&lt;<span class="highlight-keyword">double</span>&gt; segmentsList = <span class="highlight-keyword">new</span> List&lt;<span class="highlight-keyword">double</span>&gt;();
    <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">double</span> d <span class="highlight-keyword">in</span> segments)
    {
        segmentsList.Add(d);
    }
    fillGrid.SetSegments(segmentsList);

    <span class="highlight-keyword">return</span> fillGrid;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">' Create a complex fill pattern</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> CreateComplexFillPattern(doc <span class="highlight-keyword">As</span> Document)
    <span class="highlight-comment">' Create the fill pattern</span>
    <span class="highlight-keyword">Dim</span> fillPattern <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FillPattern(<span class="highlight-literal">"API-created"</span>, FillPatternTarget.Model, FillPatternHostOrientation.ToHost)

    <span class="highlight-comment">' Add grids</span>
    <span class="highlight-keyword">Dim</span> grids <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> FillGrid)()

    <span class="highlight-comment">'Horizontal lines.  </span>
    <span class="highlight-comment">' The arguments: origin, offset (vertical distance between lines), </span>
    <span class="highlight-comment">' angle, shift (delta between location of start point per line)</span>
    <span class="highlight-comment">' The last two arguments are the segments: e.g. 1.0 units on, </span>
    <span class="highlight-comment">' 0.1 units off (units are Revit units (ft))</span>
    grids.Add(CreateGrid(<span class="highlight-keyword">New</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0.55</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>))
    grids.Add(CreateGrid(<span class="highlight-keyword">New</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.5</span>), <span class="highlight-number">0.5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0.55</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>))

    <span class="highlight-comment">' Vertical lines.  </span>
    grids.Add(CreateGrid(<span class="highlight-keyword">New</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.55</span>, Math.PI / <span class="highlight-number">2</span>, <span class="highlight-number">0.5</span>, <span class="highlight-number">0.4</span>, <span class="highlight-number">0.6</span>))
    grids.Add(CreateGrid(<span class="highlight-keyword">New</span> UV(<span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.55</span>, Math.PI / <span class="highlight-number">2</span>, <span class="highlight-number">0.5</span>, <span class="highlight-number">0.4</span>, <span class="highlight-number">0.6</span>))

    fillPattern.SetFillGrids(grids)

    <span class="highlight-comment">' Create the fill pattern element. Now document is modified; transaction is needed</span>
    <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Create fill pattern"</span>)
        t.Start()
        <span class="highlight-keyword">Dim</span> patternElement <span class="highlight-keyword">As</span> FillPatternElement = FillPatternElement.Create(doc, fillPattern)
        t.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-comment">' Creates and returns a new fill grid</span>
<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateGrid(origin <span class="highlight-keyword">As</span> UV, offset <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, angle <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, shift <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, <span class="highlight-keyword">ParamArray</span> segments <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>()) <span class="highlight-keyword">As</span> FillGrid
    <span class="highlight-keyword">Dim</span> fillGrid <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FillGrid()
    fillGrid.Origin = origin
    fillGrid.Offset = offset
    fillGrid.Angle = angle
    fillGrid.Shift = shift
    <span class="highlight-keyword">Dim</span> segmentsList <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">Double</span>)()
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> d <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> <span class="highlight-keyword">In</span> segments
        segmentsList.Add(d)
    <span class="highlight-keyword">Next</span>
    fillGrid.SetSegments(segmentsList)

    <span class="highlight-keyword">Return</span> fillGrid
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table cellpadding="5" cellspacing="2" frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">
       FillPatternElement Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>