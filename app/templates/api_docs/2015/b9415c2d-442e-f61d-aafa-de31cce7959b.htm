<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="94db8ea8-d2c3-5e71-8030-466bcb8e4426.htm">
       Application Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Subscribe to the DocumentOpened event to be notified immediately after Revit has finished opening a document.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">
      Autodesk.Revit.ApplicationServices
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2010
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> event <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>&gt; <span class="identifier">DocumentOpened</span></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> Event <span class="identifier">DocumentOpened</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>(<span class="keyword">Of</span> <a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
 <span class="keyword">event</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>^&gt;^ <span class="identifier">DocumentOpened</span> {
	<span class="keyword">void</span> <span class="keyword">add</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>^&gt;^ <span class="parameter">value</span>);
	<span class="keyword">void</span> <span class="keyword">remove</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>^&gt;^ <span class="parameter">value</span>);
}</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      This event is raised immediately after Revit has finished opening a document.
   It is raised even when document opening failed or was cancelled (during DocumentOpening event).
     </p>
     <p>
      Handlers of this event are permitted to make modifications to any document (including the active document),
   except for documents that are currently in read-only mode.
     </p>
     <p>
      Check the 'Status' field in event's argument to see whether the action itself was successful or not.
     </p>
     <p>
      This event is not cancellable, for the process of opening document has already been finished.
     </p>
     <p>
      If the action was not successful, the document may not be modified and new transactions may not be started.
     </p>
     <p>
      The following API functions are not available for the current document during this event:
     </p>
     <ul>
      <li>
       <a href="da2f27b9-7255-4950-82a2-86e1432ff9f0.htm">
        Close
       </a>
       and similar overloads.
      </li>
     </ul>
     <p>
     </p>
     <p>
      Exception
      <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
       InvalidOperationException
      </a>
      will be thrown if any of the above methods is called during this event.
     </p>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Application_DocumentOpened : IExternalApplication
{
    <span class="highlight-comment">/// &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement this method to subscribe to event.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnStartup(UIControlledApplication application)
    {
        <span class="highlight-keyword">try</span>
        {
            <span class="highlight-comment">// Register event. </span>
           application.ControlledApplication.DocumentOpened += <span class="highlight-keyword">new</span> EventHandler
                &lt;Autodesk.Revit.DB.Events.DocumentOpenedEventArgs&gt;(application_DocumentOpened);
        }
        <span class="highlight-keyword">catch</span> (Exception)
        {
            <span class="highlight-keyword">return</span> Result.Failed;
        }

        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement OnShutdown method of IExternalApplication interface to unregister subscribed event</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnShutdown(UIControlledApplication application)
    {
        <span class="highlight-comment">// remove the event.</span>
       application.ControlledApplication.DocumentOpened -= application_DocumentOpened;
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-comment">/// &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">/// Code ID: 501</span>
    <span class="highlight-comment">/// For DocumentOpened class description</span>
    <span class="highlight-comment">/// &lt;/TrivialCode&gt;</span>

    <span class="highlight-comment">/// &lt;description&gt;</span>
    <span class="highlight-comment">/// This sample demonstrates how to subscribe to the DocumentOpened event and modify the model in the event handler method. </span>
    <span class="highlight-comment">/// &lt;/description&gt;</span>
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// This is the event handler. We modify the model.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="sender"&gt;Event sender.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="args"&gt;&lt;/param&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> application_DocumentOpened(<span class="highlight-keyword">object</span> sender, DocumentOpenedEventArgs args)
    {
        <span class="highlight-comment">// get document from event args.</span>
        Document doc = args.Document;

        <span class="highlight-comment">// Following code snippet demonstrates support of DocumentOpened event to modify the model.</span>
        <span class="highlight-comment">// Because DocumentOpened supports model changes, it allows user to update document data.</span>
        <span class="highlight-comment">// Here, this sample assigns a specified value to ProjectInformation.Address property. </span>
        <span class="highlight-comment">// User can change other properties of document or create(delete) something as he likes.</span>
        <span class="highlight-comment">// </span>
        <span class="highlight-comment">// Please note that ProjectInformation property is empty for family document.</span>
        <span class="highlight-comment">// So please don't run this sample on family document.</span>
        <span class="highlight-keyword">using</span> (Transaction transaction = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Edit Address"</span>))
        {
           <span class="highlight-keyword">if</span> (transaction.Start() == TransactionStatus.Started)
           {
              doc.ProjectInformation.Address =
                  <span class="highlight-literal">"United States - Massachusetts - Waltham - 1560 Trapelo Road"</span>;
              transaction.Commit();
           }
        }
    }

    <span class="highlight-comment">/// &lt;/ExampleMethod&gt;</span>
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> Application_DocumentOpened
    <span class="highlight-keyword">Implements</span> IExternalApplication
    <span class="highlight-comment">' &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement this method to subscribe to event.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnStartup(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnStartup
        <span class="highlight-keyword">Try</span>
            <span class="highlight-comment">' Register event. </span>
            <span class="highlight-keyword">AddHandler</span> application.ControlledApplication.DocumentOpened, <span class="highlight-keyword">AddressOf</span> application_DocumentOpened
        <span class="highlight-keyword">Catch</span> generatedExceptionName <span class="highlight-keyword">As</span> Exception
            <span class="highlight-keyword">Return</span> Result.Failed
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Try</span>

        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement OnShutdown method of IExternalApplication interface to unregister subscribed event</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnShutdown(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnShutdown
        <span class="highlight-comment">' remove the event.</span>
        <span class="highlight-keyword">RemoveHandler</span> application.ControlledApplication.DocumentOpened, <span class="highlight-keyword">AddressOf</span> application_DocumentOpened
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-comment">' &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">' Code ID: 501</span>
    <span class="highlight-comment">' For DocumentOpened class description</span>
    <span class="highlight-comment">' &lt;/TrivialCode&gt;</span>


    <span class="highlight-comment">' &lt;description&gt;</span>
    <span class="highlight-comment">' This sample demonstrates how to subscribe to the DocumentOpened event and modify the model in the event handler method. </span>
    <span class="highlight-comment">' &lt;/description&gt;</span>
    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' This is the event handler. We modify the model.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-comment">' &lt;param name="sender"&gt;Event sender.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="args"&gt;&lt;/param&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> application_DocumentOpened(sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, args <span class="highlight-keyword">As</span> DocumentOpenedEventArgs)
        <span class="highlight-comment">' get document from event args.</span>
        <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = args.Document

        <span class="highlight-comment">' Following code snippet demonstrates support of DocumentOpened event to modify the model.</span>
        <span class="highlight-comment">' Because DocumentOpened supports model changes, it allows user to update document data.</span>
        <span class="highlight-comment">' Here, this sample assigns a specified value to ProjectInformation.Address property. </span>
        <span class="highlight-comment">' User can change other properties of document or create(delete) something as he likes.</span>
        <span class="highlight-comment">'</span>
        <span class="highlight-comment">' Please note that ProjectInformation property is empty for family document.</span>
        <span class="highlight-comment">' So please don't run this sample on family document.</span>
        <span class="highlight-keyword">Using</span> transaction <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Edit Address"</span>)
            <span class="highlight-keyword">If</span> transaction.Start() = TransactionStatus.Started <span class="highlight-keyword">Then</span>
                doc.ProjectInformation.Address = <span class="highlight-literal">"United States - Massachusetts - Waltham - 1560 Trapelo Road"</span>
                transaction.Commit()
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-comment">' &lt;/ExampleMethod&gt;</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="94db8ea8-d2c3-5e71-8030-466bcb8e4426.htm">
       Application Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">
       Autodesk.Revit.ApplicationServices Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>