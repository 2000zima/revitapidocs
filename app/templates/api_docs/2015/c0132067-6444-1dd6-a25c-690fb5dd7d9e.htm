<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="2d692135-d5a7-0672-5f88-b93196aa42a5.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Use this class to calculate the geometry of a spatial element and obtain the relationships between the geometry and
   the element's boundary elements.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2012
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SpatialElementGeometryCalculator</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">SpatialElementGeometryCalculator</span> _
	<span class="keyword">Implements</span> <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">SpatialElementGeometryCalculator</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     This class maintains an internal cache for geometry it has already processed. If you intend to calculate geometry
   for several elements in the same project you should use a single instance of this class. Note that the cache will
   be cleared when any change is made to the document.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">// Calculate a room's geometry and find its boundary faces</span>
SpatialElementGeometryCalculator calculator = <span class="highlight-keyword">new</span> SpatialElementGeometryCalculator(doc);
SpatialElementGeometryResults results = calculator.CalculateSpatialElementGeometry(room); <span class="highlight-comment">// compute the room geometry </span>
Solid roomSolid = results.GetGeometry(); <span class="highlight-comment">// get the solid representing the room's geometry</span>
<span class="highlight-keyword">foreach</span> (Face face <span class="highlight-keyword">in</span> roomSolid.Faces)
{
    <span class="highlight-keyword">double</span> faceArea = face.Area;
    IList&lt;SpatialElementBoundarySubface&gt; subfaceList = results.GetBoundaryFaceInfo(face); <span class="highlight-comment">// get the sub-faces for the face of the room</span>
    <span class="highlight-keyword">foreach</span> (SpatialElementBoundarySubface subface <span class="highlight-keyword">in</span> subfaceList)
    {
        <span class="highlight-keyword">if</span> (subfaceList.Count &gt; <span class="highlight-number">1</span>) <span class="highlight-comment">// there are multiple sub-faces that define the face</span>
        {
            <span class="highlight-keyword">double</span> subfaceArea = subface.GetSubface().Area; <span class="highlight-comment">// get the area of each sub-face</span>
            <span class="highlight-comment">// sub-faces exist in situations such as when a room-bounding wall has been</span>
            <span class="highlight-comment">// horizontally split and the faces of each split wall combine to create the </span>
            <span class="highlight-comment">// entire face of the room</span>
        }
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">' Calculate a room's geometry and find its boundary faces</span>
<span class="highlight-keyword">Dim</span> calculator <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> SpatialElementGeometryCalculator(doc)
<span class="highlight-keyword">Dim</span> results <span class="highlight-keyword">As</span> SpatialElementGeometryResults = calculator.CalculateSpatialElementGeometry(room)
<span class="highlight-comment">' compute the room geometry </span>
<span class="highlight-keyword">Dim</span> roomSolid <span class="highlight-keyword">As</span> Solid = results.GetGeometry()
<span class="highlight-comment">' get the solid representing the room's geometry</span>
<span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> face <span class="highlight-keyword">As</span> Face <span class="highlight-keyword">In</span> roomSolid.Faces
    <span class="highlight-keyword">Dim</span> faceArea <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = face.Area
    <span class="highlight-keyword">Dim</span> subfaceList <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> SpatialElementBoundarySubface) = results.GetBoundaryFaceInfo(face)
    <span class="highlight-comment">' get the sub-faces for the face of the room</span>
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> subface <span class="highlight-keyword">As</span> SpatialElementBoundarySubface <span class="highlight-keyword">In</span> subfaceList
        <span class="highlight-keyword">If</span> subfaceList.Count &gt; <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' there are multiple sub-faces that define the face</span>
            <span class="highlight-comment">' get the area of each sub-face</span>
            <span class="highlight-comment">' sub-faces exist in situations such as when a room-bounding wall has been</span>
            <span class="highlight-comment">' horizontally split and the faces of each split wall combine to create the </span>
            <span class="highlight-comment">' entire face of the room</span>
            <span class="highlight-keyword">Dim</span> subfaceArea <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = subface.GetSubface().Area
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>
<span class="highlight-keyword">Next</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      SpatialElementGeometryCalculator
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="2d692135-d5a7-0672-5f88-b93196aa42a5.htm">
       SpatialElementGeometryCalculator Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>