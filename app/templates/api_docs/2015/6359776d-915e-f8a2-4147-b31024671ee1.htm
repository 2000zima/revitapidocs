<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="263cf06b-98be-6f91-c4da-fb47d01688f3.htm">
       FilteredElementCollector Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Constructs a new FilteredElementCollector that will search and filter the visible elements in a view.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2011
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="identifier">FilteredElementCollector</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a> <span class="parameter">document</span>,
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">viewId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">New</span> ( _
	<span class="parameter">document</span> <span class="keyword">As</span> <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>, _
	<span class="parameter">viewId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> _
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="identifier">FilteredElementCollector</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>^ <span class="parameter">document</span>, 
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">viewId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="document">
       <dt>
        <span class="parameter">
         document
        </span>
       </dt>
       <dd>
        Type:
        <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">
         Autodesk.Revit.DB
         Document
        </a>
        <br/>
        The document that owns the view.
       </dd>
      </dl>
      <dl paramname="viewId">
       <dt>
        <span class="parameter">
         viewId
        </span>
       </dt>
       <dd>
        Type:
        <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">
         Autodesk.Revit.DB
         ElementId
        </a>
        <br/>
        The view id.
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     Elements that will be passed by the collector have graphics that may be visible in
   the input view. Some elements may still be hidden because they are obscured by other elements.
   Accessing these visible elements may require Revit to rebuild the geometry of the view.
   The first time your code constructs a collector for a given view, or the first time
   your code constructs a collector for a view whose display settings have just been changed,
   you may experience a significant performance degradation.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> CountElements(UIDocument uiDoc)
{
    StringBuilder message = <span class="highlight-keyword">new</span> StringBuilder();
    FilteredElementCollector viewCollector = 
        <span class="highlight-keyword">new</span> FilteredElementCollector(uiDoc.Document, uiDoc.ActiveView.Id);
    viewCollector.OfCategory(BuiltInCategory.OST_Walls);
    message.AppendLine(<span class="highlight-literal">"Wall category elements within active View: "</span>
       + viewCollector.ToElementIds().Count);

    FilteredElementCollector docCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(uiDoc.Document);
    docCollector.OfCategory(BuiltInCategory.OST_Walls);
    message.AppendLine(<span class="highlight-literal">"Wall category elements within document: "</span>
       + docCollector.ToElementIds().Count);

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message.ToString());
}</code></pre>
      </div>
     </span>
     <span codelanguage="CSharp" id="cbc_2" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> GetScheduleContents(ViewSchedule viewSchedule)
{
    <span class="highlight-comment">// Collect types displayed in the schedule</span>
    FilteredElementCollector typeCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(viewSchedule.Document, viewSchedule.Id);
    typeCollector.WhereElementIsElementType();

    <span class="highlight-keyword">int</span> numberOfTypes = typeCollector.Count();

    <span class="highlight-comment">// Collect instances displayed in the schedule</span>
    FilteredElementCollector instCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(viewSchedule.Document, viewSchedule.Id);
    instCollector.WhereElementIsNotElementType();

    <span class="highlight-keyword">int</span> numberOfInstances = instCollector.Count();

    TaskDialog.Show(<span class="highlight-literal">"Elements in schedule"</span>, String.Format(<span class="highlight-literal">"Types {0} instances {1}"</span>, numberOfTypes, numberOfInstances));
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_3" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> CountElements(uiDoc <span class="highlight-keyword">As</span> UIDocument)
    <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StringBuilder()
    <span class="highlight-keyword">Dim</span> viewCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(uiDoc.Document, uiDoc.ActiveView.Id)
    viewCollector.OfCategory(BuiltInCategory.OST_Walls)
    message.AppendLine(<span class="highlight-literal">"Wall category elements within active View: "</span> + viewCollector.ToElementIds().Count)

    <span class="highlight-keyword">Dim</span> docCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(uiDoc.Document)
    docCollector.OfCategory(BuiltInCategory.OST_Walls)
    message.AppendLine(<span class="highlight-literal">"Wall category elements within document: "</span> + docCollector.ToElementIds().Count)

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message.ToString())
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_4" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> GetScheduleContents(viewSchedule <span class="highlight-keyword">As</span> ViewSchedule)
    <span class="highlight-comment">' Collect types displayed in the schedule</span>
    <span class="highlight-keyword">Dim</span> typeCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(viewSchedule.Document, viewSchedule.Id)
    typeCollector.WhereElementIsElementType()

    <span class="highlight-keyword">Dim</span> numberOfTypes <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = typeCollector.Count()

    <span class="highlight-comment">' Collect instances displayed in the schedule</span>
    <span class="highlight-keyword">Dim</span> instCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(viewSchedule.Document, viewSchedule.Id)
    instCollector.WhereElementIsNotElementType()

    <span class="highlight-keyword">Dim</span> numberOfInstances <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = instCollector.Count()

    TaskDialog.Show(<span class="highlight-literal">"Elements in schedule"</span>, [<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"Types {0} instances {1}"</span>, numberOfTypes, numberOfInstances))
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          viewId is not a view.
   -or-
   viewId is not valid for element iteration, because it has no way of representing drawn elements.  Many view templates
   will fail this check.
         </td>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="263cf06b-98be-6f91-c4da-fb47d01688f3.htm">
       FilteredElementCollector Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="a9599101-043e-ddbc-f50a-8e55cd615daf.htm">
       FilteredElementCollector Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>