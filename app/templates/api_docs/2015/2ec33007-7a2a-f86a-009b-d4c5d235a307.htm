<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="2528df8e-9c01-10be-f6be-f0ebbd9ff4bc.htm">
       Members
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Represents a material element within an Autodesk Revit project.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Material</span> : <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Material</span> _
	<span class="keyword">Inherits</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Material</span> : <span class="keyword">public</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     This is the parent class for concrete material subclasses.
   Currently, the supported materials are wood, steel, generic, concrete and other.
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> GetMaterialInformation(Material material)
{
   StringBuilder message = <span class="highlight-keyword">new</span> StringBuilder(<span class="highlight-literal">"Material : "</span> + material.Name);
   <span class="highlight-comment">//color of the material</span>
   message.Append(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"\nColor: Red[{0}]; Green[{1}]; Blue[{2}]"</span>,
                   material.Color.Red, material.Color.Green, material.Color.Blue));

   <span class="highlight-comment">//cut pattern and pattern color of the material</span>

   FillPatternElement cutPattern = material.Document.GetElement(material.CutPatternId) <span class="highlight-keyword">as</span> FillPatternElement;
   <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != cutPattern)
   {
      message.Append(<span class="highlight-literal">"\nCut Pattern: "</span> + cutPattern.Name);
      message.Append(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"\nCut Pattern Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>,
                      material.CutPatternColor.Red, material.CutPatternColor.Green, material.CutPatternColor.Blue));
   }

   <span class="highlight-comment">//surface pattern and pattern color of the material</span>
   FillPatternElement surfacePattern = material.Document.GetElement(material.SurfacePatternId) <span class="highlight-keyword">as</span> FillPatternElement;
   <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != surfacePattern)
   {
      message.Append(<span class="highlight-literal">"\nSurface Pattern: "</span> + surfacePattern.Name);
      message.Append(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"\nSurface Pattern Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>,
                      material.SurfacePatternColor.Red, material.SurfacePatternColor.Green, material.SurfacePatternColor.Blue));
   }

   <span class="highlight-comment">//some shading property of the material</span>
   <span class="highlight-keyword">bool</span> glow = material.Glow;
   message.Append(<span class="highlight-literal">"\nMaterial can glow: "</span> + glow);
   <span class="highlight-keyword">int</span> shininess = material.Shininess;
   message.Append(<span class="highlight-literal">"\nShininess: "</span> + shininess);
   <span class="highlight-keyword">int</span> smoothness = material.Smoothness;
   message.Append(<span class="highlight-literal">"\nSmoothness: "</span> + smoothness);
   <span class="highlight-keyword">int</span> transparency = material.Transparency;
   message.Append(<span class="highlight-literal">"\nTransparency: "</span> + transparency);

   TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message.ToString());
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> GetMaterialInformation(material <span class="highlight-keyword">As</span> Material)
    <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StringBuilder(<span class="highlight-literal">"Material : "</span> &amp; Convert.ToString(material.Name))
    <span class="highlight-comment">'color of the material</span>
    message.Append(<span class="highlight-keyword">String</span>.Format(vbLf &amp; <span class="highlight-literal">"Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>, material.Color.Red, material.Color.Green, material.Color.Blue))

    <span class="highlight-comment">'cut pattern and pattern color of the material</span>


    <span class="highlight-keyword">Dim</span> cutPattern <span class="highlight-keyword">As</span> FillPatternElement = <span class="highlight-keyword">TryCast</span>(material.Document.GetElement(material.CutPatternId), FillPatternElement)
    <span class="highlight-keyword">If</span> cutPattern <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        message.Append(vbLf &amp; <span class="highlight-literal">"Cut Pattern: "</span> + cutPattern.Name)
        message.Append(<span class="highlight-keyword">String</span>.Format(vbLf &amp; <span class="highlight-literal">"Cut Pattern Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>, material.CutPatternColor.Red, material.CutPatternColor.Green, material.CutPatternColor.Blue))
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">'surface pattern and pattern color of the material</span>
    <span class="highlight-keyword">Dim</span> surfacePattern <span class="highlight-keyword">As</span> FillPatternElement = <span class="highlight-keyword">TryCast</span>(material.Document.GetElement(material.SurfacePatternId), FillPatternElement)
    <span class="highlight-keyword">If</span> surfacePattern <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        message.Append(vbLf &amp; <span class="highlight-literal">"Surface Pattern: "</span> + surfacePattern.Name)
        message.Append(<span class="highlight-keyword">String</span>.Format(vbLf &amp; <span class="highlight-literal">"Surface Pattern Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>, material.SurfacePatternColor.Red, material.SurfacePatternColor.Green, material.SurfacePatternColor.Blue))
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">'some shading property of the material</span>
    <span class="highlight-keyword">Dim</span> glow <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = material.Glow
    message.Append(vbLf &amp; <span class="highlight-literal">"Material can glow: "</span> &amp; glow)
    <span class="highlight-keyword">Dim</span> shininess <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = material.Shininess
    message.Append(vbLf &amp; <span class="highlight-literal">"Shininess: "</span> &amp; shininess)
    <span class="highlight-keyword">Dim</span> smoothness <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = material.Smoothness
    message.Append(vbLf &amp; <span class="highlight-literal">"Smoothness: "</span> &amp; smoothness)
    <span class="highlight-keyword">Dim</span> transparency <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = material.Transparency
    message.Append(vbLf &amp; <span class="highlight-literal">"Transparency: "</span> &amp; transparency)

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message.ToString())
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
      Autodesk.Revit.DB
      Element
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      Material
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="2528df8e-9c01-10be-f6be-f0ebbd9ff4bc.htm">
       Material Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>