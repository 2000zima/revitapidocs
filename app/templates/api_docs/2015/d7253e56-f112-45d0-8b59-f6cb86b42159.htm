<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">
       AssemblyInstance Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Compares two assembly instances and returns a result with details about the differences
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2012
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">static</span> <a href="51d7603f-be85-5d67-eeb1-7cd7a6d199a8.htm">AssemblyDifference</a> <span class="identifier">CompareAssemblyInstances</span>(
	<a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">AssemblyInstance</a> <span class="parameter">instance1</span>,
	<a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">AssemblyInstance</a> <span class="parameter">instance2</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CompareAssemblyInstances</span> ( _
	<span class="parameter">instance1</span> <span class="keyword">As</span> <a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">AssemblyInstance</a>, _
	<span class="parameter">instance2</span> <span class="keyword">As</span> <a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">AssemblyInstance</a> _
) <span class="keyword">As</span> <a href="51d7603f-be85-5d67-eeb1-7cd7a6d199a8.htm">AssemblyDifference</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">static</span> <a href="51d7603f-be85-5d67-eeb1-7cd7a6d199a8.htm">AssemblyDifference</a>^ <span class="identifier">CompareAssemblyInstances</span>(
	<a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">AssemblyInstance</a>^ <span class="parameter">instance1</span>, 
	<a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">AssemblyInstance</a>^ <span class="parameter">instance2</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="instance1">
       <dt>
        <span class="parameter">
         instance1
        </span>
       </dt>
       <dd>
        Type:
        <a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">
         Autodesk.Revit.DB
         AssemblyInstance
        </a>
        <br/>
        The first assembly instance to compare
       </dd>
      </dl>
      <dl paramname="instance2">
       <dt>
        <span class="parameter">
         instance2
        </span>
       </dt>
       <dd>
        Type:
        <a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">
         Autodesk.Revit.DB
         AssemblyInstance
        </a>
        <br/>
        the second assembly instance to compare
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     An object describing the difference between the two instances
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     Only the first found difference is returned.
   If the instances are identical, AssemblyDifferenceNone will be returned.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">// Identify the difference, if any, between two assembly instances</span>
<span class="highlight-keyword">void</span> FindAssemblyDifferences(AssemblyInstance instance1, AssemblyInstance instance2)
{
    Autodesk.Revit.DB.Document doc = instance1.Document;
        AssemblyDifference difference = AssemblyInstance.CompareAssemblyInstances(instance1, instance2);

        AssemblyDifferenceNone diffNone = difference <span class="highlight-keyword">as</span> AssemblyDifferenceNone;
        <span class="highlight-keyword">if</span> (diffNone != <span class="highlight-keyword">null</span>)
        {
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Assemblies are identical"</span>);
            <span class="highlight-keyword">return</span>;
        }

        AssemblyDifferenceConfiguration diffConfig = difference <span class="highlight-keyword">as</span> AssemblyDifferenceConfiguration;
        <span class="highlight-keyword">if</span> (diffConfig != <span class="highlight-keyword">null</span>)
        {
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Elements are not arranged in space relative to each other in the same way"</span>);
            <span class="highlight-keyword">return</span>;
        }

        AssemblyDifferenceMemberCount diffMemberCount = difference <span class="highlight-keyword">as</span> AssemblyDifferenceMemberCount;
        <span class="highlight-keyword">if</span> (diffMemberCount != <span class="highlight-keyword">null</span>)
        {
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Elements counts differ: "</span> + diffMemberCount.Count1 + <span class="highlight-literal">" &amp; "</span> + diffMemberCount.Count2);
            <span class="highlight-keyword">return</span>;
        }

        AssemblyDifferenceNamingCategory diffNameCat = difference <span class="highlight-keyword">as</span> AssemblyDifferenceNamingCategory;
        <span class="highlight-keyword">if</span> (diffNameCat != <span class="highlight-keyword">null</span>)
        {
            <span class="highlight-keyword">int</span> catInt1 = diffNameCat.NamingCategoryId1.IntegerValue;
            <span class="highlight-keyword">int</span> catInt2 = diffNameCat.NamingCategoryId2.IntegerValue;
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Naming categories differ: "</span> + 
                doc.Settings.Categories.get_Item((BuiltInCategory)catInt1).Name + <span class="highlight-literal">" &amp; "</span> +
                doc.Settings.Categories.get_Item((BuiltInCategory)catInt2).Name);
            <span class="highlight-keyword">return</span>;
        }

        AssemblyDifferenceMemberDifference memberDifference = difference <span class="highlight-keyword">as</span> AssemblyDifferenceMemberDifference;
        <span class="highlight-keyword">if</span> (memberDifference != <span class="highlight-keyword">null</span>)
        {
            AssemblyMemberDifference assemblyMemberDifference = memberDifference.MemberDifference <span class="highlight-keyword">as</span> AssemblyMemberDifference;

            AssemblyMemberDifferentCategory differentCategory = assemblyMemberDifference <span class="highlight-keyword">as</span> AssemblyMemberDifferentCategory;
            <span class="highlight-keyword">if</span> (differentCategory != <span class="highlight-keyword">null</span>)
            {
                <span class="highlight-keyword">int</span> int1 = differentCategory.CategoryId1.IntegerValue;
                <span class="highlight-keyword">int</span> int2 = differentCategory.CategoryId2.IntegerValue;
                TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Element categories differ: "</span> +
                    doc.Settings.Categories.get_Item((BuiltInCategory)int1).Name + <span class="highlight-literal">" &amp; "</span> +
                    doc.Settings.Categories.get_Item((BuiltInCategory)int2).Name);
                <span class="highlight-keyword">return</span>;
            }
            AssemblyMemberDifferentGeometry differentGeometry = assemblyMemberDifference <span class="highlight-keyword">as</span> AssemblyMemberDifferentGeometry;
            <span class="highlight-keyword">if</span> (differentGeometry != <span class="highlight-keyword">null</span>)
            {
                TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Member geometry differs"</span>);
                <span class="highlight-keyword">return</span>;
            }
            AssemblyMemberDifferentParameters differentParameters = assemblyMemberDifference <span class="highlight-keyword">as</span> AssemblyMemberDifferentParameters;
            <span class="highlight-keyword">if</span> (differentParameters != <span class="highlight-keyword">null</span>)
            {
                TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Member parameters differs"</span>);
                <span class="highlight-keyword">return</span>;
            }
            AssemblyMemberDifferentType differentType = assemblyMemberDifference <span class="highlight-keyword">as</span> AssemblyMemberDifferentType;
            <span class="highlight-keyword">if</span> (differentType != <span class="highlight-keyword">null</span>)
            {
                TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Element types differ: "</span> + doc.GetElement(differentType.TypeId1).Name + <span class="highlight-literal">" &amp; "</span> + doc.GetElement(differentType.TypeId2).Name);
                <span class="highlight-keyword">return</span>;
            }
        }
        <span class="highlight-keyword">return</span>;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-comment">' Identify the difference, if any, between two assembly instances</span>
<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> FindAssemblyDifferences(instance1 <span class="highlight-keyword">As</span> AssemblyInstance, instance2 <span class="highlight-keyword">As</span> AssemblyInstance)
    <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document = instance1.Document
    <span class="highlight-keyword">Dim</span> difference <span class="highlight-keyword">As</span> AssemblyDifference = AssemblyInstance.CompareAssemblyInstances(instance1, instance2)

    <span class="highlight-keyword">Dim</span> diffNone <span class="highlight-keyword">As</span> AssemblyDifferenceNone = <span class="highlight-keyword">TryCast</span>(difference, AssemblyDifferenceNone)
    <span class="highlight-keyword">If</span> diffNone <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Assemblies are identical"</span>)
        <span class="highlight-keyword">Return</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> diffConfig <span class="highlight-keyword">As</span> AssemblyDifferenceConfiguration = <span class="highlight-keyword">TryCast</span>(difference, AssemblyDifferenceConfiguration)
    <span class="highlight-keyword">If</span> diffConfig <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Elements are not arranged in space relative to each other in the same way"</span>)
        <span class="highlight-keyword">Return</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> diffMemberCount <span class="highlight-keyword">As</span> AssemblyDifferenceMemberCount = <span class="highlight-keyword">TryCast</span>(difference, AssemblyDifferenceMemberCount)
    <span class="highlight-keyword">If</span> diffMemberCount <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, (<span class="highlight-literal">"Elements counts differ: "</span> + diffMemberCount.Count1 &amp; <span class="highlight-literal">" &amp; "</span>) + diffMemberCount.Count2)
        <span class="highlight-keyword">Return</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> diffNameCat <span class="highlight-keyword">As</span> AssemblyDifferenceNamingCategory = <span class="highlight-keyword">TryCast</span>(difference, AssemblyDifferenceNamingCategory)
    <span class="highlight-keyword">If</span> diffNameCat <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> catInt1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = diffNameCat.NamingCategoryId1.IntegerValue
        <span class="highlight-keyword">Dim</span> catInt2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = diffNameCat.NamingCategoryId2.IntegerValue
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, (<span class="highlight-literal">"Naming categories differ: "</span> + doc.Settings.Categories.Item(<span class="highlight-keyword">DirectCast</span>(catInt1, BuiltInCategory)).Name &amp; <span class="highlight-literal">" &amp; "</span>) + doc.Settings.Categories.Item(<span class="highlight-keyword">DirectCast</span>(catInt2, BuiltInCategory)).Name)
        <span class="highlight-keyword">Return</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> memberDifference <span class="highlight-keyword">As</span> AssemblyDifferenceMemberDifference = <span class="highlight-keyword">TryCast</span>(difference, AssemblyDifferenceMemberDifference)
    <span class="highlight-keyword">If</span> memberDifference <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> assemblyMemberDifference <span class="highlight-keyword">As</span> AssemblyMemberDifference = <span class="highlight-keyword">TryCast</span>(memberDifference.MemberDifference, AssemblyMemberDifference)

        <span class="highlight-keyword">Dim</span> differentCategory <span class="highlight-keyword">As</span> AssemblyMemberDifferentCategory = <span class="highlight-keyword">TryCast</span>(assemblyMemberDifference, AssemblyMemberDifferentCategory)
        <span class="highlight-keyword">If</span> differentCategory <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> int1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = differentCategory.CategoryId1.IntegerValue
            <span class="highlight-keyword">Dim</span> int2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = differentCategory.CategoryId2.IntegerValue
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, (<span class="highlight-literal">"Element categories differ: "</span> + doc.Settings.Categories.Item(<span class="highlight-keyword">DirectCast</span>(int1, BuiltInCategory)).Name &amp; <span class="highlight-literal">" &amp; "</span>) + doc.Settings.Categories.Item(<span class="highlight-keyword">DirectCast</span>(int2, BuiltInCategory)).Name)
            <span class="highlight-keyword">Return</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Dim</span> differentGeometry <span class="highlight-keyword">As</span> AssemblyMemberDifferentGeometry = <span class="highlight-keyword">TryCast</span>(assemblyMemberDifference, AssemblyMemberDifferentGeometry)
        <span class="highlight-keyword">If</span> differentGeometry <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Member geometry differs"</span>)
            <span class="highlight-keyword">Return</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Dim</span> differentParameters <span class="highlight-keyword">As</span> AssemblyMemberDifferentParameters = <span class="highlight-keyword">TryCast</span>(assemblyMemberDifference, AssemblyMemberDifferentParameters)
        <span class="highlight-keyword">If</span> differentParameters <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Member parameters differs"</span>)
            <span class="highlight-keyword">Return</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Dim</span> differentType <span class="highlight-keyword">As</span> AssemblyMemberDifferentType = <span class="highlight-keyword">TryCast</span>(assemblyMemberDifference, AssemblyMemberDifferentType)
        <span class="highlight-keyword">If</span> differentType <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, (<span class="highlight-literal">"Element types differ: "</span> + doc.GetElement(differentType.TypeId1).Name &amp; <span class="highlight-literal">" &amp; "</span>) + doc.GetElement(differentType.TypeId2).Name)
            <span class="highlight-keyword">Return</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="4e60704c-dfe3-72b6-7892-6440503fa078.htm">
       AssemblyInstance Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>