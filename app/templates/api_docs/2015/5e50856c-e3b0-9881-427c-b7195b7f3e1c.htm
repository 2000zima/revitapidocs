<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="31b73d46-7d67-5dbb-4dad-80aa597c9afc.htm">
       Selection Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     The elements that are shown as selected in the Revit user-interface.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="11785869-cc9e-03fc-97db-767a59af10a1.htm">
      Autodesk.Revit.UI.Selection
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPIUI
     </span>
     (in RevitAPIUI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code>[<a href="http://msdn2.microsoft.com/en-us/library/fwz0y5c2" target="_blank">ObsoleteAttribute</a>("This property is deprecated in Revit 2015. Use GetElementIds() and SetElementIds instead.")]
<span class="keyword">public</span> <a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a> <span class="identifier">Elements</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code>&lt;<a href="http://msdn2.microsoft.com/en-us/library/fwz0y5c2" target="_blank">ObsoleteAttribute</a>("This property is deprecated in Revit 2015. Use GetElementIds() and SetElementIds instead.")&gt; _
<span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">Elements</span> <span class="keyword">As</span> <a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code>[<a href="http://msdn2.microsoft.com/en-us/library/fwz0y5c2" target="_blank">ObsoleteAttribute</a>(L"This property is deprecated in Revit 2015. Use GetElementIds() and SetElementIds instead.")]
<span class="keyword">public</span>:
<span class="keyword">property</span> <a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a>^ <span class="identifier">Elements</span> {
	<a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a>^ <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a>^ <span class="parameter">value</span>);
}</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <h4 class="subHeading">
      Field Value
     </h4>
     The selected elements.
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     PickOne and WindowSelect add to this set because they modify the set of elements selected in the user-interface
after the External Command is complete. Selections made with PickObject, PickObjects, and PickElementsByRectangle do not
persist after the External Command is complete, and therefore they do not affect this property.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> ChangeSelection(UIDocument uidoc)
{
    <span class="highlight-comment">// Get selected elements from current document.</span>
    ICollection&lt;ElementId&gt; selectedIds = uidoc.Selection.GetElementIds();

    <span class="highlight-comment">// Display current number of selected elements</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Number of selected elements: "</span> + selectedIds.Count.ToString());

    <span class="highlight-comment">// Go through the selected items and filter out walls only.</span>
    ICollection&lt;ElementId&gt; selectedWallIds = <span class="highlight-keyword">new</span> List&lt;ElementId&gt;();

    <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> selectedIds)
    {
        Element elements = uidoc.Document.GetElement(id);
        <span class="highlight-keyword">if</span> (elements <span class="highlight-keyword">is</span> Wall)
        {
            selectedWallIds.Add(id);
        }
    }

    <span class="highlight-comment">// Set the created element set as current select element set.</span>
    uidoc.Selection.SetElementIds(selectedWallIds);

    <span class="highlight-comment">// Give the user some information.</span>
    <span class="highlight-keyword">if</span> (<span class="highlight-number">0</span> != selectedWallIds.Count)
    {
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, selectedWallIds.Count.ToString() + <span class="highlight-literal">" Walls are selected!"</span>);
    }
    <span class="highlight-keyword">else</span>
    {
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,<span class="highlight-literal">"No Walls have been selected!"</span>);
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> ChangeSelection(uidoc <span class="highlight-keyword">As</span> UIDocument)
    <span class="highlight-comment">' Get selected elements from current document.</span>
    <span class="highlight-keyword">Dim</span> selectedIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = uidoc.Selection.GetElementIds()

    <span class="highlight-comment">' Display current number of selected elements</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Number of selected elements: "</span> &amp; selectedIds.Count.ToString())

    <span class="highlight-comment">' Go through the selected items and filter out walls only.</span>
    <span class="highlight-keyword">Dim</span> selectedWallIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> ElementId)()

    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> selectedIds
        <span class="highlight-keyword">Dim</span> elements <span class="highlight-keyword">As</span> Element = uidoc.Document.GetElement(id)
        <span class="highlight-keyword">If</span> <span class="highlight-keyword">TypeOf</span> elements <span class="highlight-keyword">Is</span> Wall <span class="highlight-keyword">Then</span>
            selectedWallIds.Add(id)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-comment">' Set the created element set as current select element set.</span>
    uidoc.Selection.SetElementIds(selectedWallIds)

    <span class="highlight-comment">' Give the user some information.</span>
    <span class="highlight-keyword">If</span> <span class="highlight-number">0</span> &lt;&gt; selectedWallIds.Count <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, selectedWallIds.Count.ToString() &amp; <span class="highlight-literal">" Walls are selected!"</span>)
    <span class="highlight-keyword">Else</span>
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"No Walls have been selected!"</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="31b73d46-7d67-5dbb-4dad-80aa597c9afc.htm">
       Selection Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="11785869-cc9e-03fc-97db-767a59af10a1.htm">
       Autodesk.Revit.UI.Selection Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>