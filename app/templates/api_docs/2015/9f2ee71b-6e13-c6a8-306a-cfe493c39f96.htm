<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="af882c60-68ae-2e53-5c41-7aa43cfc1df4.htm">
       Revision Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Combines the specified Revision with the next Revision.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2015
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">static</span> <a href="http://msdn2.microsoft.com/en-us/library/dd412081" target="_blank">ISet</a>&lt;<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>&gt; <span class="identifier">CombineWithNext</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a> <span class="parameter">document</span>,
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">revisionId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CombineWithNext</span> ( _
	<span class="parameter">document</span> <span class="keyword">As</span> <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>, _
	<span class="parameter">revisionId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> _
) <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/dd412081" target="_blank">ISet</a>(<span class="keyword">Of</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">static</span> <a href="http://msdn2.microsoft.com/en-us/library/dd412081" target="_blank">ISet</a>&lt;<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^&gt;^ <span class="identifier">CombineWithNext</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>^ <span class="parameter">document</span>, 
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">revisionId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="document">
       <dt>
        <span class="parameter">
         document
        </span>
       </dt>
       <dd>
        Type:
        <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">
         Autodesk.Revit.DB
         Document
        </a>
        <br/>
        The Document containing the Revisions.
       </dd>
      </dl>
      <dl paramname="revisionId">
       <dt>
        <span class="parameter">
         revisionId
        </span>
       </dt>
       <dd>
        Type:
        <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">
         Autodesk.Revit.DB
         ElementId
        </a>
        <br/>
        The Revision that should have its clouds and tags associated with the next Revision.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     The ids of all RevisionClouds that were reassigned to the next Revision.
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     All RevisionClouds and tags associated with the specified Revision will be reassigned
   to the next Revision in the model and the specified Revision will be deleted from
   the model.  The operation can only be performed if both the specified Revision and the
   next one are unissued.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> <span class="highlight-keyword">bool</span> CombineRevision(Document document, Revision revision)
{
    <span class="highlight-keyword">bool</span> combined = <span class="highlight-keyword">false</span>;
    <span class="highlight-comment">// Can only combine two revisions if neither have been issued</span>
    <span class="highlight-keyword">if</span> (revision.Issued == <span class="highlight-keyword">false</span>)
    {
        ElementId revisionId = revision.Id;
        Revision nextRevsion = GetNextRevision(document, revisionId);
        <span class="highlight-keyword">if</span> (nextRevsion != <span class="highlight-keyword">null</span> &amp;&amp; nextRevsion.Issued == <span class="highlight-keyword">false</span>)
        {
            ISet&lt;ElementId&gt; revisionCloudIds = Revision.CombineWithNext(document, revisionId);
            combined = <span class="highlight-keyword">true</span>;
            <span class="highlight-keyword">int</span> movedClouds = revisionCloudIds.Count;
            <span class="highlight-keyword">if</span> (movedClouds &gt; <span class="highlight-number">0</span>)
            {
                RevisionCloud cloud = document.GetElement(revisionCloudIds.ElementAt(<span class="highlight-number">0</span>)) <span class="highlight-keyword">as</span> RevisionCloud;
                <span class="highlight-keyword">if</span> (cloud != <span class="highlight-keyword">null</span>)
                {
                    <span class="highlight-keyword">string</span> msg = <span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"Revision {0} deleted and {1} revision clouds were added to Revsion {2}"</span>,
                        revisionId.ToString(), movedClouds, cloud.RevisionId.ToString());
                    TaskDialog.Show(<span class="highlight-literal">"Revision Combined"</span>, msg);
                }
            }
        }
    }

    <span class="highlight-keyword">return</span> combined;
}

<span class="highlight-keyword">private</span> Revision GetNextRevision(Document document, ElementId currentRevisionId)
{
    Revision nextRevision = <span class="highlight-keyword">null</span>;
    IList&lt;ElementId&gt; revisionIds = Revision.GetAllRevisionIds(document);
    <span class="highlight-keyword">int</span> currentRevisionIndex = <span class="highlight-number">-1</span>;
    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> n = <span class="highlight-number">0</span>; n &lt; revisionIds.Count; n++)
    {
        <span class="highlight-keyword">if</span> (revisionIds[n] == currentRevisionId)
        {
            currentRevisionIndex = n;
            <span class="highlight-keyword">break</span>;
        }
    }

    <span class="highlight-comment">// if the current revision id was found and is not the last index</span>
    <span class="highlight-keyword">if</span> (currentRevisionIndex &gt;= <span class="highlight-number">0</span> &amp;&amp; currentRevisionIndex &lt; revisionIds.Count - <span class="highlight-number">1</span>)
    {
        ElementId nextRevisionId = revisionIds[currentRevisionIndex + <span class="highlight-number">1</span>];
        nextRevision = document.GetElement(nextRevisionId) <span class="highlight-keyword">as</span> Revision;
    }

    <span class="highlight-keyword">return</span> nextRevision;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CombineRevision(document <span class="highlight-keyword">As</span> Document, revision__1 <span class="highlight-keyword">As</span> Revision) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span>
    <span class="highlight-keyword">Dim</span> combined <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = <span class="highlight-keyword">False</span>
    <span class="highlight-comment">' Can only combine two revisions if neither have been issued</span>
    <span class="highlight-keyword">If</span> revision__1.Issued = <span class="highlight-keyword">False</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> revisionId <span class="highlight-keyword">As</span> ElementId = revision__1.Id
        <span class="highlight-keyword">Dim</span> nextRevsion <span class="highlight-keyword">As</span> Revision = GetNextRevision(document, revisionId)
        <span class="highlight-keyword">If</span> nextRevsion <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">AndAlso</span> nextRevsion.Issued = <span class="highlight-keyword">False</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> revisionCloudIds <span class="highlight-keyword">As</span> ISet(<span class="highlight-keyword">Of</span> ElementId) = Revision.CombineWithNext(document, revisionId)
            combined = <span class="highlight-keyword">True</span>
            <span class="highlight-keyword">Dim</span> movedClouds <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = revisionCloudIds.Count
            <span class="highlight-keyword">If</span> movedClouds &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">Dim</span> cloud <span class="highlight-keyword">As</span> RevisionCloud = <span class="highlight-keyword">TryCast</span>(document.GetElement(revisionCloudIds.ElementAt(<span class="highlight-number">0</span>)), RevisionCloud)
                <span class="highlight-keyword">If</span> cloud <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                    <span class="highlight-keyword">Dim</span> msg <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"Revision {0} deleted and {1} revision clouds were added to Revsion {2}"</span>, revisionId.ToString(), movedClouds, cloud.RevisionId.ToString())
                    TaskDialog.Show(<span class="highlight-literal">"Revision Combined"</span>, msg)
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> combined
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> GetNextRevision(document <span class="highlight-keyword">As</span> Document, currentRevisionId <span class="highlight-keyword">As</span> ElementId) <span class="highlight-keyword">As</span> Revision
    <span class="highlight-keyword">Dim</span> nextRevision <span class="highlight-keyword">As</span> Revision = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> revisionIds <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> ElementId) = Revision.GetAllRevisionIds(document)
    <span class="highlight-keyword">Dim</span> currentRevisionIndex <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">-1</span>
    <span class="highlight-keyword">For</span> n <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> revisionIds.Count - <span class="highlight-number">1</span>
        <span class="highlight-keyword">If</span> revisionIds(n) = currentRevisionId <span class="highlight-keyword">Then</span>
            currentRevisionIndex = n
            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-comment">' if the current revision id was found and is not the last index</span>
    <span class="highlight-keyword">If</span> currentRevisionIndex &gt;= <span class="highlight-number">0</span> <span class="highlight-keyword">AndAlso</span> currentRevisionIndex &lt; revisionIds.Count - <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> nextRevisionId <span class="highlight-keyword">As</span> ElementId = revisionIds(currentRevisionIndex + <span class="highlight-number">1</span>)
        nextRevision = <span class="highlight-keyword">TryCast</span>(document.GetElement(nextRevisionId), Revision)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> nextRevision
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          revisionId is not a valid Revision.
   -or-
   This operation cannot be performed because revisionId is an issued Revision.
   -or-
   revisionId cannot be combined with the next Revision because either revisionId is
   the last Revision or the next Revision has already been issued.
         </td>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="af882c60-68ae-2e53-5c41-7aa43cfc1df4.htm">
       Revision Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>