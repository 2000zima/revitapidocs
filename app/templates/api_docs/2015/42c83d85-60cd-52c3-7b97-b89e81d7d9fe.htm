<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="0ba778d6-d39b-0653-d7f2-47ddf43d876d.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     This class encapsulates light information.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="a6a04f07-7fd2-0a4e-12e7-01842ee6daaf.htm">
      Autodesk.Revit.DB.Lighting
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2013
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">LightType</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">LightType</span> _
	<span class="keyword">Implements</span> <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">LightType</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetLightData(Document document)
{
    <span class="highlight-comment">// This code demonstrates how to get light information from project and family document</span>
    LightType lightData = <span class="highlight-keyword">null</span>;
    <span class="highlight-keyword">if</span> (document.IsFamilyDocument)
    {
        <span class="highlight-comment">// In family document, get LightType via LightFamily.GetLightType(int) method. </span>
        LightFamily lightFamily = LightFamily.GetLightFamily(document);
        <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> index = <span class="highlight-number">0</span>; index &lt; lightFamily.GetNumberOfLightTypes(); index++)
        {
            lightData = lightFamily.GetLightType(index);
        }
    }
    <span class="highlight-keyword">else</span>
    {
        <span class="highlight-comment">// In family document, get LightType via GetLightTypeFromInstance or GetLightType method.</span>
        <span class="highlight-comment">// In order to get the light information, please get a light fixture instance first</span>
        FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
        collector.OfClass(<span class="highlight-keyword">typeof</span>(FamilyInstance)).OfCategory(BuiltInCategory.OST_LightingFixtures);
        FamilyInstance lightFixture = collector.Cast&lt;FamilyInstance&gt;().First&lt;FamilyInstance&gt;();
        <span class="highlight-keyword">if</span> (lightFixture == <span class="highlight-keyword">null</span>)    <span class="highlight-comment">// check null reference</span>
            <span class="highlight-keyword">return</span>;

        <span class="highlight-comment">// Get the LightType for given light fixture</span>
        lightData = LightType.GetLightTypeFromInstance(document, lightFixture.Id);
    }

    <span class="highlight-comment">// Get the light data via LightType</span>
    Color filterColor = lightData.ColorFilter;  <span class="highlight-comment">// get the ColorFilter property</span>
    LossFactor lossFactor = lightData.GetLossFactor();  <span class="highlight-comment">// get the loss factor</span>
    <span class="highlight-keyword">if</span> (lossFactor <span class="highlight-keyword">is</span> AdvancedLossFactor)
    {
        AdvancedLossFactor advancedFactor = lossFactor <span class="highlight-keyword">as</span> AdvancedLossFactor;
        <span class="highlight-keyword">double</span> luminaireValue = advancedFactor.LuminaireDirtDepreciation;
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetLightData(document <span class="highlight-keyword">As</span> Document)
    <span class="highlight-comment">' This code demonstrates how to get light information from project and family document</span>
    <span class="highlight-keyword">Dim</span> lightData <span class="highlight-keyword">As</span> LightType = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">If</span> document.IsFamilyDocument <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' In family document, get LightType via LightFamily.GetLightType(int) method. </span>
        <span class="highlight-keyword">Dim</span> lightFamily__1 <span class="highlight-keyword">As</span> LightFamily = LightFamily.GetLightFamily(document)
        <span class="highlight-keyword">For</span> index <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> lightFamily__1.GetNumberOfLightTypes() - <span class="highlight-number">1</span>
            lightData = lightFamily__1.GetLightType(index)
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">Else</span>
        <span class="highlight-comment">' In family document, get LightType via GetLightTypeFromInstance or GetLightType method.</span>
        <span class="highlight-comment">' In order to get the light information, please get a light fixture instance first</span>
        <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
        collector.OfClass(<span class="highlight-keyword">GetType</span>(FamilyInstance)).OfCategory(BuiltInCategory.OST_LightingFixtures)
        <span class="highlight-keyword">Dim</span> lightFixture <span class="highlight-keyword">As</span> FamilyInstance = collector.Cast(<span class="highlight-keyword">Of</span> FamilyInstance)().First()
        <span class="highlight-keyword">If</span> lightFixture <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' check null reference</span>
            <span class="highlight-keyword">Return</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

        <span class="highlight-comment">' Get the LightType for given light fixture</span>
        lightData = LightType.GetLightTypeFromInstance(document, lightFixture.Id)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Get the light data via LightType</span>
    <span class="highlight-keyword">Dim</span> filterColor <span class="highlight-keyword">As</span> Color = lightData.ColorFilter
    <span class="highlight-comment">' get the ColorFilter property</span>
    <span class="highlight-keyword">Dim</span> lossFactor <span class="highlight-keyword">As</span> LossFactor = lightData.GetLossFactor()
    <span class="highlight-comment">' get the loss factor</span>
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">TypeOf</span> lossFactor <span class="highlight-keyword">Is</span> AdvancedLossFactor <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> advancedFactor <span class="highlight-keyword">As</span> AdvancedLossFactor = <span class="highlight-keyword">TryCast</span>(lossFactor, AdvancedLossFactor)
        <span class="highlight-keyword">Dim</span> luminaireValue <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = advancedFactor.LuminaireDirtDepreciation
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB.Lighting
      LightType
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="0ba778d6-d39b-0653-d7f2-47ddf43d876d.htm">
       LightType Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="a6a04f07-7fd2-0a4e-12e7-01842ee6daaf.htm">
       Autodesk.Revit.DB.Lighting Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>