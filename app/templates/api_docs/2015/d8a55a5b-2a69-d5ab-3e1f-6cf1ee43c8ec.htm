<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
       Element Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Retrieves the geometric representation of the element.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="09eaeb08-58bb-8049-8925-f3a5aa846fdc.htm">GeometryElement</a> <span class="keyword">this</span>[
	<a href="aa41fc13-9f81-836c-4271-82568ba5d7e8.htm">Options</a> <span class="parameter">options</span>
] { <span class="keyword">get</span>; }</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">Geometry</span> ( _
	<span class="parameter">options</span> <span class="keyword">As</span> <a href="aa41fc13-9f81-836c-4271-82568ba5d7e8.htm">Options</a> _
) <span class="keyword">As</span> <a href="09eaeb08-58bb-8049-8925-f3a5aa846fdc.htm">GeometryElement</a>
	<span class="keyword">Get</span></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">property</span> <a href="09eaeb08-58bb-8049-8925-f3a5aa846fdc.htm">GeometryElement</a>^ <span class="identifier">Geometry</span>[<a href="aa41fc13-9f81-836c-4271-82568ba5d7e8.htm">Options</a>^ <span class="parameter">options</span>] {
	<a href="09eaeb08-58bb-8049-8925-f3a5aa846fdc.htm">GeometryElement</a>^ <span class="keyword">get</span> (<a href="aa41fc13-9f81-836c-4271-82568ba5d7e8.htm">Options</a>^ <span class="parameter">options</span>);
}</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="options">
       <dt>
        <span class="parameter">
         options
        </span>
       </dt>
       <dd>
        Type:
        <a href="aa41fc13-9f81-836c-4271-82568ba5d7e8.htm">
         Autodesk.Revit.DB
         Options
        </a>
        <br/>
        User preferences for parsing of geometry.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Field Value
     </h4>
     An element that provides access to the geometry of the element.
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      This call will retrieve 3d representation of the element.
      <span class="keyword">
      </span>
      <span class="nu">
       a null reference (
       <span class="keyword">
        Nothing
       </span>
       in Visual Basic)
      </span>
      will be returned
for symbols, annotations or details. This involves extensive parsing or Revit's data
structures, so try to minimize calls if performance is critical.
     </p>
     <p>
      Geometry objects provided from this method are obtained directly from the element. When
the element is changed for any reason, the geometry will be recalculated by Revit and geometry
objects obtained before the change are likely to no longer be valid.  If you need to preserve
geometry information obtained an element even after changes to that element, you should copy
the geometry objects or save the properties independently.
     </p>
     <p>
      If you require that the geometry items obtained contain valid
      <a href="d28155ae-817b-1f31-9c3f-c9c6a28acc0d.htm">
       Reference objects
      </a>
      , be sure to set the CalculateReferences
property of the options.
     </p>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetCurvesFromABeam(Autodesk.Revit.DB.FamilyInstance beam,
                               Autodesk.Revit.DB.Options options)
{
    Autodesk.Revit.DB.GeometryElement geomElem = beam.get_Geometry(options);

    Autodesk.Revit.DB.CurveArray curves = <span class="highlight-keyword">new</span> CurveArray();
    Autodesk.Revit.DB.SolidArray solids = <span class="highlight-keyword">new</span> SolidArray();

    <span class="highlight-comment">//Find all solids and insert them into solid array</span>
    AddCurvesAndSolids(geomElem, <span class="highlight-keyword">ref</span> curves, <span class="highlight-keyword">ref</span> solids);
}

<span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> AddCurvesAndSolids(Autodesk.Revit.DB.GeometryElement geomElem,
                                <span class="highlight-keyword">ref</span> Autodesk.Revit.DB.CurveArray curves,
                                <span class="highlight-keyword">ref</span> Autodesk.Revit.DB.SolidArray solids)
{
    <span class="highlight-keyword">foreach</span> (Autodesk.Revit.DB.GeometryObject geomObj <span class="highlight-keyword">in</span> geomElem)
    {
        Autodesk.Revit.DB.Curve curve = geomObj <span class="highlight-keyword">as</span> Autodesk.Revit.DB.Curve;
        <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != curve)
        {
            curves.Append(curve);
            <span class="highlight-keyword">continue</span>;
        }
        Autodesk.Revit.DB.Solid solid = geomObj <span class="highlight-keyword">as</span> Autodesk.Revit.DB.Solid;
        <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != solid)
        {
            solids.Append(solid);
            <span class="highlight-keyword">continue</span>;
        }
        <span class="highlight-comment">//If this GeometryObject is Instance, call AddCurvesAndSolids</span>
        Autodesk.Revit.DB.GeometryInstance geomInst = geomObj <span class="highlight-keyword">as</span> Autodesk.Revit.DB.GeometryInstance;
        <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != geomInst)
        {
            Autodesk.Revit.DB.GeometryElement transformedGeomElem
              = geomInst.GetInstanceGeometry(geomInst.Transform);
            AddCurvesAndSolids(transformedGeomElem, <span class="highlight-keyword">ref</span> curves, <span class="highlight-keyword">ref</span> solids);
        }
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetCurvesFromABeam(beam <span class="highlight-keyword">As</span> Autodesk.Revit.DB.FamilyInstance, options <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Options)
    <span class="highlight-keyword">Dim</span> geomElem <span class="highlight-keyword">As</span> Autodesk.Revit.DB.GeometryElement = beam.Geometry(options)

    <span class="highlight-keyword">Dim</span> curves <span class="highlight-keyword">As</span> Autodesk.Revit.DB.CurveArray = <span class="highlight-keyword">New</span> CurveArray()
    <span class="highlight-keyword">Dim</span> solids <span class="highlight-keyword">As</span> Autodesk.Revit.DB.SolidArray = <span class="highlight-keyword">New</span> SolidArray()

    <span class="highlight-comment">'Find all solids and insert them into solid array</span>
    AddCurvesAndSolids(geomElem, curves, solids)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> AddCurvesAndSolids(geomElem <span class="highlight-keyword">As</span> Autodesk.Revit.DB.GeometryElement, <span class="highlight-keyword">ByRef</span> curves <span class="highlight-keyword">As</span> Autodesk.Revit.DB.CurveArray, <span class="highlight-keyword">ByRef</span> solids <span class="highlight-keyword">As</span> Autodesk.Revit.DB.SolidArray)
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> geomObj <span class="highlight-keyword">As</span> Autodesk.Revit.DB.GeometryObject <span class="highlight-keyword">In</span> geomElem
        <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Curve = <span class="highlight-keyword">TryCast</span>(geomObj, Autodesk.Revit.DB.Curve)
        <span class="highlight-keyword">If</span> curve <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            curves.Append(curve)
            <span class="highlight-keyword">Continue</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Dim</span> solid <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Solid = <span class="highlight-keyword">TryCast</span>(geomObj, Autodesk.Revit.DB.Solid)
        <span class="highlight-keyword">If</span> solid <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            solids.Append(solid)
            <span class="highlight-keyword">Continue</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-comment">'If this GeometryObject is Instance, call AddCurvesAndSolids</span>
        <span class="highlight-keyword">Dim</span> geomInst <span class="highlight-keyword">As</span> Autodesk.Revit.DB.GeometryInstance = <span class="highlight-keyword">TryCast</span>(geomObj, Autodesk.Revit.DB.GeometryInstance)
        <span class="highlight-keyword">If</span> geomInst <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> transformedGeomElem <span class="highlight-keyword">As</span> Autodesk.Revit.DB.GeometryElement = geomInst.GetInstanceGeometry(geomInst.Transform)
            AddCurvesAndSolids(transformedGeomElem, curves, solids)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
       Element Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>