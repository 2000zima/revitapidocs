<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">
       TextNote Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Sets the text and associated formatting of the text of in this text note with
   a given FormattedText object.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.1090.0)
     <br/>
     <b>
      Since:
     </b>
     2017
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SetFormattedText</span>(
	<a href="79a92343-2342-8325-1b51-f12c4fb05481.htm">FormattedText</a> <span class="parameter">formattedText</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">SetFormattedText</span> ( _
	<span class="parameter">formattedText</span> <span class="keyword">As</span> <a href="79a92343-2342-8325-1b51-f12c4fb05481.htm">FormattedText</a> _
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">SetFormattedText</span>(
	<a href="79a92343-2342-8325-1b51-f12c4fb05481.htm">FormattedText</a>^ <span class="parameter">formattedText</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="formattedText">
       <dt>
        <span class="parameter">
         formattedText
        </span>
       </dt>
       <dd>
        Type:
        <a href="79a92343-2342-8325-1b51-f12c4fb05481.htm">
         Autodesk.Revit.DB
         FormattedText
        </a>
        <br/>
        The FormattedText object containing the text and associated formatting of the text.
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-preprocessor">#region</span> Autodesk.Revit.DB.FormattedText
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> FormatText(TextNote textNote)
{
    <span class="highlight-comment">// TextNote created with "New sample text"</span>
    FormattedText formatText = textNote.GetFormattedText();

    <span class="highlight-comment">// italicize "New"</span>
    TextRange range = <span class="highlight-keyword">new</span> TextRange(<span class="highlight-number">0</span>, <span class="highlight-number">3</span>);
    formatText.SetItalicStatus(range, <span class="highlight-keyword">true</span>);

    <span class="highlight-comment">// make "sample" bold</span>
    range = formatText.Find(<span class="highlight-literal">"sample"</span>, <span class="highlight-number">0</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">if</span> (range.Length &gt; <span class="highlight-number">0</span>)
        formatText.SetBoldStatus(range, <span class="highlight-keyword">true</span>);

    <span class="highlight-comment">// make "text" underlined</span>
    range = formatText.Find(<span class="highlight-literal">"text"</span>, <span class="highlight-number">0</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">if</span> (range.Length &gt; <span class="highlight-number">0</span>)
        formatText.SetUnderlineStatus(range, <span class="highlight-keyword">true</span>);

    <span class="highlight-comment">// make all text uppercase</span>
    formatText.SetAllCapsStatus(<span class="highlight-keyword">true</span>);

    textNote.SetFormattedText(formatText);
}
<span class="highlight-preprocessor">#endregion</span></code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-preprocessor">#Region</span> <span class="highlight-literal">"Autodesk.Revit.DB.FormattedText"</span>
        <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> FormatText(textNote <span class="highlight-keyword">As</span> TextNote)
            <span class="highlight-comment">' TextNote created with "New sample text"</span>
            <span class="highlight-keyword">Dim</span> formatText__1 <span class="highlight-keyword">As</span> FormattedText = textNote.GetFormattedText()

            <span class="highlight-comment">' italicize "New"</span>
            <span class="highlight-keyword">Dim</span> range <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TextRange(<span class="highlight-number">0</span>, <span class="highlight-number">3</span>)
            formatText__1.SetItalicStatus(range, <span class="highlight-keyword">True</span>)

            <span class="highlight-comment">' make "sample" bold</span>
            range = formatText__1.Find(<span class="highlight-literal">"sample"</span>, <span class="highlight-number">0</span>, <span class="highlight-keyword">False</span>, <span class="highlight-keyword">True</span>)
            <span class="highlight-keyword">If</span> range.Length &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                formatText__1.SetBoldStatus(range, <span class="highlight-keyword">True</span>)
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

            <span class="highlight-comment">' make "text" underlined</span>
            range = formatText__1.Find(<span class="highlight-literal">"text"</span>, <span class="highlight-number">0</span>, <span class="highlight-keyword">False</span>, <span class="highlight-keyword">True</span>)
            <span class="highlight-keyword">If</span> range.Length &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
                formatText__1.SetUnderlineStatus(range, <span class="highlight-keyword">True</span>)
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

            <span class="highlight-comment">' make all text uppercase</span>
            formatText__1.SetAllCapsStatus(<span class="highlight-keyword">True</span>)

            textNote.SetFormattedText(formatText__1)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
<span class="highlight-preprocessor">#End Region</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="ecc1ce1c-d754-96d0-35db-ca2d1d84c57c.htm">
       TextNote Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>