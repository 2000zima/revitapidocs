<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="013e58c3-f3d2-d976-89f0-ff4ff701951d.htm">
       TextElement Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Returns the minimum width a text element can be created with.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.1090.0)
     <br/>
     <b>
      Since:
     </b>
     2016
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">static</span> <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="identifier">GetMinimumAllowedWidth</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a> <span class="parameter">cdda</span>,
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">typeId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">GetMinimumAllowedWidth</span> ( _
	<span class="parameter">cdda</span> <span class="keyword">As</span> <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>, _
	<span class="parameter">typeId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> _
) <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">Double</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">static</span> <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="identifier">GetMinimumAllowedWidth</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>^ <span class="parameter">cdda</span>, 
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">typeId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="cdda">
       <dt>
        <span class="parameter">
         cdda
        </span>
       </dt>
       <dd>
        Type:
        <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">
         Autodesk.Revit.DB
         Document
        </a>
        <br/>
        A document containing the new text element's type
       </dd>
      </dl>
      <dl paramname="typeId">
       <dt>
        <span class="parameter">
         typeId
        </span>
       </dt>
       <dd>
        Type:
        <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">
         Autodesk.Revit.DB
         ElementId
        </a>
        <br/>
        Id of the text type
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     The minimum allowed width in paper space [ft].
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     Note that it is not necessarily a constant; it can be affected
   by properties of the text type, such as the width factor.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> TextNote AddNewTextNote(UIDocument uiDoc)
{
    Document doc = uiDoc.Document;
    XYZ textLoc = uiDoc.Selection.PickPoint(<span class="highlight-literal">"Pick a point for sample text."</span>);
    ElementId defaultTextTypeId = doc.GetDefaultElementTypeId(ElementTypeGroup.TextNoteType);
    <span class="highlight-keyword">double</span> noteWidth = .<span class="highlight-number">2</span>;

    <span class="highlight-comment">// make sure note width works for the text type</span>
    <span class="highlight-keyword">double</span> minWidth = TextNote.GetMinimumAllowedWidth(doc, defaultTextTypeId);
    <span class="highlight-keyword">double</span> maxWidth = TextNote.GetMaximumAllowedWidth(doc, defaultTextTypeId);
    <span class="highlight-keyword">if</span> (noteWidth &lt; minWidth)
    {
        noteWidth = minWidth;
    }
    <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (noteWidth &gt; maxWidth)
    {
        noteWidth = maxWidth;
    }

    TextNoteOptions opts = <span class="highlight-keyword">new</span> TextNoteOptions(defaultTextTypeId);
    opts.HorizontalAlignment = HorizontalTextAlignment.Left;
    opts.Rotation = Math.PI / <span class="highlight-number">4</span>;

    TextNote textNote = TextNote.Create(doc, doc.ActiveView.Id, textLoc, noteWidth, <span class="highlight-literal">"New sample text"</span>, opts);

    <span class="highlight-keyword">return</span> textNote;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> AddNewTextNote(uiDoc <span class="highlight-keyword">As</span> UIDocument) <span class="highlight-keyword">As</span> TextNote
    <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = uiDoc.Document
    <span class="highlight-keyword">Dim</span> textLoc <span class="highlight-keyword">As</span> XYZ = uiDoc.Selection.PickPoint(<span class="highlight-literal">"Pick a point for sample text."</span>)
    <span class="highlight-keyword">Dim</span> defaultTextTypeId <span class="highlight-keyword">As</span> ElementId = doc.GetDefaultElementTypeId(ElementTypeGroup.TextNoteType)
    <span class="highlight-keyword">Dim</span> noteWidth <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0.2</span>

    <span class="highlight-comment">' make sure note width works for the text type</span>
    <span class="highlight-keyword">Dim</span> minWidth <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = TextNote.GetMinimumAllowedWidth(doc, defaultTextTypeId)
    <span class="highlight-keyword">Dim</span> maxWidth <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = TextNote.GetMaximumAllowedWidth(doc, defaultTextTypeId)
    <span class="highlight-keyword">If</span> noteWidth &lt; minWidth <span class="highlight-keyword">Then</span>
        noteWidth = minWidth
    <span class="highlight-keyword">ElseIf</span> noteWidth &gt; maxWidth <span class="highlight-keyword">Then</span>
        noteWidth = maxWidth
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> opts <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TextNoteOptions(defaultTextTypeId)
    opts.HorizontalAlignment = HorizontalTextAlignment.Left
    opts.Rotation = Math.PI / <span class="highlight-number">4</span>

    <span class="highlight-keyword">Dim</span> textNote__1 <span class="highlight-keyword">As</span> TextNote = TextNote.Create(doc, doc.ActiveView.Id, textLoc, noteWidth, <span class="highlight-literal">"New sample text"</span>, opts)

    <span class="highlight-keyword">Return</span> textNote__1
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="013e58c3-f3d2-d976-89f0-ff4ff701951d.htm">
       TextElement Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="aa4e4123-2e4e-880e-e410-ec9fe2045628.htm">
       GetMinimumAllowedWidth Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>