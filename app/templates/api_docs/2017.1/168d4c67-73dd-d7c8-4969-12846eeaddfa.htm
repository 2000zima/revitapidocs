<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">
       Document Class
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Inserts a new instance of a family into the document,
using a location, type/symbol, the host element and a base level.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
      Autodesk.Revit.Creation
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.1090.0)
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a> <span class="identifier">NewFamilyInstance</span>(
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a> <span class="parameter">location</span>,
	<a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a> <span class="parameter">symbol</span>,
	<a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a> <span class="parameter">host</span>,
	<a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a> <span class="parameter">level</span>,
	<a href="0a0a3793-5fce-283d-4953-a137f5593db9.htm">StructuralType</a> <span class="parameter">structuralType</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewFamilyInstance</span> ( _
	<span class="parameter">location</span> <span class="keyword">As</span> <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>, _
	<span class="parameter">symbol</span> <span class="keyword">As</span> <a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a>, _
	<span class="parameter">host</span> <span class="keyword">As</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a>, _
	<span class="parameter">level</span> <span class="keyword">As</span> <a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a>, _
	<span class="parameter">structuralType</span> <span class="keyword">As</span> <a href="0a0a3793-5fce-283d-4953-a137f5593db9.htm">StructuralType</a> _
) <span class="keyword">As</span> <a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a>^ <span class="identifier">NewFamilyInstance</span>(
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>^ <span class="parameter">location</span>, 
	<a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a>^ <span class="parameter">symbol</span>, 
	<a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a>^ <span class="parameter">host</span>, 
	<a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a>^ <span class="parameter">level</span>, 
	<a href="0a0a3793-5fce-283d-4953-a137f5593db9.htm">StructuralType</a> <span class="parameter">structuralType</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="location">
       <dt>
        <span class="parameter">
         location
        </span>
       </dt>
       <dd>
        Type:
        <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">
         Autodesk.Revit.DB
         XYZ
        </a>
        <br/>
        The physical location where the instance is to be placed on the specified level.
       </dd>
      </dl>
      <dl paramname="symbol">
       <dt>
        <span class="parameter">
         symbol
        </span>
       </dt>
       <dd>
        Type:
        <a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">
         Autodesk.Revit.DB
         FamilySymbol
        </a>
        <br/>
        A FamilySymbol object that represents the type of the instance that is to be inserted.
       </dd>
      </dl>
      <dl paramname="host">
       <dt>
        <span class="parameter">
         host
        </span>
       </dt>
       <dd>
        Type:
        <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
         Autodesk.Revit.DB
         Element
        </a>
        <br/>
        A host object into which the instance will be embedded
       </dd>
      </dl>
      <dl paramname="level">
       <dt>
        <span class="parameter">
         level
        </span>
       </dt>
       <dd>
        Type:
        <a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">
         Autodesk.Revit.DB
         Level
        </a>
        <br/>
        A Level object that is used as the base level for the object.
       </dd>
      </dl>
      <dl paramname="structuralType">
       <dt>
        <span class="parameter">
         structuralType
        </span>
       </dt>
       <dd>
        Type:
        <a href="0a0a3793-5fce-283d-4953-a137f5593db9.htm">
         Autodesk.Revit.DB.Structure
         StructuralType
        </a>
        <br/>
        If structural then specify the type of the component.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     If creation was successful then an instance to the new object is returned, otherwise
     <span class="keyword">
     </span>
     <span class="nu">
      a null reference (
      <span class="keyword">
       Nothing
      </span>
      in Visual Basic)
     </span>
     .
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     This form of NewFamilyInstance is the most commonly used in Autodesk Revit since there are
a large number of elements that use levels, such as Walls, Columns etc. If the instance fails to
be created an exception may be thrown.
     <p>
      The type/symbol that is used must be loaded into the document
before this method is called. Families and their symbols can be loaded using the Document.LoadFamily
or Document.LoadFamilySymbol methods.
     </p>
     <p>
      All levels within the document can be found by iterating over
the entire document and searching for objects of type Autodesk.Revit.Elements.Level.
     </p>
     <p>
      Some Families, such as Beams, have more than one endpoint and are inserted in the same manner as single point
instances. Once inserted these linear family instances can have their endpoints changed by using
the instance's Element.Location property.
     </p>
     <p>
      Note: ForbiddenForDynamicUpdateException might be thrown during a dynamic update if the inserted instance establishes a mutual dependency with another structure.
     </p>
     <p>
      Note: if the created family instance includes nested instances, the API framework will automatically regenerate 
the document during this method call.
     </p>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">void</span> CreateDoorsInWall(Autodesk.Revit.DB.Document document, Wall wall)
{
    <span class="highlight-comment">// get wall's level for door creation</span>
    Level level = document.GetElement(wall.LevelId) <span class="highlight-keyword">as</span> Level;

    FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    ICollection&lt;Element&gt; collection = collector.OfClass(<span class="highlight-keyword">typeof</span>(FamilySymbol))
                                               .OfCategory(BuiltInCategory.OST_Doors)
                                               .ToElements();
    IEnumerator&lt;Element&gt; symbolItor = collection.GetEnumerator();

    <span class="highlight-keyword">double</span> x = <span class="highlight-number">0</span>, y = <span class="highlight-number">0</span>, z = <span class="highlight-number">0</span>;
    <span class="highlight-keyword">while</span> (symbolItor.MoveNext())
    {
        FamilySymbol symbol = symbolItor.Current <span class="highlight-keyword">as</span> FamilySymbol;
        XYZ location = <span class="highlight-keyword">new</span> XYZ(x, y, z);
        FamilyInstance instance = document.Create.NewFamilyInstance(location, symbol, wall, level, StructuralType.NonStructural);
        x += <span class="highlight-number">10</span>;
        y += <span class="highlight-number">10</span>;
        z += <span class="highlight-number">1.5</span>;
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> CreateDoorsInWall(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document, wall <span class="highlight-keyword">As</span> Wall)
    <span class="highlight-comment">' get wall's level for door creation</span>
    <span class="highlight-keyword">Dim</span> level <span class="highlight-keyword">As</span> Level = <span class="highlight-keyword">TryCast</span>(document.GetElement(wall.LevelId), Level)

    <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
    <span class="highlight-keyword">Dim</span> collection <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element) = collector.OfClass(<span class="highlight-keyword">GetType</span>(FamilySymbol)).OfCategory(BuiltInCategory.OST_Doors).ToElements()
    <span class="highlight-keyword">Dim</span> symbolItor <span class="highlight-keyword">As</span> IEnumerator(<span class="highlight-keyword">Of</span> Element) = collection.GetEnumerator()

    <span class="highlight-keyword">Dim</span> x <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0</span>, y <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0</span>, z <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0</span>
    <span class="highlight-keyword">While</span> symbolItor.MoveNext()
        <span class="highlight-keyword">Dim</span> symbol <span class="highlight-keyword">As</span> FamilySymbol = <span class="highlight-keyword">TryCast</span>(symbolItor.Current, FamilySymbol)
        <span class="highlight-keyword">Dim</span> location <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(x, y, z)
        <span class="highlight-keyword">Dim</span> instance <span class="highlight-keyword">As</span> FamilyInstance = document.Create.NewFamilyInstance(location, symbol, wall, level, StructuralType.NonStructural)
        x += <span class="highlight-number">10</span>
        y += <span class="highlight-number">10</span>
        z += <span class="highlight-number">1.5</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">While</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table cellpadding="5" cellspacing="2" frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown if the family symbol does not exist in the given document.
         </td>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown if the host does not exist in the given document.
         </td>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown if the level does not exist in the given document.
         </td>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown if The symbol is not active.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">
       Document Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="0c0d640b-7810-55e4-3c5e-cd295dede87b.htm">
       NewFamilyInstance Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
       Autodesk.Revit.Creation Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>