<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="892f0ce6-5548-d299-c976-9355ac4109ee.htm">
       FabricSheetType Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Sets the minor and major layout patterns as Custom, while specifying the needed parameters for this pattern.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">
      Autodesk.Revit.DB.Structure
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.1090.0)
     <br/>
     <b>
      Since:
     </b>
     2017
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SetLayoutAsCustomPattern</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="parameter">minorStartOverhang</span>,
	<a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="parameter">minorEndOverhang</span>,
	<a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="parameter">majorStartOverhang</span>,
	<a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="parameter">majorEndOverhang</span>,
	<a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">IList</a>&lt;<a href="ec68f4e9-ba5a-6036-7d5a-2718689ef95f.htm">FabricWireItem</a>&gt; <span class="parameter">minorFabricWireItems</span>,
	<a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">IList</a>&lt;<a href="ec68f4e9-ba5a-6036-7d5a-2718689ef95f.htm">FabricWireItem</a>&gt; <span class="parameter">majorFabricWireItems</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">SetLayoutAsCustomPattern</span> ( _
	<span class="parameter">minorStartOverhang</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">Double</a>, _
	<span class="parameter">minorEndOverhang</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">Double</a>, _
	<span class="parameter">majorStartOverhang</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">Double</a>, _
	<span class="parameter">majorEndOverhang</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">Double</a>, _
	<span class="parameter">minorFabricWireItems</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">IList</a>(<span class="keyword">Of</span> <a href="ec68f4e9-ba5a-6036-7d5a-2718689ef95f.htm">FabricWireItem</a>), _
	<span class="parameter">majorFabricWireItems</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">IList</a>(<span class="keyword">Of</span> <a href="ec68f4e9-ba5a-6036-7d5a-2718689ef95f.htm">FabricWireItem</a>) _
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">SetLayoutAsCustomPattern</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="parameter">minorStartOverhang</span>, 
	<a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="parameter">minorEndOverhang</span>, 
	<a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="parameter">majorStartOverhang</span>, 
	<a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a> <span class="parameter">majorEndOverhang</span>, 
	<a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">IList</a>&lt;<a href="ec68f4e9-ba5a-6036-7d5a-2718689ef95f.htm">FabricWireItem</a>^&gt;^ <span class="parameter">minorFabricWireItems</span>, 
	<a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">IList</a>&lt;<a href="ec68f4e9-ba5a-6036-7d5a-2718689ef95f.htm">FabricWireItem</a>^&gt;^ <span class="parameter">majorFabricWireItems</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="minorStartOverhang">
       <dt>
        <span class="parameter">
         minorStartOverhang
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">
         System
         Double
        </a>
        <br/>
        The distance from the edge of the sheet to the first wire in the minor direction.
       </dd>
      </dl>
      <dl paramname="minorEndOverhang">
       <dt>
        <span class="parameter">
         minorEndOverhang
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">
         System
         Double
        </a>
        <br/>
        The distance from the last wire to the edge of the sheet in the minor direction.
       </dd>
      </dl>
      <dl paramname="majorStartOverhang">
       <dt>
        <span class="parameter">
         majorStartOverhang
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">
         System
         Double
        </a>
        <br/>
        The distance from the edge of the sheet to the first wire in the major direction.
       </dd>
      </dl>
      <dl paramname="majorEndOverhang">
       <dt>
        <span class="parameter">
         majorEndOverhang
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">
         System
         Double
        </a>
        <br/>
        The distance from the last wire to the edge of the sheet in the major direction.
       </dd>
      </dl>
      <dl paramname="minorFabricWireItems">
       <dt>
        <span class="parameter">
         minorFabricWireItems
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">
         System.Collections.Generic
         IList
        </a>
        <a href="ec68f4e9-ba5a-6036-7d5a-2718689ef95f.htm">
         FabricWireItem
        </a>
        <br/>
        The fabric wire items in the minor direction.
       </dd>
      </dl>
      <dl paramname="majorFabricWireItems">
       <dt>
        <span class="parameter">
         majorFabricWireItems
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/5y536ey6" target="_blank">
         System.Collections.Generic
         IList
        </a>
        <a href="ec68f4e9-ba5a-6036-7d5a-2718689ef95f.htm">
         FabricWireItem
        </a>
        <br/>
        The fabric wire items in the major direction.
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     The following properties are not used for custom fabric sheet type:
   - MajorDirectionWireType;
   - MinorDirectionWireType;
   - MajorSpacing;
   - MinorSpacing.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> FabricSheet CreateCustomFabricSheet(Document document, Element wall)
{
    <span class="highlight-keyword">if</span> (FabricSheet.IsValidHost(wall) == <span class="highlight-keyword">false</span>)
        <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;

    <span class="highlight-comment">// Create a new type for custom FabricSheet</span>
    ElementId fabricSheetTypeId = FabricSheetType.CreateDefaultFabricSheetType(document);
    FabricSheetType fst = document.GetElement(fabricSheetTypeId) <span class="highlight-keyword">as</span> FabricSheetType;

    <span class="highlight-comment">// Create some fabric wire types</span>
    ElementId idWireType1 = FabricWireType.CreateDefaultFabricWireType(document);
    FabricWireType wireType1 = document.GetElement(idWireType1) <span class="highlight-keyword">as</span> FabricWireType;
    wireType1.WireDiameter = <span class="highlight-number">3.5</span>/<span class="highlight-number">12.0</span>;

    ElementId idWireType2 = FabricWireType.CreateDefaultFabricWireType(document);
    FabricWireType wireType2 = document.GetElement(idWireType1) <span class="highlight-keyword">as</span> FabricWireType;
    wireType2.WireDiameter = <span class="highlight-number">2.0</span>/<span class="highlight-number">12.0</span>;

    <span class="highlight-comment">// Create the wires for the custom pattern</span>
    IList&lt;FabricWireItem&gt; majorWires = <span class="highlight-keyword">new</span> List&lt;FabricWireItem&gt;();
    IList&lt;FabricWireItem&gt; minorWires = <span class="highlight-keyword">new</span> List&lt;FabricWireItem&gt;();
    FabricWireItem item = FabricWireItem.Create(<span class="highlight-number">2.0</span>/<span class="highlight-number">12.0</span>, <span class="highlight-number">1</span>, idWireType1);
    majorWires.Add(item);
    majorWires.Add(item);
    item = FabricWireItem.Create(<span class="highlight-number">1.5</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">10.0</span> / <span class="highlight-number">12.0</span>, idWireType2);
    majorWires.Add(item);

    item = FabricWireItem.Create(<span class="highlight-number">3.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">1</span>, idWireType2);
    minorWires.Add(item);
    item = FabricWireItem.Create(<span class="highlight-number">3.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">10.0</span> / <span class="highlight-number">12.0</span>, idWireType2);
    minorWires.Add(item);

    fst.SetLayoutAsCustomPattern(<span class="highlight-number">6.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">2.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">4.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">1.0</span> / <span class="highlight-number">12.0</span>, minorWires, majorWires);

    FabricSheet sheet = FabricSheet.Create(document, wall, fabricSheetTypeId);
    <span class="highlight-comment">// Regeneration is required before setting any property to object that was created in the same transaction.</span>
    document.Regenerate();


    AnalyticalModelSurface ams = wall.GetAnalyticalModel() <span class="highlight-keyword">as</span> AnalyticalModelSurface;
    sheet.PlaceInHost(wall, ams.GetLocalCoordinateSystem());

    <span class="highlight-comment">// Give the user some information</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"Flat Fabric Sheet ID='{0}' created successfully."</span>, sheet.Id.IntegerValue));

    <span class="highlight-keyword">return</span> sheet;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateCustomFabricSheet(document <span class="highlight-keyword">As</span> Document, wall <span class="highlight-keyword">As</span> Element) <span class="highlight-keyword">As</span> FabricSheet
    <span class="highlight-keyword">If</span> FabricSheet.IsValidHost(wall) = <span class="highlight-keyword">False</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Create a new type for custom FabricSheet</span>
    <span class="highlight-keyword">Dim</span> fabricSheetTypeId <span class="highlight-keyword">As</span> ElementId = FabricSheetType.CreateDefaultFabricSheetType(document)
    <span class="highlight-keyword">Dim</span> fst <span class="highlight-keyword">As</span> FabricSheetType = <span class="highlight-keyword">TryCast</span>(document.GetElement(fabricSheetTypeId), FabricSheetType)

    <span class="highlight-comment">' Create some fabric wire types</span>
    <span class="highlight-keyword">Dim</span> idWireType1 <span class="highlight-keyword">As</span> ElementId = FabricWireType.CreateDefaultFabricWireType(document)
    <span class="highlight-keyword">Dim</span> wireType1 <span class="highlight-keyword">As</span> FabricWireType = <span class="highlight-keyword">TryCast</span>(document.GetElement(idWireType1), FabricWireType)
    wireType1.WireDiameter = <span class="highlight-number">3.5</span> / <span class="highlight-number">12.0</span>

    <span class="highlight-keyword">Dim</span> idWireType2 <span class="highlight-keyword">As</span> ElementId = FabricWireType.CreateDefaultFabricWireType(document)
    <span class="highlight-keyword">Dim</span> wireType2 <span class="highlight-keyword">As</span> FabricWireType = <span class="highlight-keyword">TryCast</span>(document.GetElement(idWireType1), FabricWireType)
    wireType2.WireDiameter = <span class="highlight-number">2.0</span> / <span class="highlight-number">12.0</span>

    <span class="highlight-comment">' Create the wires for the custom pattern</span>
    <span class="highlight-keyword">Dim</span> majorWires <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> FabricWireItem) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> FabricWireItem)()
    <span class="highlight-keyword">Dim</span> minorWires <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> FabricWireItem) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> FabricWireItem)()
    <span class="highlight-keyword">Dim</span> item <span class="highlight-keyword">As</span> FabricWireItem = FabricWireItem.Create(<span class="highlight-number">2.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">1</span>, idWireType1)
    majorWires.Add(item)
    majorWires.Add(item)
    item = FabricWireItem.Create(<span class="highlight-number">1.5</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">10.0</span> / <span class="highlight-number">12.0</span>, idWireType2)
    majorWires.Add(item)

    item = FabricWireItem.Create(<span class="highlight-number">3.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">1</span>, idWireType2)
    minorWires.Add(item)
    item = FabricWireItem.Create(<span class="highlight-number">3.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">10.0</span> / <span class="highlight-number">12.0</span>, idWireType2)
    minorWires.Add(item)

    fst.SetLayoutAsCustomPattern(<span class="highlight-number">6.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">2.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">4.0</span> / <span class="highlight-number">12.0</span>, <span class="highlight-number">1.0</span> / <span class="highlight-number">12.0</span>, minorWires, majorWires)

    <span class="highlight-keyword">Dim</span> sheet <span class="highlight-keyword">As</span> FabricSheet = FabricSheet.Create(document, wall, fabricSheetTypeId)
    <span class="highlight-comment">' Regeneration is required before setting any property to object that was created in the same transaction.</span>
    document.Regenerate()


    <span class="highlight-keyword">Dim</span> ams <span class="highlight-keyword">As</span> AnalyticalModelSurface = <span class="highlight-keyword">TryCast</span>(wall.GetAnalyticalModel(), AnalyticalModelSurface)
    sheet.PlaceInHost(wall, ams.GetLocalCoordinateSystem())

    <span class="highlight-comment">' Give the user some information</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-keyword">String</span>.Format(<span class="highlight-comment">"Flat Fabric Sheet ID='{0}' created successfully."</span>, sheet.Id.IntegerValue))

    <span class="highlight-keyword">Return</span> sheet
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          The given value for minorStartOverhang is not a number
   -or-
   The given value for minorEndOverhang is not a number
   -or-
   The given value for majorStartOverhang is not a number
   -or-
   The given value for majorEndOverhang is not a number
         </td>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
        <tr>
         <td>
          <a href="60f148c9-ece0-a6bb-4e12-bb4a9c8c8a24.htm">
           Autodesk.Revit.Exceptions
           ArgumentOutOfRangeException
          </a>
         </td>
         <td>
          The given value for minorStartOverhang must be between 0 and 30000 feet.
   -or-
   The given value for minorEndOverhang must be between 0 and 30000 feet.
   -or-
   The given value for majorStartOverhang must be between 0 and 30000 feet.
   -or-
   The given value for majorEndOverhang must be between 0 and 30000 feet.
         </td>
        </tr>
        <tr>
         <td>
          <a href="3693dcdf-67fb-0128-3be8-cad150e9498e.htm">
           Autodesk.Revit.Exceptions
           DisabledDisciplineException
          </a>
         </td>
         <td>
          None of the following disciplines is enabled: Structural.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="892f0ce6-5548-d299-c976-9355ac4109ee.htm">
       FabricSheetType Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">
       Autodesk.Revit.DB.Structure Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>