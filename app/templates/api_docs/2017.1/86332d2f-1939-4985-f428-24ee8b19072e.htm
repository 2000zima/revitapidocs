<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="79a92343-2342-8325-1b51-f12c4fb05481.htm">
       FormattedText Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Creates a new FormattedText object with unformatted text.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.1090.0)
     <br/>
     <b>
      Since:
     </b>
     2017
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="identifier">FormattedText</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">string</a> <span class="parameter">plainText</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">New</span> ( _
	<span class="parameter">plainText</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> _
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<span class="identifier">FormattedText</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a>^ <span class="parameter">plainText</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="plainText">
       <dt>
        <span class="parameter">
         plainText
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">
         System
         String
        </a>
        <br/>
        The text in a plain text form.
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     The given text should have no more than 30,000 characters.
   Line feed characters ('/n') are not allowed.
   An empty string is allowed.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ReformatText(TextNote textNote, <span class="highlight-keyword">string</span> textToChange)
{
    String plainText = textNote.Text;
    FormattedText formattedText = <span class="highlight-keyword">new</span> FormattedText(plainText);

    TextRange foundRange = formattedText.Find(textToChange, <span class="highlight-number">0</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">while</span> (foundRange.Length &gt; <span class="highlight-number">0</span>)
    {
        formattedText.SetBoldStatus(foundRange, <span class="highlight-keyword">true</span>);
        foundRange = formattedText.Find(textToChange, foundRange.End, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>);
    }

    textNote.SetFormattedText(formattedText);
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> ReformatText(textNote <span class="highlight-keyword">As</span> TextNote, textToChange <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>)
    <span class="highlight-keyword">Dim</span> plainText <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>] = textNote.Text
    <span class="highlight-keyword">Dim</span> formattedText <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FormattedText(plainText)

    <span class="highlight-keyword">Dim</span> foundRange <span class="highlight-keyword">As</span> TextRange = formattedText.Find(textToChange, <span class="highlight-number">0</span>, <span class="highlight-keyword">False</span>, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">While</span> foundRange.Length &gt; <span class="highlight-number">0</span>
        formattedText.SetBoldStatus(foundRange, <span class="highlight-keyword">True</span>)
        foundRange = formattedText.Find(textToChange, foundRange.[<span class="highlight-keyword">End</span>], <span class="highlight-keyword">False</span>, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">While</span>

    textNote.SetFormattedText(formattedText)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          plainText (excluding a carriage return character ('\r') at the end) has more than 30,000 characters.
   -or-
   plainText contains invalid characters such as a newline character.
         </td>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="79a92343-2342-8325-1b51-f12c4fb05481.htm">
       FormattedText Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="1c69d7c4-15ac-2649-a1f2-2cfc67b0dd30.htm">
       FormattedText Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>