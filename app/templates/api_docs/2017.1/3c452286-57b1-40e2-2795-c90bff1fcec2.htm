<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="d7e07baa-ee85-a6cd-3545-ff78502b221a.htm">
       Members
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     A three-dimensional rectangular box at an arbitrary location and orientation within the Revit model.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.1090.0)
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">BoundingBoxXYZ</span> : <a href="beb86ef5-39ad-3f0d-0cd9-0c929387a2bb.htm">APIObject</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">BoundingBoxXYZ</span> _
	<span class="keyword">Inherits</span> <a href="beb86ef5-39ad-3f0d-0cd9-0c929387a2bb.htm">APIObject</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">BoundingBoxXYZ</span> : <span class="keyword">public</span> <a href="beb86ef5-39ad-3f0d-0cd9-0c929387a2bb.htm">APIObject</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      BoundingBoxXYZ objects are used in Revit in several places related to views (for example, the section box of a
3D view or the definition of a section or detail view).  BoundingBoxXYZ objects can also be obtained from elements representing the 
boundary of the element in a given view.
     </p>
     <p>
      The extents of the box are determined by three orthogonal planes extended through the minimum (
      <a href="608e6914-2465-b572-2c5d-2a6cd696c740.htm">
       Min
      </a>
      ) 
and maximum (
      <a href="b79bd9ee-ccff-cc81-8a32-9eb9bdb1e58c.htm">
       Max
      </a>
      ) points, but the coordinates of these points and the orientation of the planes
in relation to the coordinates of the source model is determined by the box Transform (
      <a href="297887ab-69bb-548e-cfb6-a3a23f410604.htm">
       Transform
      </a>
      ).
     </p>
     <p>
      This class also has the ability to detect and mark certain extents as disabled.  Note that in the current Revit API uses
of this class it is not expected that Revit will give objects with disabled extents, and disabled extents in objects
sent to Revit will likely be ignored.
     </p>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetBoundingBoxXYZInfo(View3D view3D)
{
    <span class="highlight-keyword">string</span> message = <span class="highlight-literal">"BoundingBoxXYZ : "</span>;
    message += <span class="highlight-literal">"\nView name : "</span> + view3D.Name;
    BoundingBoxXYZ boundingBox = view3D.GetSectionBox();
    <span class="highlight-comment">// The section box of the 3D view can cut the model.</span>
    <span class="highlight-keyword">if</span> (view3D.IsSectionBoxActive)
    {
        BoundingBoxXYZ sectionBox = view3D.GetSectionBox();

        <span class="highlight-comment">// Note that the section box can be rotated and transformed.  </span>
        <span class="highlight-comment">// So the min/max corners coordinates relative to the model must be computed via the transform.</span>
        Transform trf = sectionBox.Transform;

        XYZ max = sectionBox.Max; <span class="highlight-comment">//Maximum coordinates (upper-right-front corner of the box before transform is applied).</span>
        XYZ min = sectionBox.Min; <span class="highlight-comment">//Minimum coordinates (lower-left-rear corner of the box before transform is applied).</span>

        <span class="highlight-comment">// Transform the min and max to model coordinates</span>
        XYZ maxInModelCoords = trf.OfPoint(max);
        XYZ minInModelCoords = trf.OfPoint(min);

        message += <span class="highlight-literal">"\nView has an active section box: "</span>;
        message += <span class="highlight-literal">"\n'Maximum' coordinates: "</span> + maxInModelCoords;
        message += <span class="highlight-literal">"\n'Minimum' coordinates: "</span> + minInModelCoords;
    }
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message);
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetBoundingBoxXYZInfo(view3D <span class="highlight-keyword">As</span> View3D)
    <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"BoundingBoxXYZ : "</span>
    message += vbLf &amp; <span class="highlight-literal">"View name : "</span> + view3D.Name
    <span class="highlight-keyword">Dim</span> boundingBox <span class="highlight-keyword">As</span> BoundingBoxXYZ = view3D.GetSectionBox()
    <span class="highlight-comment">' The section box of the 3D view can cut the model.</span>
    <span class="highlight-keyword">If</span> view3D.IsSectionBoxActive <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> sectionBox <span class="highlight-keyword">As</span> BoundingBoxXYZ = view3D.GetSectionBox()

        <span class="highlight-comment">' Note that the section box can be rotated and transformed.  </span>
        <span class="highlight-comment">' So the min/max corners coordinates relative to the model must be computed via the transform.</span>
        <span class="highlight-keyword">Dim</span> trf <span class="highlight-keyword">As</span> Transform = sectionBox.Transform

        <span class="highlight-keyword">Dim</span> max <span class="highlight-keyword">As</span> XYZ = sectionBox.Max
        <span class="highlight-comment">'Maximum coordinates (upper-right-front corner of the box before transform is applied).</span>
        <span class="highlight-keyword">Dim</span> min <span class="highlight-keyword">As</span> XYZ = sectionBox.Min
        <span class="highlight-comment">'Minimum coordinates (lower-left-rear corner of the box before transform is applied).</span>
        <span class="highlight-comment">' Transform the min and max to model coordinates</span>
        <span class="highlight-keyword">Dim</span> maxInModelCoords <span class="highlight-keyword">As</span> XYZ = trf.OfPoint(max)
        <span class="highlight-keyword">Dim</span> minInModelCoords <span class="highlight-keyword">As</span> XYZ = trf.OfPoint(min)

        message += vbLf &amp; <span class="highlight-literal">"View has an active section box: "</span>
        message += vbLf &amp; <span class="highlight-literal">"Maximum' coordinates: "</span> + maxInModelCoords.ToString()
        message += vbLf &amp; <span class="highlight-literal">"Minimum' coordinates: "</span> + minInModelCoords.ToString()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="beb86ef5-39ad-3f0d-0cd9-0c929387a2bb.htm">
      Autodesk.Revit.DB
      APIObject
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      BoundingBoxXYZ
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="d7e07baa-ee85-a6cd-3545-ff78502b221a.htm">
       BoundingBoxXYZ Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>