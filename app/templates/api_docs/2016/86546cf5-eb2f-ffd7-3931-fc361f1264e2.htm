<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="94db8ea8-d2c3-5e71-8030-466bcb8e4426.htm">
       Application Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Subscribe to the DocumentPrinting event to be notified when Revit is just about to print a view or ViewSet of the document.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">
      Autodesk.Revit.ApplicationServices
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 16.0.0.0 (16.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2010
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> event <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="cae91da6-7e05-e47c-5957-15330428c303.htm">DocumentPrintingEventArgs</a>&gt; <span class="identifier">DocumentPrinting</span></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> Event <span class="identifier">DocumentPrinting</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>(<span class="keyword">Of</span> <a href="cae91da6-7e05-e47c-5957-15330428c303.htm">DocumentPrintingEventArgs</a>)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
 <span class="keyword">event</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="cae91da6-7e05-e47c-5957-15330428c303.htm">DocumentPrintingEventArgs</a>^&gt;^ <span class="identifier">DocumentPrinting</span> {
	<span class="keyword">void</span> <span class="keyword">add</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="cae91da6-7e05-e47c-5957-15330428c303.htm">DocumentPrintingEventArgs</a>^&gt;^ <span class="parameter">value</span>);
	<span class="keyword">void</span> <span class="keyword">remove</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="cae91da6-7e05-e47c-5957-15330428c303.htm">DocumentPrintingEventArgs</a>^&gt;^ <span class="parameter">value</span>);
}</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      This event is raised when Revit is just about to print a view or ViewSet of the document.
     </p>
     <p>
      Handlers of this event are permitted to make modifications to any document (including the active document),
   except for documents that are currently in read-only mode.
     </p>
     <p>
      Event is cancellable. To cancel it, call the 'Cancel()' method of event's argument to True.
   Your application is responsible for providing feedback to the user about the reason for the cancellation.
     </p>
     <p>
      The following API functions are not available for current document during this event:
     </p>
     <ul>
      <li>
       All overloads of Autodesk.Revit.DB.Document.Export()
      </li>
      <li>
       Autodesk::Revit::DB::Document::Print
      </li>
      <li>
       <a href="1ea1e825-8044-7a27-d9b9-ca463443c3b9.htm">
        Print
       </a>
       and similar overloads.
      </li>
      <li>
       <a href="0c9524b7-33b5-8c76-2843-c7024f03e4d7.htm">
        SubmitPrint
       </a>
       and similar overloads.
      </li>
      <li>
       <span class="nolink">
        [!:Autodesk::Revit::DB::Document::Close()]
       </span>
       and similar overloads.
      </li>
      <li>
       <span class="nolink">
        [!:Autodesk::Revit::DB::Document::Save()]
       </span>
       .
      </li>
      <li>
       <span class="nolink">
        [!:Autodesk::Revit::DB::Document::SaveAs(String)]
       </span>
       and similar overloads.
      </li>
     </ul>
     <p>
     </p>
     <p>
      Exception
      <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
       InvalidOperationException
      </a>
      will be thrown if any of the above methods is called during this event.
     </p>
     <p>
      After this event, for each view being printed,
      <a href="9dab43ee-41f1-99d3-6480-d32af1675ad4.htm">
       ViewPrinting
      </a>
      and
      <a href="5f995f6a-15d8-b1c3-9bc4-3bd203dc16f6.htm">
       ViewPrinted
      </a>
      events will be raised.
   Another event
      <span class="nolink">
       [!:Autodesk::Revit::DB::Document::DocumentPrinted]
      </span>
      will be raised immediately after document printing
   is finished.
     </p>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Application_DocumentPrinting : IExternalApplication
{
    <span class="highlight-comment">/// &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement the OnStartup method to register events when Revit starts.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnStartup(UIControlledApplication application)
    {
        <span class="highlight-comment">// Register related events</span>
       application.ControlledApplication.DocumentPrinting += <span class="highlight-keyword">new</span> EventHandler&lt;Autodesk.Revit.DB.Events.DocumentPrintingEventArgs&gt;(AppDocumentPrinting);
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement this method to unregister the subscribed events when Revit exits.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnShutdown(UIControlledApplication application)
    {
        <span class="highlight-comment">// unregister events</span>
       application.ControlledApplication.DocumentPrinting -= <span class="highlight-keyword">new</span> EventHandler&lt;Autodesk.Revit.DB.Events.DocumentPrintingEventArgs&gt;(AppDocumentPrinting);
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }
    <span class="highlight-comment">/// &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">/// Code ID: 501</span>
    <span class="highlight-comment">/// For DocumentPrinting class description</span>
    <span class="highlight-comment">/// &lt;/TrivialCode&gt;</span>


    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Handler method for DocumentPrinting event, it will display some event arguments.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> AppDocumentPrinting(<span class="highlight-keyword">object</span> sender, Autodesk.Revit.DB.Events.DocumentPrintingEventArgs args)
    {
        StringBuilder info = <span class="highlight-keyword">new</span> StringBuilder();
        info.AppendLine(<span class="highlight-literal">"DocumentPrintingEventArgs Parameters ------&gt;"</span>);

        info.AppendLine(<span class="highlight-literal">"    Event Cancellable   : "</span> + args.Cancellable);
        info.AppendLine(<span class="highlight-literal">"    Views to be printed : "</span>); <span class="highlight-comment">// Views</span>
        Application app = sender <span class="highlight-keyword">as</span> Application;
        DumpViewsInfo(app, args.GetViewElementIds(), <span class="highlight-literal">"    "</span>, <span class="highlight-keyword">ref</span> info);

        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,info.ToString());
    }


    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Dump information of views: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="views"&gt;Views to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="prefix"&gt;Prefix mark for each line added to message box.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> DumpViewsInfo(Application app, System.Collections.Generic.IList&lt;ElementId&gt; viewIds, String prefix, <span class="highlight-keyword">ref</span> StringBuilder info)
    {
        <span class="highlight-keyword">int</span> index = <span class="highlight-number">0</span>;
        UIApplication uiApp = <span class="highlight-keyword">new</span> UIApplication(app);
        <span class="highlight-keyword">foreach</span> (ElementId curViewId <span class="highlight-keyword">in</span> viewIds)
        {
            Autodesk.Revit.DB.View curView = uiApp.ActiveUIDocument.Document.GetElement(curViewId) <span class="highlight-keyword">as</span> Autodesk.Revit.DB.View;
            DumpViewInfo(curView, String.Format(<span class="highlight-literal">"{0}#{1}"</span>, prefix, index++), <span class="highlight-keyword">ref</span> info);
        }
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Dump information of single view: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="view"&gt;View element to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="prefix"&gt;Prefix mark for each line sent to message box.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> DumpViewInfo(Autodesk.Revit.DB.View view, String prefix, <span class="highlight-keyword">ref</span> StringBuilder info)
    {
        info.AppendLine(String.Format(<span class="highlight-literal">"{0} Id: {1}, ViewName: {2}, ViewType: {3}"</span>,
            prefix, view.Id.IntegerValue, view.ViewName, view.ViewType));
    }
    <span class="highlight-comment">/// &lt;/ExampleMethod&gt;</span>
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> Application_DocumentPrinting
    <span class="highlight-keyword">Implements</span> IExternalApplication
    <span class="highlight-comment">' &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement the OnStartup method to register events when Revit starts.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnStartup(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnStartup
        <span class="highlight-comment">' Register related events</span>
        <span class="highlight-keyword">AddHandler</span> application.ControlledApplication.DocumentPrinting, <span class="highlight-keyword">AddressOf</span> AppDocumentPrinting
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement this method to unregister the subscribed events when Revit exits.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnShutdown(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnShutdown
        <span class="highlight-comment">' unregister events</span>
        <span class="highlight-keyword">RemoveHandler</span> application.ControlledApplication.DocumentPrinting, <span class="highlight-keyword">AddressOf</span> AppDocumentPrinting
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
    <span class="highlight-comment">' &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">' Code ID: 501</span>
    <span class="highlight-comment">' For DocumentPrinting class description</span>
    <span class="highlight-comment">' &lt;/TrivialCode&gt;</span>



    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Handler method for DocumentPrinting event, it will display some event arguments.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> AppDocumentPrinting(sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, args <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Events.DocumentPrintingEventArgs)
        <span class="highlight-keyword">Dim</span> info <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StringBuilder()
        info.AppendLine(<span class="highlight-literal">"DocumentPrintingEventArgs Parameters ------&gt;"</span>)

        info.AppendLine(<span class="highlight-literal">"    Event Cancellable   : "</span> &amp; Convert.ToString(args.Cancellable))
        info.AppendLine(<span class="highlight-literal">"    Views to be printed : "</span>)
        <span class="highlight-comment">' Views</span>
        <span class="highlight-keyword">Dim</span> app <span class="highlight-keyword">As</span> Application = <span class="highlight-keyword">TryCast</span>(sender, Application)
        DumpViewsInfo(app, args.GetViewElementIds(), <span class="highlight-literal">"    "</span>, info)

        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, info.ToString())
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>


    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Dump information of views: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-comment">' &lt;param name="views"&gt;Views to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="prefix"&gt;Prefix mark for each line added to message box.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> DumpViewsInfo(app <span class="highlight-keyword">As</span> Application, viewIds <span class="highlight-keyword">As</span> System.Collections.Generic.IList(<span class="highlight-keyword">Of</span> ElementId), prefix <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>], <span class="highlight-keyword">ByRef</span> info <span class="highlight-keyword">As</span> StringBuilder)
        <span class="highlight-keyword">Dim</span> index <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span>
        <span class="highlight-keyword">Dim</span> uiApp <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> UIApplication(app)
        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> curViewId <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> viewIds
            <span class="highlight-keyword">Dim</span> curView <span class="highlight-keyword">As</span> Autodesk.Revit.DB.View = <span class="highlight-keyword">TryCast</span>(uiApp.ActiveUIDocument.Document.GetElement(curViewId), Autodesk.Revit.DB.View)
            DumpViewInfo(curView, [<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"{0}#{1}"</span>, prefix, System.Math.Max(System.Threading.Interlocked.Increment(index), index - <span class="highlight-number">1</span>)), info)
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Dump information of single view: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-comment">' &lt;param name="view"&gt;View element to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="prefix"&gt;Prefix mark for each line sent to message box.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> DumpViewInfo(view <span class="highlight-keyword">As</span> Autodesk.Revit.DB.View, prefix <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>], <span class="highlight-keyword">ByRef</span> info <span class="highlight-keyword">As</span> StringBuilder)
        info.AppendLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"{0} Id: {1}, ViewName: {2}, ViewType: {3}"</span>, prefix, view.Id.IntegerValue, view.ViewName, view.ViewType))
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
    <span class="highlight-comment">' &lt;/ExampleMethod&gt;</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="94db8ea8-d2c3-5e71-8030-466bcb8e4426.htm">
       Application Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">
       Autodesk.Revit.ApplicationServices Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>