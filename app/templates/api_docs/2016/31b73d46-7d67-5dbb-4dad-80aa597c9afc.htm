<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="8eccaa93-cc99-fd37-15ad-24d201985d9b.htm">
       Members
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Contains the current user selection of elements within the project.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="11785869-cc9e-03fc-97db-767a59af10a1.htm">
      Autodesk.Revit.UI.Selection
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPIUI
     </span>
     (in RevitAPIUI.dll) Version: 16.0.0.0 (16.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Selection</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Selection</span> _
	<span class="keyword">Implements</span> <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Selection</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     The Selection object is used to retrieve the current user selected elements when an external API command is executed.
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code>[Autodesk.Revit.Attributes.Transaction(TransactionMode.ReadOnly)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Document_Selection : IExternalCommand
{
    <span class="highlight-keyword">public</span> Autodesk.Revit.UI.Result Execute(ExternalCommandData commandData,
        <span class="highlight-keyword">ref</span> <span class="highlight-keyword">string</span> message, ElementSet elements)
    {
        <span class="highlight-keyword">try</span>
        {
            <span class="highlight-comment">// Select some elements in Revit before invoking this command</span>

            <span class="highlight-comment">// Get the handle of current document.</span>
            UIDocument uidoc = commandData.Application.ActiveUIDocument;

            <span class="highlight-comment">// Get the element selection of current document.</span>
            Selection selection = uidoc.Selection;
            ICollection&lt;ElementId&gt; selectedIds = uidoc.Selection.GetElementIds();

            <span class="highlight-keyword">if</span> (<span class="highlight-number">0</span> == selectedIds.Count)
            {
                <span class="highlight-comment">// If no elements selected.</span>
                TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,<span class="highlight-literal">"You haven't selected any elements."</span>);
            }
            <span class="highlight-keyword">else</span>
            {
                String info = <span class="highlight-literal">"Ids of selected elements in the document are: "</span>;
                <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> selectedIds)
                {
                   info += <span class="highlight-literal">"\n\t"</span> + id.IntegerValue;
                }

                TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,info);
            }
        }
        <span class="highlight-keyword">catch</span> (Exception e)
        {
            message = e.Message;
            <span class="highlight-keyword">return</span> Autodesk.Revit.UI.Result.Failed;
        }

        <span class="highlight-keyword">return</span> Autodesk.Revit.UI.Result.Succeeded;
    }
    <span class="highlight-comment">/// &lt;/ExampleMethod&gt;</span>
}</code></pre>
      </div>
     </span>
     <span codelanguage="CSharp" id="cbc_2" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> ChangeSelection(UIDocument uidoc)
{
    <span class="highlight-comment">// Get selected elements from current document.</span>
    ICollection&lt;ElementId&gt; selectedIds = uidoc.Selection.GetElementIds();

    <span class="highlight-comment">// Display current number of selected elements</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Number of selected elements: "</span> + selectedIds.Count.ToString());

    <span class="highlight-comment">// Go through the selected items and filter out walls only.</span>
    ICollection&lt;ElementId&gt; selectedWallIds = <span class="highlight-keyword">new</span> List&lt;ElementId&gt;();

    <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> selectedIds)
    {
        Element elements = uidoc.Document.GetElement(id);
        <span class="highlight-keyword">if</span> (elements <span class="highlight-keyword">is</span> Wall)
        {
            selectedWallIds.Add(id);
        }
    }

    <span class="highlight-comment">// Set the created element set as current select element set.</span>
    uidoc.Selection.SetElementIds(selectedWallIds);

    <span class="highlight-comment">// Give the user some information.</span>
    <span class="highlight-keyword">if</span> (<span class="highlight-number">0</span> != selectedWallIds.Count)
    {
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, selectedWallIds.Count.ToString() + <span class="highlight-literal">" Walls are selected!"</span>);
    }
    <span class="highlight-keyword">else</span>
    {
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,<span class="highlight-literal">"No Walls have been selected!"</span>);
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_3" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code>&lt;Autodesk.Revit.Attributes.Transaction(TransactionMode.[<span class="highlight-keyword">ReadOnly</span>])&gt; _
&lt;Autodesk.Revit.Attributes.Regeneration(RegenerationOption.Manual)&gt; _
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> Document_Selection
    <span class="highlight-keyword">Implements</span> IExternalCommand
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> Execute(commandData <span class="highlight-keyword">As</span> ExternalCommandData, <span class="highlight-keyword">ByRef</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>, elements <span class="highlight-keyword">As</span> ElementSet) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalCommand.Execute
        <span class="highlight-keyword">Try</span>
            <span class="highlight-comment">' Select some elements in Revit before invoking this command</span>


            <span class="highlight-comment">' Get the handle of current document.</span>
            <span class="highlight-keyword">Dim</span> uidoc <span class="highlight-keyword">As</span> UIDocument = commandData.Application.ActiveUIDocument

            <span class="highlight-comment">' Get the element selection of current document.</span>
            <span class="highlight-keyword">Dim</span> selection <span class="highlight-keyword">As</span> Selection = uidoc.Selection
            <span class="highlight-keyword">Dim</span> selectedIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = uidoc.Selection.GetElementIds()

            <span class="highlight-keyword">If</span> <span class="highlight-number">0</span> = selectedIds.Count <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' If no elements selected.</span>
                TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"You haven't selected any elements."</span>)
            <span class="highlight-keyword">Else</span>
                <span class="highlight-keyword">Dim</span> info <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>] = <span class="highlight-literal">"Ids of selected elements in the document are: "</span>
                <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> selectedIds
                    info += vbLf &amp; vbTab + id.IntegerValue
                <span class="highlight-keyword">Next</span>

                TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, info)
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Catch</span> e <span class="highlight-keyword">As</span> Exception
            message = e.Message
            <span class="highlight-keyword">Return</span> Autodesk.Revit.UI.Result.Failed
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Try</span>

        <span class="highlight-keyword">Return</span> Autodesk.Revit.UI.Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
    <span class="highlight-comment">' &lt;/ExampleMethod&gt;</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_4" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> ChangeSelection(uidoc <span class="highlight-keyword">As</span> UIDocument)
   <span class="highlight-comment">' Get selected elements from current document.</span>
   <span class="highlight-keyword">Dim</span> selectedIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = uidoc.Selection.GetElementIds()

   <span class="highlight-comment">' Display current number of selected elements</span>
   TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Number of selected elements: "</span> &amp; selectedIds.Count.ToString())

   <span class="highlight-comment">' Go through the selected items and filter out walls only.</span>
   <span class="highlight-keyword">Dim</span> selectedWallIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> ElementId)()

   <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> selectedIds
      <span class="highlight-keyword">Dim</span> elements <span class="highlight-keyword">As</span> Element = uidoc.Document.GetElement(id)
      <span class="highlight-keyword">If</span> <span class="highlight-keyword">TypeOf</span> elements <span class="highlight-keyword">Is</span> Wall <span class="highlight-keyword">Then</span>
         selectedWallIds.Add(id)
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
   <span class="highlight-keyword">Next</span>

   <span class="highlight-comment">' Set the created element set as current select element set.</span>
   uidoc.Selection.SetElementIds(selectedWallIds)

   <span class="highlight-comment">' Give the user some information.</span>
   <span class="highlight-keyword">If</span> <span class="highlight-number">0</span> &lt;&gt; selectedWallIds.Count <span class="highlight-keyword">Then</span>
      TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, selectedWallIds.Count.ToString() &amp; <span class="highlight-literal">" Walls are selected!"</span>)
   <span class="highlight-keyword">Else</span>
      TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"No Walls have been selected!"</span>)
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.UI.Selection
      Selection
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="8eccaa93-cc99-fd37-15ad-24d201985d9b.htm">
       Selection Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="11785869-cc9e-03fc-97db-767a59af10a1.htm">
       Autodesk.Revit.UI.Selection Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>