<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="cba2c84a-22c0-e6e7-a99c-67656901853a.htm">
       ItemFactoryBase Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Add a line based detail family instance into the Autodesk Revit document, 
using an line and a view where the instance should be placed.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
      Autodesk.Revit.Creation
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 16.0.0.0 (16.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a> <span class="identifier">NewFamilyInstance</span>(
	<a href="e7329450-434a-918b-661c-65e15e0585a5.htm">Line</a> <span class="parameter">line</span>,
	<a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a> <span class="parameter">symbol</span>,
	<a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a> <span class="parameter">specView</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewFamilyInstance</span> ( _
	<span class="parameter">line</span> <span class="keyword">As</span> <a href="e7329450-434a-918b-661c-65e15e0585a5.htm">Line</a>, _
	<span class="parameter">symbol</span> <span class="keyword">As</span> <a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a>, _
	<span class="parameter">specView</span> <span class="keyword">As</span> <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a> _
) <span class="keyword">As</span> <a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="0d2231f8-91e6-794f-92ae-16aad8014b27.htm">FamilyInstance</a>^ <span class="identifier">NewFamilyInstance</span>(
	<a href="e7329450-434a-918b-661c-65e15e0585a5.htm">Line</a>^ <span class="parameter">line</span>, 
	<a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">FamilySymbol</a>^ <span class="parameter">symbol</span>, 
	<a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a>^ <span class="parameter">specView</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="line">
       <dt>
        <span class="parameter">
         line
        </span>
       </dt>
       <dd>
        Type:
        <a href="e7329450-434a-918b-661c-65e15e0585a5.htm">
         Autodesk.Revit.DB
         Line
        </a>
        <br/>
        The line location of family instance. The line must in the plane of the view.
       </dd>
      </dl>
      <dl paramname="symbol">
       <dt>
        <span class="parameter">
         symbol
        </span>
       </dt>
       <dd>
        Type:
        <a href="a1acaed0-6a62-4c1d-94f5-4e27ce0923d3.htm">
         Autodesk.Revit.DB
         FamilySymbol
        </a>
        <br/>
        A family symbol object that represents the type of the instance that is to be inserted.
       </dd>
      </dl>
      <dl paramname="specView">
       <dt>
        <span class="parameter">
         specView
        </span>
       </dt>
       <dd>
        Type:
        <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">
         Autodesk.Revit.DB
         View
        </a>
        <br/>
        A 2D view in which to display the family instance.
       </dd>
      </dl>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     This overload applies only to 2D family line based detail symbols.
The type/symbol that is used must be loaded into the document before this method is called. 
Families and their symbols can be loaded using the Document.LoadFamily 
or Document.LoadFamilySymbol methods.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">void</span> CreateDetailComponent(Autodesk.Revit.DB.Document document, View view)
{
    <span class="highlight-comment">// Create a detail component in the given view if it is a detail or drafting view</span>
    <span class="highlight-keyword">if</span> (view.ViewType == ViewType.Detail ||
        view.ViewType == ViewType.DraftingView)
    {
        FamilySymbol symbol = <span class="highlight-keyword">null</span>;
        FilteredElementCollector fsCollector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
        fsCollector.OfClass(<span class="highlight-keyword">typeof</span>(FamilySymbol)).OfCategory(BuiltInCategory.OST_DetailComponents);
        ICollection&lt;Element&gt; collection = fsCollector.ToElements();
        <span class="highlight-keyword">foreach</span> (Element element <span class="highlight-keyword">in</span> collection)
        {
            FamilySymbol current = element <span class="highlight-keyword">as</span> FamilySymbol;
            <span class="highlight-comment">// This NewFamilyInstance overload requires a curve based family</span>
            <span class="highlight-keyword">if</span> (current.Family.FamilyPlacementType == FamilyPlacementType.CurveBasedDetail)
            {
                symbol = current;
                <span class="highlight-keyword">break</span>;
            }
        }

        <span class="highlight-keyword">if</span> (symbol != <span class="highlight-keyword">null</span>)
        {
            <span class="highlight-comment">// create a 2' detail component at the view's origin</span>
            XYZ start = view.Origin;
            XYZ end = start + <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);

            Line line = Line.CreateBound(start, end);

            FamilyInstance instance = document.Create.NewFamilyInstance(line, symbol, view);
        }
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> CreateDetailComponent(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document, view <span class="highlight-keyword">As</span> View)
    <span class="highlight-comment">' Create a detail component in the given view if it is a detail or drafting view</span>
    <span class="highlight-keyword">If</span> view.ViewType = ViewType.Detail <span class="highlight-keyword">OrElse</span> view.ViewType = ViewType.DraftingView <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> symbol <span class="highlight-keyword">As</span> FamilySymbol = <span class="highlight-keyword">Nothing</span>
        <span class="highlight-keyword">Dim</span> fsCollector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
        fsCollector.OfClass(<span class="highlight-keyword">GetType</span>(FamilySymbol)).OfCategory(BuiltInCategory.OST_DetailComponents)
        <span class="highlight-keyword">Dim</span> collection <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element) = fsCollector.ToElements()
        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> element <span class="highlight-keyword">As</span> Element <span class="highlight-keyword">In</span> collection
            <span class="highlight-keyword">Dim</span> current <span class="highlight-keyword">As</span> FamilySymbol = <span class="highlight-keyword">TryCast</span>(element, FamilySymbol)
            <span class="highlight-comment">' This NewFamilyInstance overload requires a curve based family</span>
            <span class="highlight-keyword">If</span> current.Family.FamilyPlacementType = FamilyPlacementType.CurveBasedDetail <span class="highlight-keyword">Then</span>
                symbol = current
                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Next</span>

        <span class="highlight-keyword">If</span> symbol <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' create a 2' detail component at the view's origin</span>
            <span class="highlight-keyword">Dim</span> start <span class="highlight-keyword">As</span> XYZ = view.Origin
            <span class="highlight-keyword">Dim</span> [<span class="highlight-keyword">end</span>] <span class="highlight-keyword">As</span> XYZ = start + <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)

            <span class="highlight-keyword">Dim</span> line__1 <span class="highlight-keyword">As</span> Line = Line.CreateBound(start, [<span class="highlight-keyword">end</span>])

            <span class="highlight-keyword">Dim</span> instance <span class="highlight-keyword">As</span> FamilyInstance = document.Create.NewFamilyInstance(line__1, symbol, view)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          Thrown when input argument line or symbol or specView is
          <span class="keyword">
          </span>
          <span class="nu">
           a null reference (
           <span class="keyword">
            Nothing
           </span>
           in Visual Basic)
          </span>
          .
         </td>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown when input argument line or symbol or specView is invalid,
or cannot make such type in the specView,
or the line is not in the plane of specView.
         </td>
        </tr>
        <tr>
         <td>
          <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
           Autodesk.Revit.Exceptions
           InvalidOperationException
          </a>
         </td>
         <td>
          Thrown when failed to create the instance.
         </td>
        </tr>
        <tr>
         <td>
          <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
           Autodesk.Revit.Exceptions
           InvalidOperationException
          </a>
         </td>
         <td>
          Thrown when attempting to place a model-based family.  Only 2D detail families can be placed in views.
         </td>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown if The symbol is not active.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="cba2c84a-22c0-e6e7-a99c-67656901853a.htm">
       ItemFactoryBase Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="451ee414-cea0-e9bd-227b-c73bc93507dd.htm">
       NewFamilyInstance Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
       Autodesk.Revit.Creation Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>