<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">
       Document Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Creates a new IndependentTag Element.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
      Autodesk.Revit.Creation
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 16.0.0.0 (16.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="e52073e2-9d98-6fb5-eb43-288cf9ed2e28.htm">IndependentTag</a> <span class="identifier">NewTag</span>(
	<a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a> <span class="parameter">dbview</span>,
	<a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a> <span class="parameter">elemToTag</span>,
	<a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">bool</a> <span class="parameter">addLeader</span>,
	<a href="1e087d7f-aa78-b319-afc6-2d9019d3646d.htm">TagMode</a> <span class="parameter">tagMode</span>,
	<a href="0f1faf70-46a4-71a1-63c0-3425dfc691a0.htm">TagOrientation</a> <span class="parameter">tagOrientation</span>,
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a> <span class="parameter">pnt</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewTag</span> ( _
	<span class="parameter">dbview</span> <span class="keyword">As</span> <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a>, _
	<span class="parameter">elemToTag</span> <span class="keyword">As</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a>, _
	<span class="parameter">addLeader</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a>, _
	<span class="parameter">tagMode</span> <span class="keyword">As</span> <a href="1e087d7f-aa78-b319-afc6-2d9019d3646d.htm">TagMode</a>, _
	<span class="parameter">tagOrientation</span> <span class="keyword">As</span> <a href="0f1faf70-46a4-71a1-63c0-3425dfc691a0.htm">TagOrientation</a>, _
	<span class="parameter">pnt</span> <span class="keyword">As</span> <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a> _
) <span class="keyword">As</span> <a href="e52073e2-9d98-6fb5-eb43-288cf9ed2e28.htm">IndependentTag</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="e52073e2-9d98-6fb5-eb43-288cf9ed2e28.htm">IndependentTag</a>^ <span class="identifier">NewTag</span>(
	<a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a>^ <span class="parameter">dbview</span>, 
	<a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a>^ <span class="parameter">elemToTag</span>, 
	<a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">bool</a> <span class="parameter">addLeader</span>, 
	<a href="1e087d7f-aa78-b319-afc6-2d9019d3646d.htm">TagMode</a> <span class="parameter">tagMode</span>, 
	<a href="0f1faf70-46a4-71a1-63c0-3425dfc691a0.htm">TagOrientation</a> <span class="parameter">tagOrientation</span>, 
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>^ <span class="parameter">pnt</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="dbview">
       <dt>
        <span class="parameter">
         dbview
        </span>
       </dt>
       <dd>
        Type:
        <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">
         Autodesk.Revit.DB
         View
        </a>
        <br/>
        The view in which the tag is to be visible.
       </dd>
      </dl>
      <dl paramname="elemToTag">
       <dt>
        <span class="parameter">
         elemToTag
        </span>
       </dt>
       <dd>
        Type:
        <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
         Autodesk.Revit.DB
         Element
        </a>
        <br/>
        The host object of tag.
       </dd>
      </dl>
      <dl paramname="addLeader">
       <dt>
        <span class="parameter">
         addLeader
        </span>
       </dt>
       <dd>
        Type:
        <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">
         System
         Boolean
        </a>
        <br/>
        Whether there will be a leader.
       </dd>
      </dl>
      <dl paramname="tagMode">
       <dt>
        <span class="parameter">
         tagMode
        </span>
       </dt>
       <dd>
        Type:
        <a href="1e087d7f-aa78-b319-afc6-2d9019d3646d.htm">
         Autodesk.Revit.DB
         TagMode
        </a>
        <br/>
        The mode of the tag. Add by Category, add by Multi-Category, or add by material.
       </dd>
      </dl>
      <dl paramname="tagOrientation">
       <dt>
        <span class="parameter">
         tagOrientation
        </span>
       </dt>
       <dd>
        Type:
        <a href="0f1faf70-46a4-71a1-63c0-3425dfc691a0.htm">
         Autodesk.Revit.DB
         TagOrientation
        </a>
        <br/>
        The orientation of the tag.
       </dd>
      </dl>
      <dl paramname="pnt">
       <dt>
        <span class="parameter">
         pnt
        </span>
       </dt>
       <dd>
        Type:
        <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">
         Autodesk.Revit.DB
         XYZ
        </a>
        <br/>
        If not using a leader, this is the position of the tag head.  If using a leader, then the tag will be placed with the default leader length as close to this input point as possible.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     If successful, an IndependentTag object is returned.
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     This method forms a tag relationship to the host object.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> IndependentTag CreateIndependentTag(Autodesk.Revit.DB.Document document, Wall wall)
{
    <span class="highlight-comment">// make sure active view is not a 3D view</span>
    Autodesk.Revit.DB.View view = document.ActiveView;

    <span class="highlight-comment">// define tag mode and tag orientation for new tag</span>
    TagMode tagMode = TagMode.TM_ADDBY_CATEGORY;
    TagOrientation tagorn = TagOrientation.Horizontal;

    <span class="highlight-comment">// Add the tag to the middle of the wall</span>
    LocationCurve wallLoc = wall.Location <span class="highlight-keyword">as</span> LocationCurve;
    XYZ wallStart = wallLoc.Curve.GetEndPoint(<span class="highlight-number">0</span>);
    XYZ wallEnd = wallLoc.Curve.GetEndPoint(<span class="highlight-number">1</span>);
    XYZ wallMid = wallLoc.Curve.Evaluate(<span class="highlight-number">0.5</span>, <span class="highlight-keyword">true</span>);

    IndependentTag newTag = document.Create.NewTag(view, wall, <span class="highlight-keyword">true</span>, tagMode, tagorn, wallMid);
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == newTag)
    {
        <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"Create IndependentTag Failed."</span>);
    }

    <span class="highlight-comment">// newTag.TagText is read-only, so we change the Type Mark type parameter to </span>
    <span class="highlight-comment">// set the tag text.  The label parameter for the tag family determines</span>
    <span class="highlight-comment">// what type parameter is used for the tag text.</span>

    WallType type = wall.WallType;

    Parameter foundParameter = type.LookupParameter(<span class="highlight-literal">"Type Mark"</span>);
    <span class="highlight-keyword">bool</span> result = foundParameter.Set(<span class="highlight-literal">"Hello"</span>);

    <span class="highlight-comment">// set leader mode free</span>
    <span class="highlight-comment">// otherwise leader end point move with elbow point</span>

    newTag.LeaderEndCondition = LeaderEndCondition.Free;
    XYZ elbowPnt = wallMid + <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">5.0</span>, <span class="highlight-number">5.0</span>, <span class="highlight-number">0.0</span>);
    newTag.LeaderElbow = elbowPnt;
    XYZ headerPnt = wallMid + <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10.0</span>, <span class="highlight-number">10.0</span>, <span class="highlight-number">0.0</span>);
    newTag.TagHeadPosition = headerPnt;

    <span class="highlight-keyword">return</span> newTag;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateIndependentTag(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document, wall <span class="highlight-keyword">As</span> Wall) <span class="highlight-keyword">As</span> IndependentTag
    <span class="highlight-comment">' make sure active view is not a 3D view</span>
    <span class="highlight-keyword">Dim</span> view <span class="highlight-keyword">As</span> Autodesk.Revit.DB.View = document.ActiveView

    <span class="highlight-comment">' define tag mode and tag orientation for new tag</span>
    <span class="highlight-keyword">Dim</span> tagMode__1 <span class="highlight-keyword">As</span> TagMode = TagMode.TM_ADDBY_CATEGORY
    <span class="highlight-keyword">Dim</span> tagorn <span class="highlight-keyword">As</span> TagOrientation = TagOrientation.Horizontal

    <span class="highlight-comment">' Add the tag to the middle of the wall</span>
    <span class="highlight-keyword">Dim</span> wallLoc <span class="highlight-keyword">As</span> LocationCurve = <span class="highlight-keyword">TryCast</span>(wall.Location, LocationCurve)
    <span class="highlight-keyword">Dim</span> wallStart <span class="highlight-keyword">As</span> XYZ = wallLoc.Curve.GetEndPoint(<span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> wallEnd <span class="highlight-keyword">As</span> XYZ = wallLoc.Curve.GetEndPoint(<span class="highlight-number">1</span>)
    <span class="highlight-keyword">Dim</span> wallMid <span class="highlight-keyword">As</span> XYZ = wallLoc.Curve.Evaluate(<span class="highlight-number">0.5</span>, <span class="highlight-keyword">True</span>)

    <span class="highlight-keyword">Dim</span> newTag <span class="highlight-keyword">As</span> IndependentTag = document.Create.NewTag(view, wall, <span class="highlight-keyword">True</span>, tagMode__1, tagorn, wallMid)
    <span class="highlight-keyword">If</span> newTag <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> Exception(<span class="highlight-literal">"Create IndependentTag Failed."</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' newTag.TagText is read-only, so we change the Type Mark type parameter to </span>
    <span class="highlight-comment">' set the tag text.  The label parameter for the tag family determines</span>
    <span class="highlight-comment">' what type parameter is used for the tag text.</span>


    <span class="highlight-keyword">Dim</span> type <span class="highlight-keyword">As</span> WallType = wall.WallType

    <span class="highlight-keyword">Dim</span> foundParameter <span class="highlight-keyword">As</span> Parameter = type.LookupParameter(<span class="highlight-literal">"Type Mark"</span>)
    <span class="highlight-keyword">Dim</span> result <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = foundParameter.[<span class="highlight-keyword">Set</span>](<span class="highlight-literal">"Hello"</span>)

    <span class="highlight-comment">' set leader mode free</span>
    <span class="highlight-comment">' otherwise leader end point move with elbow point</span>


    newTag.LeaderEndCondition = LeaderEndCondition.Free
    <span class="highlight-keyword">Dim</span> elbowPnt <span class="highlight-keyword">As</span> XYZ = wallMid + <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">5.0</span>, <span class="highlight-number">5.0</span>, <span class="highlight-number">0.0</span>)
    newTag.LeaderElbow = elbowPnt
    <span class="highlight-keyword">Dim</span> headerPnt <span class="highlight-keyword">As</span> XYZ = wallMid + <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10.0</span>, <span class="highlight-number">10.0</span>, <span class="highlight-number">0.0</span>)
    newTag.TagHeadPosition = headerPnt

    <span class="highlight-keyword">Return</span> newTag
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
           Autodesk.Revit.Exceptions
           InvalidOperationException
          </a>
         </td>
         <td>
          If the view is a perspective view.
         </td>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown if the element to tag does not exist in the given document.
         </td>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown if the view does not exist in the given document.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">
       Document Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
       Autodesk.Revit.Creation Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>