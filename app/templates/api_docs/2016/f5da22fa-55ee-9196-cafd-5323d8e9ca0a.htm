<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="a382b180-be52-6fa7-dfe1-b478ccc6ed5f.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Options to customize Revit behavior when accessing the central model.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 16.0.0.0 (16.0.0.0)
     <br/>
     <b>
      Since:
     </b>
     2014
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">TransactWithCentralOptions</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">TransactWithCentralOptions</span> _
	<span class="keyword">Implements</span> <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">TransactWithCentralOptions</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> SynchWithCentralWithMessage(Document doc)
{
    <span class="highlight-comment">// Checkout workset (for use with "keep checked out worksets" option later)</span>
    FilteredWorksetCollector fwc = <span class="highlight-keyword">new</span> FilteredWorksetCollector(doc);
    fwc.OfKind(WorksetKind.UserWorkset);
    Workset workset1 = fwc.First&lt;Workset&gt;(ws =&gt; ws.Name == <span class="highlight-literal">"Workset1"</span>);

    WorksharingUtils.CheckoutWorksets(doc, <span class="highlight-keyword">new</span> WorksetId[] { workset1.Id });

    <span class="highlight-comment">// Make a change</span>
    <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Add Level"</span>))
    {
        t.Start();
        Level.Create(doc, <span class="highlight-number">100</span>);
        t.Commit();
    }

    <span class="highlight-comment">// Tell user what we're doing</span>
    TaskDialog td = <span class="highlight-keyword">new</span> TaskDialog(<span class="highlight-literal">"Alert"</span>);
    td.MainInstruction = <span class="highlight-literal">"Application 'Automatic element creator' has made changes and is prepared to synchronize with central."</span>;
    td.MainContent = <span class="highlight-literal">"This will update central with all changes currently made in the project by the application or by the user.  This operation "</span> +
                     <span class="highlight-literal">"may take some time depending on the number of changes made by the app and by the user."</span>;

    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink1, <span class="highlight-literal">"Do not synchronize at this time."</span>);
    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink2, <span class="highlight-literal">"Synchronize and relinquish all elements."</span>);
    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink3, <span class="highlight-literal">"Synchronize but keep checked out worksets."</span>);
    td.DefaultButton = TaskDialogResult.CommandLink1;

    TaskDialogResult result = td.Show();

    <span class="highlight-keyword">switch</span> (result)
    {
        <span class="highlight-keyword">case</span> TaskDialogResult.CommandLink1:
        <span class="highlight-keyword">default</span>:
            {
                <span class="highlight-comment">// Do not synch.  Nothing to do.</span>
                <span class="highlight-keyword">break</span>;
            }
        <span class="highlight-keyword">case</span> TaskDialogResult.CommandLink2:
        <span class="highlight-keyword">case</span> TaskDialogResult.CommandLink3:
            {
                <span class="highlight-comment">// Prepare to synch</span>
                <span class="highlight-comment">// TransactWithCentralOptions has to do with the behavior related to locked or busy central models.</span>
                <span class="highlight-comment">// We'll use the default behavior.</span>
                TransactWithCentralOptions twcOpts = <span class="highlight-keyword">new</span> TransactWithCentralOptions();

                <span class="highlight-comment">// Setup synch-with-central options (add a comment about our change)</span>
                SynchronizeWithCentralOptions swcOpts = <span class="highlight-keyword">new</span> SynchronizeWithCentralOptions();
                swcOpts.Comment = <span class="highlight-literal">"Synchronized by 'Automatic element creator' with user acceptance."</span>;

                <span class="highlight-keyword">if</span> (result == TaskDialogResult.CommandLink3)
                {
                    <span class="highlight-comment">// Setup relinquish options to keep user worksets checked out</span>
                    RelinquishOptions rOptions = <span class="highlight-keyword">new</span> RelinquishOptions(<span class="highlight-keyword">true</span>);
                    rOptions.UserWorksets = <span class="highlight-keyword">false</span>;
                    swcOpts.SetRelinquishOptions(rOptions);
                }

                doc.SynchronizeWithCentral(twcOpts, swcOpts);

                <span class="highlight-keyword">break</span>;
            }
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> SynchWithCentralWithMessage(doc <span class="highlight-keyword">As</span> Document)
    <span class="highlight-comment">' Checkout workset (for use with "keep checked out worksets" option later)</span>
    <span class="highlight-keyword">Dim</span> fwc <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredWorksetCollector(doc)
    fwc.OfKind(WorksetKind.UserWorkset)
    <span class="highlight-keyword">Dim</span> workset1 <span class="highlight-keyword">As</span> Workset = fwc.First(<span class="highlight-keyword">Function</span>(ws) ws.Name = <span class="highlight-literal">"Workset1"</span>)

    WorksharingUtils.CheckoutWorksets(doc, <span class="highlight-keyword">New</span> WorksetId() {workset1.Id})

    <span class="highlight-comment">' Make a change</span>
    <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Add Level"</span>)
        t.Start()
    Level.Create(doc, <span class="highlight-number">100</span>)
        t.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

    <span class="highlight-comment">' Tell user what we're doing</span>
    <span class="highlight-keyword">Dim</span> td <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TaskDialog(<span class="highlight-literal">"Alert"</span>)
    td.MainInstruction = <span class="highlight-comment">"Application 'Automatic element creator' has made changes and is prepared to synchronize with central."</span>
    td.MainContent = <span class="highlight-literal">"This will update central with all changes currently made in the project by the application or by the user.  This operation "</span> &amp; <span class="highlight-literal">"may take some time depending on the number of changes made by the app and by the user."</span>

    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink1, <span class="highlight-literal">"Do not synchronize at this time."</span>)
    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink2, <span class="highlight-literal">"Synchronize and relinquish all elements."</span>)
    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink3, <span class="highlight-literal">"Synchronize but keep checked out worksets."</span>)
    td.DefaultButton = TaskDialogResult.CommandLink1

    <span class="highlight-keyword">Dim</span> result <span class="highlight-keyword">As</span> TaskDialogResult = td.Show()

    <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> result
        <span class="highlight-keyword">Case</span> TaskDialogResult.CommandLink1
            <span class="highlight-keyword">If</span> <span class="highlight-keyword">True</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' Do not synch.  Nothing to do.</span>
                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Case</span> TaskDialogResult.CommandLink2, TaskDialogResult.CommandLink3
            <span class="highlight-keyword">If</span> <span class="highlight-keyword">True</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' Prepare to synch</span>
                <span class="highlight-comment">' TransactWithCentralOptions has to do with the behavior related to locked or busy central models.</span>
                <span class="highlight-comment">' We'll use the default behavior.</span>
                <span class="highlight-keyword">Dim</span> twcOpts <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TransactWithCentralOptions()

                <span class="highlight-comment">' Setup synch-with-central options (add a comment about our change)</span>
                <span class="highlight-keyword">Dim</span> swcOpts <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> SynchronizeWithCentralOptions()
                swcOpts.Comment = <span class="highlight-comment">"Synchronized by 'Automatic element creator' with user acceptance."</span>

                <span class="highlight-keyword">If</span> result = TaskDialogResult.CommandLink3 <span class="highlight-keyword">Then</span>
                    <span class="highlight-comment">' Setup relinquish options to keep user worksets checked out</span>
                    <span class="highlight-keyword">Dim</span> rOptions <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> RelinquishOptions(<span class="highlight-keyword">True</span>)
                    rOptions.UserWorksets = <span class="highlight-keyword">False</span>
                    swcOpts.SetRelinquishOptions(rOptions)
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

                doc.SynchronizeWithCentral(twcOpts, swcOpts)

                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      TransactWithCentralOptions
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="a382b180-be52-6fa7-dfe1-b478ccc6ed5f.htm">
       TransactWithCentralOptions Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>