<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="b72804b4-596f-75db-37ab-ea78a51da3bc.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     TypeBinding objects are used to bind a property to a Revit type, such as a wall type.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 16.0.0.0 (16.0.0.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">TypeBinding</span> : <a href="15ebf308-364c-2bef-e91c-dd6552e5ccbe.htm">ElementBinding</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">TypeBinding</span> _
	<span class="keyword">Inherits</span> <a href="15ebf308-364c-2bef-e91c-dd6552e5ccbe.htm">ElementBinding</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">TypeBinding</span> : <span class="keyword">public</span> <a href="15ebf308-364c-2bef-e91c-dd6552e5ccbe.htm">ElementBinding</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     This differs from Instance bindings in that the property is then shared by all
instances that use that type. Changing the parameter for one type affects all other
instances that use that type.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">bool</span> SetNewParameterToTypeWall(UIApplication app, DefinitionFile myDefinitionFile)
{
    <span class="highlight-comment">// Create a new group in the shared parameters file</span>
    DefinitionGroups myGroups = myDefinitionFile.Groups;
    DefinitionGroup myGroup = myGroups.Create(<span class="highlight-literal">"MyParameters"</span>);

    <span class="highlight-comment">// Create a type definition</span>
    ExternalDefinitionCreationOptions option = <span class="highlight-keyword">new</span> ExternalDefinitionCreationOptions(<span class="highlight-literal">"CompanyName"</span>, ParameterType.Text);
    Definition myDefinition_CompanyName = myGroup.Definitions.Create(option);

    <span class="highlight-comment">// Create a category set and insert category of wall to it</span>
    CategorySet myCategories = app.Application.Create.NewCategorySet();
    <span class="highlight-comment">// Use BuiltInCategory to get category of wall</span>
    Category myCategory = app.ActiveUIDocument.Document.Settings.Categories.get_Item(
                                    BuiltInCategory.OST_Walls);
    myCategories.Insert(myCategory);

    <span class="highlight-comment">//Create an object of TypeBinding according to the Categories</span>
    TypeBinding typeBinding = app.Application.Create.NewTypeBinding(myCategories);

    <span class="highlight-comment">// Get the BingdingMap of current document.</span>
    BindingMap bindingMap = app.ActiveUIDocument.Document.ParameterBindings;

    <span class="highlight-comment">// Bind the definitions to the document</span>
    <span class="highlight-keyword">bool</span> typeBindOK = bindingMap.Insert(myDefinition_CompanyName, typeBinding,
      BuiltInParameterGroup.PG_TEXT);
    <span class="highlight-keyword">return</span> typeBindOK;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> SetNewParameterToTypeWall(app <span class="highlight-keyword">As</span> UIApplication, myDefinitionFile <span class="highlight-keyword">As</span> DefinitionFile) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span>
    <span class="highlight-comment">' Create a new group in the shared parameters file</span>
    <span class="highlight-keyword">Dim</span> myGroups <span class="highlight-keyword">As</span> DefinitionGroups = myDefinitionFile.Groups
    <span class="highlight-keyword">Dim</span> myGroup <span class="highlight-keyword">As</span> DefinitionGroup = myGroups.Create(<span class="highlight-literal">"MyParameters"</span>)

    <span class="highlight-comment">' Create a type definition</span>
 <span class="highlight-keyword">Dim</span> [<span class="highlight-keyword">option</span>] <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ExternalDefinitionCreationOptions(<span class="highlight-literal">"CompanyName"</span>, ParameterType.Text)
    <span class="highlight-keyword">Dim</span> myDefinition_CompanyName <span class="highlight-keyword">As</span> Definition = myGroup.Definitions.Create([<span class="highlight-keyword">option</span>])

    <span class="highlight-comment">' Create a category set and insert category of wall to it</span>
    <span class="highlight-keyword">Dim</span> myCategories <span class="highlight-keyword">As</span> CategorySet = app.Application.Create.NewCategorySet()
    <span class="highlight-comment">' Use BuiltInCategory to get category of wall</span>
    <span class="highlight-keyword">Dim</span> myCategory <span class="highlight-keyword">As</span> Category = app.ActiveUIDocument.Document.Settings.Categories.Item(BuiltInCategory.OST_Walls)
    myCategories.Insert(myCategory)

    <span class="highlight-comment">'Create an object of TypeBinding according to the Categories</span>
    <span class="highlight-keyword">Dim</span> typeBinding <span class="highlight-keyword">As</span> TypeBinding = app.Application.Create.NewTypeBinding(myCategories)

    <span class="highlight-comment">' Get the BingdingMap of current document.</span>
    <span class="highlight-keyword">Dim</span> bindingMap <span class="highlight-keyword">As</span> BindingMap = app.ActiveUIDocument.Document.ParameterBindings

    <span class="highlight-comment">' Bind the definitions to the document</span>
    <span class="highlight-keyword">Dim</span> typeBindOK <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = bindingMap.Insert(myDefinition_CompanyName, typeBinding, BuiltInParameterGroup.PG_TEXT)
    <span class="highlight-keyword">Return</span> typeBindOK
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="beb86ef5-39ad-3f0d-0cd9-0c929387a2bb.htm">
      Autodesk.Revit.DB
      APIObject
     </a>
     <br/>
     <a href="47f6ad6f-8d00-af57-995e-dc6db1255f58.htm">
      Autodesk.Revit.DB
      Binding
     </a>
     <br/>
     <a href="15ebf308-364c-2bef-e91c-dd6552e5ccbe.htm">
      Autodesk.Revit.DB
      ElementBinding
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      TypeBinding
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="b72804b4-596f-75db-37ab-ea78a51da3bc.htm">
       TypeBinding Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>