<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="60fc99f1-fb15-270f-e2f4-279786ab4ed6.htm">
       Members
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     The interface used to provide custom implementation to provide access to external resources (such as linked files) from arbitrary locations.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 18.0.0.0 (18.0.0.420)
     <br/>
     <b>
      Since:
     </b>
     2015
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IExternalResourceServer</span> : <a href="91e4af0b-59c0-d640-107a-eebc4d99fa76.htm">IExternalServer</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IExternalResourceServer</span> _
	<span class="keyword">Inherits</span> <a href="91e4af0b-59c0-d640-107a-eebc4d99fa76.htm">IExternalServer</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IExternalResourceServer</span> : <a href="91e4af0b-59c0-d640-107a-eebc4d99fa76.htm">IExternalServer</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      Certain resources used in a Revit model are stored outside of the .rvt file.  For example, the data used
   for keynotes, images used as decals during rendering, CAD links, and Revit links are all stored outside
   the model.  Creating a new implementation of this server allows the server to supply one or more types of such resources from
   an arbitrary source.  For example, a server could provide the keynote data from a database or from
   a file format that Revit does not support.
     </p>
     <p>
      If a model references resources supplied by this server, Revit will request the resource from the server
   when it is required.  Most external resources are loaded into memory at the time the model is loaded.  The
   server will also be invoked if the resource is explicitly reloaded.
     </p>
     <p>
      IExternalResourceServer can declare that a resource is already up-to-date via
      <a href="e5699493-c827-d7ba-151c-8d9cdbf894ba.htm">
       GetResourceVersionStatus(ExternalResourceReference)
      </a>
      If the resource is
   up-to-date, Revit will skip loading to improve performance.
     </p>
     <p>
      Each resource load request will be associated with a GUID, so that server implementers can uniquely identify
   a given load request. This may be useful to, for example, store server-side errors associated with an
   attempt to load a particular resource.
     </p>
     <p>
      If your server handles Revit or CAD links, you must take special care with link paths. When one of these
   file types is uploaded to your server, any nested references should be brought to the server along with the
   main link. Your server will need to repath any nested reference itself; Revit will not handle this automatically.
     </p>
     <p>
      In the case of DWG links, your server will also need to download and possibly repath any xrefs when
   LoadResource is called for the top-level link. Revit will only request the top-level link directly.
     </p>
     <p>
      In the case of Revit links, the ExternalResourceReferences for any nested links will also
   need to be modified in the host document. The host document should reference the Revit links at their
      <i>
       server
      </i>
      locations, not their  local file locations. Revit may not be able to find links if the
   paths are not set up correctly. See
      <span class="nolink">
       [!:Autodesk::Revit::DB::TransmissionData::ReadTransmissionData]
      </span>
      to inspect the set of links contained within a Revit model. See
      <span class="nolink">
       [!:Autodesk::Revit::DB::RevitLinkType::LoadFrom]
      </span>
      to reload a Revit link from a server version.
     </p>
     <p>
      Here is an example which uses nested Revit links: A user has a Revit model containing one link, Link.rvt, which
   contains one nested link, Nest.rvt. The user uploads Link.rvt to a server, using an add-in provided by that
   server. The server provider must also take Nest.rvt. Further, the server provider must open Link.rvt and modify
   the reference to Nest.rvt so that it references the version on the server. Otherwise, Revit will not be able to
   find Nest.rvt when another user tries to load Link.rvt from the server.
     </p>
     <p>
      The external resource framework has been designed to allow server authors to display UI related to the resource
   load operation and UI browse operation.
      <i>
       No UI should be displayed directly from an IExternalResourceServer.
      </i>
      Instead, developers should create an IExternalResourceUIServer which will handle UI tasks on behalf of the IExternalResourceServer.
   For more information, see the documentation for the
      <a href="f9e67f37-93dc-24a1-70f2-ea603a7719ab.htm">
       LoadResource(Guid, ExternalResourceType, ExternalResourceReference, ExternalResourceLoadContext, ExternalResourceLoadContent)
      </a>
      and
      <a href="04e7642f-aea8-7996-4f3b-6b5e8834a1f9.htm">
       SetupBrowserData(ExternalResourceBrowserData)
      </a>
      methods.
     </p>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="60fc99f1-fb15-270f-e2f4-279786ab4ed6.htm">
       IExternalResourceServer Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>