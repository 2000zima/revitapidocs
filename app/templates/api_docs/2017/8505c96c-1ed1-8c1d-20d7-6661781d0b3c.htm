<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="bc807a83-7109-ef7b-34cd-b7599b588848.htm">
       Members
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     This element represents a segment of an MEP curve object.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)
     <br/>
     <b>
      Since:
     </b>
     2013
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Segment</span> : <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Segment</span> _
	<span class="keyword">Inherits</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Segment</span> : <span class="keyword">public</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     Currently, only pipe curves can be broken into separate segment elements.
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> GetPipeSegmentSizesFromDocument(Document document)
{
    FilteredElementCollector collectorPipeType = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    collectorPipeType.OfClass(<span class="highlight-keyword">typeof</span>(Segment));

    IEnumerable&lt;Segment&gt; segments = collectorPipeType.ToElements().Cast&lt;Segment&gt;();
    <span class="highlight-keyword">foreach</span> (Segment segment <span class="highlight-keyword">in</span> segments)
    {
        StringBuilder strPipeInfo = <span class="highlight-keyword">new</span> StringBuilder();
        strPipeInfo.AppendLine(<span class="highlight-literal">"Segment: "</span> + segment.Name);

        strPipeInfo.AppendLine(<span class="highlight-literal">"Roughness: "</span> + segment.Roughness);

        strPipeInfo.AppendLine(<span class="highlight-literal">"Pipe Sizes:"</span>);
        <span class="highlight-keyword">double</span> dLengthFac = <span class="highlight-number">304.8</span>;  <span class="highlight-comment">// used to convert stored units from ft to mm for display</span>
        <span class="highlight-keyword">foreach</span> (MEPSize size <span class="highlight-keyword">in</span> segment.GetSizes())
        {
            strPipeInfo.AppendLine(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"Nominal: {0:F3}, ID: {1:F3}, OD: {2:F3}"</span>,
                                        size.NominalDiameter * dLengthFac, size.InnerDiameter * dLengthFac, size.OuterDiameter * dLengthFac));
        }


        TaskDialog.Show(<span class="highlight-literal">"PipeSetting Data"</span>, strPipeInfo.ToString());
        <span class="highlight-keyword">break</span>;
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> GetPipeSegmentSizesFromDocument(document <span class="highlight-keyword">As</span> Document)
   <span class="highlight-keyword">Dim</span> collectorPipeType <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
   collectorPipeType.OfClass(<span class="highlight-keyword">GetType</span>(Segment))

   <span class="highlight-keyword">Dim</span> segments <span class="highlight-keyword">As</span> IEnumerable(<span class="highlight-keyword">Of</span> Segment) = collectorPipeType.ToElements().Cast(<span class="highlight-keyword">Of</span> Segment)()
   <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> segment <span class="highlight-keyword">As</span> Segment <span class="highlight-keyword">In</span> segments
      <span class="highlight-keyword">Dim</span> strPipeInfo <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StringBuilder()
      strPipeInfo.AppendLine(<span class="highlight-literal">"Segment: "</span> + segment.Name)

      strPipeInfo.AppendLine(<span class="highlight-literal">"Roughness: "</span> + segment.Roughness)

      strPipeInfo.AppendLine(<span class="highlight-literal">"Pipe Sizes:"</span>)
      <span class="highlight-keyword">Dim</span> dLengthFac <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">304.8</span>
      <span class="highlight-comment">' used to convert stored units from ft to mm for display</span>
      <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> size <span class="highlight-keyword">As</span> MEPSize <span class="highlight-keyword">In</span> segment.GetSizes()
         strPipeInfo.AppendLine(<span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"Nominal: {0:F3}, ID: {1:F3}, OD: {2:F3}"</span>, size.NominalDiameter * dLengthFac, size.InnerDiameter * dLengthFac, size.OuterDiameter * dLengthFac))
      <span class="highlight-keyword">Next</span>


      TaskDialog.Show(<span class="highlight-literal">"PipeSetting Data"</span>, strPipeInfo.ToString())
      <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
   <span class="highlight-keyword">Next</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
      Autodesk.Revit.DB
      Element
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      Segment
     </span>
     <br/>
     <a href="a295ca1d-66f2-f788-5079-4d91554a4223.htm">
      Autodesk.Revit.DB.Plumbing
      PipeSegment
     </a>
     <br/>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="bc807a83-7109-ef7b-34cd-b7599b588848.htm">
       Segment Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>