<article id="api-content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="f7295d7d-563d-dada-cbb9-7c9303927d0c.htm">
       Members
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     This class represents a GlobalParameter element in Revit.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)
     <br/>
     <b>
      Since:
     </b>
     2016 Subscription Update
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">GlobalParameter</span> : <a href="2ad60b36-07d6-6aed-62c7-89f388f05ffb.htm">ParameterElement</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">GlobalParameter</span> _
	<span class="keyword">Inherits</span> <a href="2ad60b36-07d6-6aed-62c7-89f388f05ffb.htm">ParameterElement</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">GlobalParameter</span> : <span class="keyword">public</span> <a href="2ad60b36-07d6-6aed-62c7-89f388f05ffb.htm">ParameterElement</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      Global parameters can be used to drive values of dimensions or other elements' parameters.
   Also, a global parameter can be driven by a selected dimension, the value of which then
   determines the value of the global parameter. Such parameters can further be used to drive
   values of other elements' parameters.
     </p>
     See also the
     <a href="f3af05ec-1f0c-fe86-6708-0a211a40bcda.htm">
      GlobalParametersManager
     </a>
     class for methods
   that operate upon global parameters of a document, such as getting all defined global
   parameters and testing whether a global parameter of certain name already exists or not.
     <h4>
      Reporting vs. Non-Reporting parameters
     </h4>
     <p>
      There are several ways global parameters can be categorized, but probably the most significant
   categorization stems from the
      <a href="41d62d48-8d78-d056-b0ca-9ea4777dc827.htm">
       IsReporting
      </a>
      property which divides global parameters
   into two groups - Reporting and Non-Reporting. The significance of reporting parameters lays in the
   fact that their values are driven by the dimension that has been labeled by a reporting parameter.
   It means that the value of a reporting parameter reflects the value of a dimension (length or angle)
   and gets updated anytime the dimension changes. Non-Reporting parameters behave in the opposite manner
   - they drive value of dimensions that have been labeled by them, which results in controlling
   the model's geometry through global parameters' values.
     </p>
     <p>
      Reporting parameters are limited in several ways. They can be only of
      <b>
       Length
      </b>
      or
      <b>
       Angle
      </b>
      type,
   a requirement due to the fact that a dimension must be able to drive the value. For the same reason
   reporting parameters may not have formulas.
     </p>
     <p>
      Non-Reporting parameters, on the other way, can be of almost any type (
      <b>
       Length
      </b>
      ,
      <b>
       Integer
      </b>
      ,
      <b>
       Area
      </b>
      , etc.) with the exception of ElementId type. Also, Non-Reporting parameters may have assigned
   formulas in which other global parameters may be used as arguments. This way one global parameter's value
   can be derived from other parameter (or parameters), and the other parameter can be either reporting
   or non-reporting.
     </p>
     <h4>
      Creating Global Parameters
     </h4>
     <p>
      Global parameters get created via the static method
      <a href="57899395-e9df-4066-121d-046ee7a7425e.htm">
       Create(Document, String, ParameterType)
      </a>
      . It is important to note that each
   new parameter must have a name that is unique within the document. Parameters are created as non-reporting
   initially, but programmers are free to modify the
      <a href="41d62d48-8d78-d056-b0ca-9ea4777dc827.htm">
       IsReporting
      </a>
      property once a global parameter
   is created and is of an eligible type. The programmer can call the
      <a href="8ec3a25e-018b-8903-01d1-6201531c50a0.htm">
       HasValidTypeForReporting
      </a>
      when in doubt whether parameters of a certain data type can be made reporting. Note, that a parameter
   may not be made reporting after more than one dimension has been labeled by it. It is because reporting
   parameter can label (and be driven) by one dimension only.
     </p>
     <p>
      An alternative way of making a parameter reporting is via the
      <a href="017b2d21-0ed9-fc04-dd7c-19d78214859d.htm">
       SetDrivingDimension(ElementId)
      </a>
      method which
   labels one dimension by a global parameter and also makes the parameter reporting if it is not reporting yet.
     </p>
     <p>
      Other important properties of global parameters are
      <a href="201f3932-eece-37b0-be27-3e74ce0c3fb9.htm">
       IsDrivenByDimension
      </a>
      and
      <a href="ee9c7baa-47b9-f84d-c2e2-103711fbb756.htm">
       IsDrivenByFormula
      </a>
      , which are mutually exclusive - a parameter that has a formula
   assigned cannot be driven by a dimension (nor can be reporting) and vice versa.
     </p>
     <h4>
      Global Parameters with formulas
     </h4>
     <p>
      Like with family parameters, formulas may be assigned to non-reporting global parameters using the
      <a href="7974796f-5771-6640-ce74-0be23eab58d0.htm">
       SetFormula(String)
      </a>
      method (paired with
      <a href="4fb83945-2484-3709-6036-adfa4f411f28.htm">
       GetFormula
      </a>
      to query the current formula.)
   Formulas may include all standard arithmetic operations and logical operations (as functions
      <b>
       and
      </b>
      ,
      <b>
       or
      </b>
      ,
      <b>
       not
      </b>
      .)
   Input to logical operations must be Boolean values (parameters of YesNo type). Consequently, arithmetic
   operations can be applied to numeric values only. While there are no operations supported for string (text)
   arguments, strings can be used as results of a logical
      <b>
       If
      </b>
      operation. Depending on their type (and units),
   parameters of different value types can be combined. However, unit-less values such as
      <b>
       Integer
      </b>
      and
      <b>
       Number
      </b>
      (double) may only be combined with each other. Since formulas can get quite complicated,
   the method
      <a href="50c83d89-22da-4398-bba8-197345f76192.htm">
       IsValidFormula(String)
      </a>
      is available for the programmer to ensure a formula is valid
   in order to avoid potential exception due to applying an invalid formula.
     </p>
     <h4>
      Labeling dimensions
     </h4>
     <p>
      Probably the most notable feature of global parameters is their ability to "Label" dimensions,
   a process that establishes dependency of a dimension on a global parameter (or vice versa,
   depending on the reporting status.) One parameter can label any number of dimensions as long
   as the parameter is non-reporting. If the parameter labels a multi-segment dimension, values of all segments
   of this dimension will be equal to the parameter's value. As mentioned above, reporting parameter can label one dimension
   only, and this dimension can have only one segment. Methods and properties related to labeling include:
      <a href="99bc1f7d-82b8-7dc1-9919-e73834bb565c.htm">
       LabelDimension(ElementId)
      </a>
      ,
      <a href="b862ea70-8b3a-2800-f434-7163a878deeb.htm">
       UnlabelDimension(ElementId)
      </a>
      , and
      <a href="97d29291-74c4-2da5-2ac5-2fa0c0ac9d0c.htm">
       GetLabeledDimensions
      </a>
      . Also in this set is the
      <a href="be059016-a7dc-6995-0f11-f56f59555183.htm">
       CanLabelDimension(ElementId)
      </a>
      method which indicates whether or not a particular dimension
   can be labeled. Presently, only single linear dimensions and angles are permitted.
     </p>
     <h4>
      Elements affected by a Global Parameter
     </h4>
     <p>
      Global parameters can be associated with other global parameters as well as regular family instance
   parameters (which may report global parameters as their values via the assignment formula.)
   There are two methods available to find relations among parameters:
      <a href="2028f8a1-2691-e921-8a56-882b1e4080f3.htm">
       GetAffectedGlobalParameters
      </a>
      and
      <a href="c1eb340d-471d-4810-92fe-a2bd6374fc1f.htm">
       GetAffectedElements
      </a>
      . The former returns all other global parameters that refer
   to a particular global parameter in their respective formulas. The other method returns a set
   of all elements of which some parameters are controlled by the global parameter. These two methods
   together with the
      <a href="97d29291-74c4-2da5-2ac5-2fa0c0ac9d0c.htm">
       GetLabeledDimensions
      </a>
      can help the programmer in figuring out
   how model elements relate to each other via global parameters.
     </p>
     <p>
      Methods for maintaining associations between element properties and global parameters
   can be found in the
      <a href="333ff41b-e6a7-d959-60bf-c3bfae495581.htm">
       Parameter
      </a>
      class.
     </p>
     <h4>
      Getting and setting the value of a Global Parameter
     </h4>
     <p>
      All global parameters, formula-driven, dimension-driven, or independent, have values. A value can
   be obtained by calling the
      <a href="56eb0e54-eac4-9b51-3122-e4fb065b63f0.htm">
       GetValue
      </a>
      method. The object returned by that method is an instance
   of one of the classes derived from
      <a href="366521ef-ecc2-c3e3-feb5-81b3bbd8df0c.htm">
       ParameterValue
      </a>
      class. The concrete
   instance is determined by the type of the global parameter (specified upon creation.) Parameters that are
   neither formula-driven nor dimension-driven (reporting) can have a value assigned. The method to use
   is
      <a href="df012c22-6e65-8de5-1057-f15660d02288.htm">
       SetValue(ParameterValue)
      </a>
      and it accepts the same type of
      <a href="366521ef-ecc2-c3e3-feb5-81b3bbd8df0c.htm">
       ParameterValue
      </a>
      that is returned by SetValue. However, the type can also be deduced easily:
      <b>
       Text
      </b>
      parameters accept only
      <a href="2f79fff4-9773-471a-83f8-5636459bdbe5.htm">
       StringParameterValue
      </a>
      .
      <b>
       Integer
      </b>
      and
      <b>
       YesNo
      </b>
      parameters accept only
      <a href="14c16038-74bf-205b-ac93-6ffa6274c034.htm">
       IntegerParameterValue
      </a>
      . All other parameters accept only
      <a href="561ef32b-c3bc-3847-ef2a-27f4a011e650.htm">
       DoubleParameterValue
      </a>
      .
     </p>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
      Autodesk.Revit.DB
      Element
     </a>
     <br/>
     <a href="2ad60b36-07d6-6aed-62c7-89f388f05ffb.htm">
      Autodesk.Revit.DB
      ParameterElement
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      GlobalParameter
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="f7295d7d-563d-dada-cbb9-7c9303927d0c.htm">
       GlobalParameter Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</article>