<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="e7d89ec9-836a-dba0-eed6-7ccace9d0b26.htm">
       Members
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     An object that represents a dimension within the Revit project.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Dimension</span> : <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Dimension</span> _
	<span class="keyword">Inherits</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Dimension</span> : <span class="keyword">public</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetInfo_Dimension(Dimension dimension)
{
    <span class="highlight-keyword">string</span> message = <span class="highlight-literal">"Dimension : "</span>;
    <span class="highlight-comment">// Get Dimension name</span>
    message += <span class="highlight-literal">"\nDimension name is : "</span> + dimension.Name;

    <span class="highlight-comment">// Get Dimension Curve</span>
    Autodesk.Revit.DB.Curve curve = dimension.Curve;
    <span class="highlight-keyword">if</span> (curve != <span class="highlight-keyword">null</span> &amp;&amp; curve.IsBound)
    {
        <span class="highlight-comment">// Get curve start point</span>
        message += <span class="highlight-literal">"\nCurve start point:("</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).X + <span class="highlight-literal">", "</span>
             + curve.GetEndPoint(<span class="highlight-number">0</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).Z + <span class="highlight-literal">")"</span>;
        <span class="highlight-comment">// Get curve end point</span>
        message += <span class="highlight-literal">"; Curve end point:("</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).X + <span class="highlight-literal">", "</span>
             + curve.GetEndPoint(<span class="highlight-number">1</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).Z + <span class="highlight-literal">")"</span>;
    }

    <span class="highlight-comment">// Get Dimension type name</span>
    message += <span class="highlight-literal">"\nDimension type name is : "</span> + dimension.DimensionType.Name;

    <span class="highlight-comment">// Get Dimension view name</span>
    message += <span class="highlight-literal">"\nDimension view name is : "</span> + dimension.View.Name;

    <span class="highlight-comment">// Get Dimension reference count</span>
    message += <span class="highlight-literal">"\nDimension references count is "</span> + dimension.References.Size;

    <span class="highlight-keyword">if</span> ((<span class="highlight-keyword">int</span>)BuiltInCategory.OST_Dimensions == dimension.Category.Id.IntegerValue)
    {
        message += <span class="highlight-literal">"\nDimension is a permanent dimension."</span>;
    }
    <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> ((<span class="highlight-keyword">int</span>)BuiltInCategory.OST_Constraints == dimension.Category.Id.IntegerValue)
    {
        message += <span class="highlight-literal">"\nDimension is a constraint element."</span>;
    }


    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,message);
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetInfo_Dimension(dimension <span class="highlight-keyword">As</span> Dimension)
   <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"Dimension : "</span>
   <span class="highlight-comment">' Get Dimension name</span>
   message += vbLf &amp; <span class="highlight-literal">"Dimension name is : "</span> + dimension.Name

   <span class="highlight-comment">' Get Dimension Curve</span>
   <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Curve = dimension.Curve
   <span class="highlight-keyword">If</span> curve <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">AndAlso</span> curve.IsBound <span class="highlight-keyword">Then</span>
      <span class="highlight-comment">' Get curve start point</span>
      message += vbLf &amp; <span class="highlight-literal">"Curve start point:("</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).X + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">0</span>).Z + <span class="highlight-literal">")"</span>
      <span class="highlight-comment">' Get curve end point</span>
      message += <span class="highlight-literal">"; Curve end point:("</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).X + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).Y + <span class="highlight-literal">", "</span> + curve.GetEndPoint(<span class="highlight-number">1</span>).Z + <span class="highlight-literal">")"</span>
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

   <span class="highlight-comment">' Get Dimension type name</span>
   message += vbLf &amp; <span class="highlight-literal">"Dimension type name is : "</span> + dimension.DimensionType.Name

   <span class="highlight-comment">' Get Dimension view name</span>
   message += vbLf &amp; <span class="highlight-literal">"Dimension view name is : "</span> + dimension.View.Name

   <span class="highlight-comment">' Get Dimension reference count</span>
   message += vbLf &amp; <span class="highlight-literal">"Dimension references count is "</span> + dimension.References.Size

   <span class="highlight-keyword">If</span> <span class="highlight-keyword">CInt</span>(BuiltInCategory.OST_Dimensions) = dimension.Category.Id.IntegerValue <span class="highlight-keyword">Then</span>
      message += vbLf &amp; <span class="highlight-literal">"Dimension is a permanent dimension."</span>
   <span class="highlight-keyword">ElseIf</span> <span class="highlight-keyword">CInt</span>(BuiltInCategory.OST_Constraints) = dimension.Category.Id.IntegerValue <span class="highlight-keyword">Then</span>
      message += vbLf &amp; <span class="highlight-literal">"Dimension is a constraint element."</span>
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>


   TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
      Autodesk.Revit.DB
      Element
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      Dimension
     </span>
     <br/>
     <a href="6f3b8d2e-904b-41cb-e57f-34fc8c1a0f4a.htm">
      Autodesk.Revit.DB
      AngularDimension
     </a>
     <br/>
     <a href="f3c633ac-1595-cb8d-5c1b-66eb3eefb433.htm">
      Autodesk.Revit.DB
      SpotDimension
     </a>
     <br/>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="e7d89ec9-836a-dba0-eed6-7ccace9d0b26.htm">
       Dimension Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>