<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="e8cb5c2b-b8ca-cbbf-819b-6956e0fd0760.htm">
       Members
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Admits elements that satisfy two conditions:
     <ol>
      <li>
       The element's category must be one of a certain set of allowed categories.
      </li>
      <li>
       The element must pass a series of filter rules.
      </li>
     </ol>
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)
     <br/>
     <b>
      Since:
     </b>
     2011
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ParameterFilterElement</span> : <a href="909615cd-8abd-044a-cff2-f21fd95b8ee7.htm">FilterElement</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">ParameterFilterElement</span> _
	<span class="keyword">Inherits</span> <a href="909615cd-8abd-044a-cff2-f21fd95b8ee7.htm">FilterElement</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">ParameterFilterElement</span> : <span class="keyword">public</span> <a href="909615cd-8abd-044a-cff2-f21fd95b8ee7.htm">FilterElement</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> CreateViewFilter(Document doc, View view)
{
    List&lt;ElementId&gt; categories = <span class="highlight-keyword">new</span> List&lt;ElementId&gt;();
    categories.Add(<span class="highlight-keyword">new</span> ElementId(BuiltInCategory.OST_Walls));
    List&lt;FilterRule&gt; filterRules = <span class="highlight-keyword">new</span> List&lt;FilterRule&gt;();

    <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Add view filter"</span>))
    {
        t.Start();

        <span class="highlight-comment">// Create filter element assocated to the input categories</span>
        ParameterFilterElement parameterFilterElement = ParameterFilterElement.Create(doc, <span class="highlight-literal">"Example view filter"</span>, categories);

        <span class="highlight-comment">// Criterion 1 - wall type Function is "Exterior"</span>
        ElementId exteriorParamId = <span class="highlight-keyword">new</span> ElementId(BuiltInParameter.FUNCTION_PARAM);
        filterRules.Add(ParameterFilterRuleFactory.CreateEqualsRule(exteriorParamId, (<span class="highlight-keyword">int</span>)WallFunction.Exterior));

        <span class="highlight-comment">// Criterion 2 - wall height &gt; some number</span>
        ElementId lengthId = <span class="highlight-keyword">new</span> ElementId(BuiltInParameter.CURVE_ELEM_LENGTH);
        filterRules.Add(ParameterFilterRuleFactory.CreateGreaterOrEqualRule(lengthId, <span class="highlight-number">28.0</span>, <span class="highlight-number">0.0001</span>));

        <span class="highlight-comment">// Criterion 3 - custom shared parameter value matches string pattern</span>
        <span class="highlight-comment">// Get the id for the shared parameter - the ElementId is not hardcoded, so we need to get an instance of this type to find it</span>
        Guid spGuid = <span class="highlight-keyword">new</span> Guid(<span class="highlight-literal">"96b00b61-7f5a-4f36-a828-5cd07890a02a"</span>);
        FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
        collector.OfClass(<span class="highlight-keyword">typeof</span>(Wall));
        Wall wall = collector.FirstElement() <span class="highlight-keyword">as</span> Wall;

        <span class="highlight-keyword">if</span> (wall != <span class="highlight-keyword">null</span>)
        {
            Parameter sharedParam = wall.get_Parameter(spGuid);
            ElementId sharedParamId = sharedParam.Id;

            filterRules.Add(ParameterFilterRuleFactory.CreateBeginsWithRule(sharedParamId, <span class="highlight-literal">"15."</span>, <span class="highlight-keyword">true</span>));
        }

        parameterFilterElement.SetRules(filterRules);

        <span class="highlight-comment">// Apply filter to view</span>
        view.AddFilter(parameterFilterElement.Id);
        view.SetFilterVisibility(parameterFilterElement.Id, <span class="highlight-keyword">false</span>);
        t.Commit();
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> CreateViewFilter(doc <span class="highlight-keyword">As</span> Document, view <span class="highlight-keyword">As</span> View)
   <span class="highlight-keyword">Dim</span> categories <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> ElementId)()
   categories.Add(<span class="highlight-keyword">New</span> ElementId(BuiltInCategory.OST_Walls))
   <span class="highlight-keyword">Dim</span> filterRules <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> FilterRule)()

   <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Add view filter"</span>)
      t.Start()

      <span class="highlight-comment">' Create filter element assocated to the input categories</span>
      <span class="highlight-keyword">Dim</span> parameterFilterElement__1 <span class="highlight-keyword">As</span> ParameterFilterElement = ParameterFilterElement.Create(doc, <span class="highlight-literal">"Example view filter"</span>, categories)

      <span class="highlight-comment">' Criterion 1 - wall type Function is "Exterior"</span>
      <span class="highlight-keyword">Dim</span> exteriorParamId <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ElementId(BuiltInParameter.FUNCTION_PARAM)
      filterRules.Add(ParameterFilterRuleFactory.CreateEqualsRule(exteriorParamId, <span class="highlight-keyword">CInt</span>(WallFunction.Exterior)))

      <span class="highlight-comment">' Criterion 2 - wall height &gt; some number</span>
      <span class="highlight-keyword">Dim</span> lengthId <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ElementId(BuiltInParameter.CURVE_ELEM_LENGTH)
      filterRules.Add(ParameterFilterRuleFactory.CreateGreaterOrEqualRule(lengthId, <span class="highlight-number">28.0</span>, <span class="highlight-number">0.0001</span>))

      <span class="highlight-comment">' Criterion 3 - custom shared parameter value matches string pattern</span>
      <span class="highlight-comment">' Get the id for the shared parameter - the ElementId is not hardcoded, so we need to get an instance of this type to find it</span>
      <span class="highlight-keyword">Dim</span> spGuid <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Guid(<span class="highlight-literal">"96b00b61-7f5a-4f36-a828-5cd07890a02a"</span>)
      <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
      collector.OfClass(<span class="highlight-keyword">GetType</span>(Wall))
      <span class="highlight-keyword">Dim</span> wall <span class="highlight-keyword">As</span> Wall = <span class="highlight-keyword">TryCast</span>(collector.FirstElement(), Wall)

      <span class="highlight-keyword">If</span> wall <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
         <span class="highlight-keyword">Dim</span> sharedParam <span class="highlight-keyword">As</span> Parameter = wall.Parameter(spGuid)
         <span class="highlight-keyword">Dim</span> sharedParamId <span class="highlight-keyword">As</span> ElementId = sharedParam.Id

         filterRules.Add(ParameterFilterRuleFactory.CreateBeginsWithRule(sharedParamId, <span class="highlight-literal">"15."</span>, <span class="highlight-keyword">True</span>))
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      parameterFilterElement__1.SetRules(filterRules)

      <span class="highlight-comment">' Apply filter to view</span>
      view.AddFilter(parameterFilterElement__1.Id)
      view.SetFilterVisibility(parameterFilterElement__1.Id, <span class="highlight-keyword">False</span>)
      t.Commit()
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Inheritance Hierarchy
     <a name="familyToggle">
     </a>
    </h1>
    <div class="section" id="familySection" name="collapseableSection" style="">
     <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">
      System
      Object
     </a>
     <br/>
     <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">
      Autodesk.Revit.DB
      Element
     </a>
     <br/>
     <a href="909615cd-8abd-044a-cff2-f21fd95b8ee7.htm">
      Autodesk.Revit.DB
      FilterElement
     </a>
     <br/>
     <span class="selflink">
      Autodesk.Revit.DB
      ParameterFilterElement
     </span>
     <br/>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="e8cb5c2b-b8ca-cbbf-819b-6956e0fd0760.htm">
       ParameterFilterElement Members
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>