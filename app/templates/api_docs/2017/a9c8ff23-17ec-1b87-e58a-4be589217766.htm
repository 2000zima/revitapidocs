<div class="chm_content">
 <div id="header">
  <table cellpadding="0" cellspacing="0" id="topTable">
   <tbody>
    <tr>
     <td>
      <span>
      </span>
     </td>
    </tr>
   </tbody>
  </table>
  <table cellpadding="0" cellspacing="0" id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="f51d019d-6ff3-692b-d1d2-b497cab564de.htm">
       Family Class
      </a>
      <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">
       Example
      </a>
      <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Returns all applicable values for a FamilyType parameter of this family.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
      Autodesk.Revit.DB
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)
     <br/>
     <b>
      Since:
     </b>
     2016
    </p>
    <h1 class="heading">
     Syntax
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="http://msdn2.microsoft.com/en-us/library/dd412081" target="_blank">ISet</a>&lt;<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>&gt; <span class="identifier">GetFamilyTypeParameterValues</span>(
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="parameter">parameterId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">GetFamilyTypeParameterValues</span> ( _
	<span class="parameter">parameterId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> _
) <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/dd412081" target="_blank">ISet</a>(<span class="keyword">Of</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="http://msdn2.microsoft.com/en-us/library/dd412081" target="_blank">ISet</a>&lt;<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^&gt;^ <span class="identifier">GetFamilyTypeParameterValues</span>(
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">parameterId</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="parameterId">
       <dt>
        <span class="parameter">
         parameterId
        </span>
       </dt>
       <dd>
        Type:
        <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">
         Autodesk.Revit.DB
         ElementId
        </a>
        <br/>
        A valid Id of a FamilyType parameter defined for this family.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     Ids of all applicable
     <a href="ffb18296-0448-559c-580c-7857cbcdc094.htm">
      ElementType
     </a>
     and
     <a href="ff71e3b0-4300-7d04-1356-a045b9a90407.htm">
      NestedFamilyTypeReference
     </a>
     elements.
    </div>
    <h1 class="heading">
     Remarks
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     <p>
      The values are Element Ids of all family types that match
   the category specified by the definition of the given parameter.
   The elements are either of class
      <a href="ffb18296-0448-559c-580c-7857cbcdc094.htm">
       ElementType
      </a>
      or
      <a href="ff71e3b0-4300-7d04-1356-a045b9a90407.htm">
       NestedFamilyTypeReference
      </a>
      . The second variant is
   for the types that are nested in families and thus are not
   accessible otherwise.
     </p>
     <p>
      If there are no applicable types of such category the returned
   collection will be empty.
     </p>
    </div>
    <h1 class="heading">
     Examples
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetNestedFamilyTypes(FamilyInstance instance)
{
    <span class="highlight-comment">// find one FamilyType parameter and all values applicable to it</span>

    Parameter aTypeParam = <span class="highlight-keyword">null</span>;
    ISet&lt;ElementId&gt; values = <span class="highlight-keyword">null</span>;

    Family family = instance.Symbol.Family;

    <span class="highlight-keyword">foreach</span> (Parameter param <span class="highlight-keyword">in</span> instance.Symbol.Parameters)
    {

        <span class="highlight-keyword">if</span> (param.Definition.ParameterType == ParameterType.FamilyType)
        {

            aTypeParam = param;

            values = family.GetFamilyTypeParameterValues(param.Id);

            <span class="highlight-keyword">break</span>;
        }
    }

    <span class="highlight-keyword">if</span> (aTypeParam == <span class="highlight-keyword">null</span>)
    {
        TaskDialog.Show(<span class="highlight-literal">"Warning"</span>, <span class="highlight-literal">"The selected family has no FamilyType parameter defined."</span>);
    }
    <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (values == <span class="highlight-keyword">null</span>)
    {
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"A FamilyType parameter does not have any applicable values!?"</span>);
    }
    <span class="highlight-keyword">else</span>
    {
        ElementId newValue = values.Last&lt;ElementId&gt;();

        <span class="highlight-keyword">if</span> (newValue != aTypeParam.AsElementId())
        {

            <span class="highlight-keyword">using</span> (Transaction trans = <span class="highlight-keyword">new</span> Transaction(instance.Document, <span class="highlight-literal">"Setting parameter value"</span>))
            {

                trans.Start();
                aTypeParam.Set(newValue);
                trans.Commit();
            }
        }
    }
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" onclick="javascript:CopyColorizedCode(this.parentNode);" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" onmouseout="CopyCodeChangeIcon(this)" onmouseover="CopyCodeChangeIcon(this)" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetNestedFamilyTypes(instance <span class="highlight-keyword">As</span> FamilyInstance)
    <span class="highlight-comment">' find one FamilyType parameter and all values applicable to it</span>


    <span class="highlight-keyword">Dim</span> aTypeParam <span class="highlight-keyword">As</span> Parameter = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> values <span class="highlight-keyword">As</span> ISet(<span class="highlight-keyword">Of</span> ElementId) = <span class="highlight-keyword">Nothing</span>

    <span class="highlight-keyword">Dim</span> family <span class="highlight-keyword">As</span> Family = instance.Symbol.Family

    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> param <span class="highlight-keyword">As</span> Parameter <span class="highlight-keyword">In</span> instance.Symbol.Parameters

        <span class="highlight-keyword">If</span> param.Definition.ParameterType = ParameterType.FamilyType <span class="highlight-keyword">Then</span>

            aTypeParam = param

            values = family.GetFamilyTypeParameterValues(param.Id)

            <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-keyword">If</span> aTypeParam <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Warning"</span>, <span class="highlight-literal">"The selected family has no FamilyType parameter defined."</span>)
    <span class="highlight-keyword">ElseIf</span> values <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"A FamilyType parameter does not have any applicable values!?"</span>)
    <span class="highlight-keyword">Else</span>
        <span class="highlight-keyword">Dim</span> newValue <span class="highlight-keyword">As</span> ElementId = values.Last()

        <span class="highlight-keyword">If</span> newValue &lt;&gt; aTypeParam.AsElementId() <span class="highlight-keyword">Then</span>

            <span class="highlight-keyword">Using</span> trans <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(instance.Document, <span class="highlight-literal">"Setting parameter value"</span>)

                trans.Start()
                aTypeParam.[<span class="highlight-keyword">Set</span>](newValue)
                trans.Commit()
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table cellpadding="5" cellspacing="2" frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          The given parameterId does not represent a valid FamilyType parameter of this family.
         </td>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          A non-optional argument was NULL
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="f51d019d-6ff3-692b-d1d2-b497cab564de.htm">
       Family Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">
       Autodesk.Revit.DB Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>