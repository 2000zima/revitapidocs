<div class="chm_content">
 <div id="header">
  <table id="bottomTable">
   <tbody>
    <tr id="headerTableRow3">
     <td align="left">
      <a href="a7622967-1381-c17f-ed04-1ebe40da0440.htm">
       FamilyItemFactory Class
      </a>
      <a href="#exampleToggle" >
       Example
      </a>
      <a href="#seeAlsoToggle" >
       SeeÂ Also
      </a>
     </td>
    </tr>
   </tbody>
  </table>
 </div>
 <div id="mainSection">
  <div id="mainBody">
   <div class="saveHistory">
    <span style="color: DarkGray">
    </span>
    <div class="summary">
     Generate a new linear dimension object using the default dimension type.
    </div>
    <p>
     <b>
      Namespace:
     </b>
     <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
      Autodesk.Revit.Creation
     </a>
     <br/>
     <b>
      Assembly:
     </b>
     <span sdata="assembly">
      RevitAPI
     </span>
     (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)
    </p>
    <h1 class="heading">
     Syntax
     <a name="syntaxToggle">
     </a>
    </h1>
    <div class="section" id="syntaxSection" name="collapseableSection" style="">
     <div class="code" id="syntaxCodeBlocks">
      <span codelanguage="CSharp">
       <table>
        <tbody>
         <tr>
          <th>
           C#
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span> <a href="210f88be-e3c5-26a4-7dd8-3296f6725cce.htm">Dimension</a> <span class="identifier">NewLinearDimension</span>(
	<a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a> <span class="parameter">view</span>,
	<a href="e7329450-434a-918b-661c-65e15e0585a5.htm">Line</a> <span class="parameter">line</span>,
	<a href="bc9192b5-6666-a8de-0128-87dae479fd6a.htm">ReferenceArray</a> <span class="parameter">references</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="VisualBasicDeclaration">
       <table>
        <tbody>
         <tr>
          <th>
           Visual Basic
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewLinearDimension</span> ( _
	<span class="parameter">view</span> <span class="keyword">As</span> <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a>, _
	<span class="parameter">line</span> <span class="keyword">As</span> <a href="e7329450-434a-918b-661c-65e15e0585a5.htm">Line</a>, _
	<span class="parameter">references</span> <span class="keyword">As</span> <a href="bc9192b5-6666-a8de-0128-87dae479fd6a.htm">ReferenceArray</a> _
) <span class="keyword">As</span> <a href="210f88be-e3c5-26a4-7dd8-3296f6725cce.htm">Dimension</a></code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
      <span codelanguage="ManagedCPlusPlus">
       <table>
        <tbody>
         <tr>
          <th>
           Visual C++
          </th>
         </tr>
         <tr>
          <td>
           <pre><code><span class="keyword">public</span>:
<a href="210f88be-e3c5-26a4-7dd8-3296f6725cce.htm">Dimension</a>^ <span class="identifier">NewLinearDimension</span>(
	<a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">View</a>^ <span class="parameter">view</span>, 
	<a href="e7329450-434a-918b-661c-65e15e0585a5.htm">Line</a>^ <span class="parameter">line</span>, 
	<a href="bc9192b5-6666-a8de-0128-87dae479fd6a.htm">ReferenceArray</a>^ <span class="parameter">references</span>
)</code></pre>
          </td>
         </tr>
        </tbody>
       </table>
      </span>
     </div>
     <div id="parameters">
      <h4 class="subHeading">
       Parameters
      </h4>
      <dl paramname="view">
       <dt>
        <span class="parameter">
         view
        </span>
       </dt>
       <dd>
        Type:
        <a href="fb92a4e7-f3a7-ef14-e631-342179b18de9.htm">
         Autodesk.Revit.DB
         View
        </a>
        <br/>
        The view in which the dimension is to be visible.
       </dd>
      </dl>
      <dl paramname="line">
       <dt>
        <span class="parameter">
         line
        </span>
       </dt>
       <dd>
        Type:
        <a href="e7329450-434a-918b-661c-65e15e0585a5.htm">
         Autodesk.Revit.DB
         Line
        </a>
        <br/>
        The extension line of the dimension.
       </dd>
      </dl>
      <dl paramname="references">
       <dt>
        <span class="parameter">
         references
        </span>
       </dt>
       <dd>
        Type:
        <a href="bc9192b5-6666-a8de-0128-87dae479fd6a.htm">
         Autodesk.Revit.DB
         ReferenceArray
        </a>
        <br/>
        An array of geometric references to which the dimension is to be bound.
You must supply at least two references, and all references supplied must be parallel to each other 
and perpendicular to the extension line.
       </dd>
      </dl>
     </div>
     <h4 class="subHeading">
      Return Value
     </h4>
     If creation was successful the new linear dimension is returned, 
otherwise an exception with failure information will be thrown.
    </div>
    <h1 class="heading">
     Remarks
     <a name="remarksToggle">
     </a>
    </h1>
    <div class="section" id="remarksSection" name="collapseableSection" style="">
     The currently user set default style is used for the created dimension.
    </div>
    <h1 class="heading">
     Examples
     <a name="exampleToggle">
     </a>
    </h1>
    <div class="section" id="exampleSection" name="collapseableSection" style="">
     <span codelanguage="CSharp" id="cbc_1" x-lang="CSharp">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       C#
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">public</span> Dimension CreateLinearDimension(Document document)
{
    <span class="highlight-comment">// first create two lines</span>
    XYZ pt1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">5</span>, <span class="highlight-number">5</span>, <span class="highlight-number">0</span>);
    XYZ pt2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">5</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
    Line line = Line.CreateBound(pt1, pt2);
    Plane plane = Plane.CreateByNormalAndOrigin(pt1.CrossProduct(pt2), pt2);
    SketchPlane skplane = SketchPlane.Create (document, plane);
    ModelCurve modelcurve1 = document.FamilyCreate.NewModelCurve(line, skplane);

    pt1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">5</span>, <span class="highlight-number">0</span>);
    pt2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
    line = Line.CreateBound(pt1, pt2);
    plane = Plane.CreateByNormalAndOrigin(pt1.CrossProduct(pt2), pt2);
    skplane = SketchPlane.Create (document, plane);
    ModelCurve modelcurve2 = document.FamilyCreate.NewModelCurve(line, skplane);

    <span class="highlight-comment">// now create a linear dimension between them</span>
    ReferenceArray ra = <span class="highlight-keyword">new</span> ReferenceArray();
    ra.Append(modelcurve1.GeometryCurve.Reference);
    ra.Append(modelcurve2.GeometryCurve.Reference);

    pt1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">5</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
    pt2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>);
    line = Line.CreateBound(pt1, pt2);

    Dimension dim = document.FamilyCreate.NewLinearDimension(document.ActiveView, line, ra);

    <span class="highlight-comment">// create a label for the dimension called "width"</span>
    FamilyParameter param = document.FamilyManager.AddParameter(<span class="highlight-literal">"width"</span>, 
        BuiltInParameterGroup.PG_CONSTRAINTS, 
        ParameterType.Length, <span class="highlight-keyword">false</span>);

    dim.FamilyLabel = param;

    <span class="highlight-keyword">return</span> dim;
}</code></pre>
      </div>
     </span>
     <span codelanguage="VisualBasic" id="cbc_2" x-lang="VisualBasic">
      <div class="highlight-title">
       <span class="highlight-copycode" tabindex="0">
        <img src='{{ url_for("static", filename="img/chm/icons/CopyCode.gif") }}' style="margin-right: 5px;"/>
        Copy
       </span>
       VB.NET
      </div>
      <div class="code">
       <pre><code><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> CreateLinearDimension(document <span class="highlight-keyword">As</span> Document) <span class="highlight-keyword">As</span> Dimension
    <span class="highlight-comment">' first create two lines</span>
    <span class="highlight-keyword">Dim</span> pt1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">5</span>, <span class="highlight-number">5</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> pt2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">5</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> line__1 <span class="highlight-keyword">As</span> Line = Line.CreateBound(pt1, pt2)
 <span class="highlight-keyword">Dim</span> plane <span class="highlight-keyword">As</span> Plane = plane.CreateByNormalAndOrigin(pt1.CrossProduct(pt2), pt2)
    <span class="highlight-keyword">Dim</span> skplane <span class="highlight-keyword">As</span> SketchPlane = SketchPlane.Create(document, plane)
    <span class="highlight-keyword">Dim</span> modelcurve1 <span class="highlight-keyword">As</span> ModelCurve = document.FamilyCreate.NewModelCurve(line__1, skplane)

    pt1 = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">5</span>, <span class="highlight-number">0</span>)
    pt2 = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
    line__1 = Line.CreateBound(pt1, pt2)
 plane = plane.CreateByNormalAndOrigin(pt1.CrossProduct(pt2), pt2)
    skplane = SketchPlane.Create(document, plane)
    <span class="highlight-keyword">Dim</span> modelcurve2 <span class="highlight-keyword">As</span> ModelCurve = document.FamilyCreate.NewModelCurve(line__1, skplane)

    <span class="highlight-comment">' now create a linear dimension between them</span>
    <span class="highlight-keyword">Dim</span> ra <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ReferenceArray()
    ra.Append(modelcurve1.GeometryCurve.Reference)
    ra.Append(modelcurve2.GeometryCurve.Reference)

    pt1 = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">5</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
    pt2 = <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">10</span>, <span class="highlight-number">0</span>)
    line__1 = Line.CreateBound(pt1, pt2)

    <span class="highlight-keyword">Dim</span> [<span class="highlight-keyword">dim</span>] <span class="highlight-keyword">As</span> Dimension = document.FamilyCreate.NewLinearDimension(document.ActiveView, line__1, ra)

    <span class="highlight-comment">' create a label for the dimension called "width"</span>
    <span class="highlight-keyword">Dim</span> param <span class="highlight-keyword">As</span> FamilyParameter = document.FamilyManager.AddParameter(<span class="highlight-literal">"width"</span>, BuiltInParameterGroup.PG_CONSTRAINTS, ParameterType.Length, <span class="highlight-keyword">False</span>)

    [<span class="highlight-keyword">dim</span>].FamilyLabel = param

    <span class="highlight-keyword">Return</span> [<span class="highlight-keyword">dim</span>]
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></code></pre>
      </div>
     </span>
    </div>
    <h1 class="heading">
     Exceptions
     <a name="exceptionsToggle">
     </a>
    </h1>
    <div class="section" id="exceptionsSection" name="collapseableSection" style="">
     <div class="tableSection">
      <table frame="lhs" width="100%">
       <tbody>
        <tr>
         <th class="exceptionNameColumn">
          Exception
         </th>
         <th class="exceptionConditionColumn">
          Condition
         </th>
        </tr>
        <tr>
         <td>
          <a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">
           Autodesk.Revit.Exceptions
           ArgumentNullException
          </a>
         </td>
         <td>
          Thrown when any input argument is
          <span class="keyword">
          </span>
          <span class="nu">
           a null reference (
           <span class="keyword">
            Nothing
           </span>
           in Visual Basic)
          </span>
          .
         </td>
        </tr>
        <tr>
         <td>
          <a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">
           Autodesk.Revit.Exceptions
           ArgumentException
          </a>
         </td>
         <td>
          Thrown when the argument "references" is invalid.
         </td>
        </tr>
        <tr>
         <td>
          <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">
           Autodesk.Revit.Exceptions
           InvalidOperationException
          </a>
         </td>
         <td>
          Thrown when the creation failed.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
    </div>
    <h1 class="heading">
     See Also
     <a name="seeAlsoToggle">
     </a>
    </h1>
    <div class="section" id="seeAlsoSection" name="collapseableSection" style="">
     <div class="seeAlsoStyle">
      <a href="a7622967-1381-c17f-ed04-1ebe40da0440.htm">
       FamilyItemFactory Class
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="a95776fa-90a1-dff7-7ab9-53918a818e32.htm">
       NewLinearDimension Overload
      </a>
     </div>
     <div class="seeAlsoStyle">
      <a href="ded320da-058a-4edd-0418-0582389559a7.htm">
       Autodesk.Revit.Creation Namespace
      </a>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>