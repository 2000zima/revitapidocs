{% macro header() %}<title>DocumentOpened Event</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.ApplicationServices" /><meta name="file" content="b9415c2d-442e-f61d-aafa-de31cce7959b" /><meta name="guid" content="b9415c2d-442e-f61d-aafa-de31cce7959b" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2015 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Application<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>DocumentOpened Event</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="94db8ea8-d2c3-5e71-8030-466bcb8e4426.htm">Application Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2015 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Subscribe to the DocumentOpened event to be notified immediately after Revit has finished opening a document.
</div><p /><b>Namespace:</b> <a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">Autodesk.Revit.ApplicationServices</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)<br /><b>Since:</b> 
   2010
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> event <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>&gt; <span class="identifier">DocumentOpened</span></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> Event <span class="identifier">DocumentOpened</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>(<span class="keyword">Of</span> <a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
 <span class="keyword">event</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>^&gt;^ <span class="identifier">DocumentOpened</span> {
	<span class="keyword">void</span> <span class="keyword">add</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>^&gt;^ <span class="parameter">value</span>);
	<span class="keyword">void</span> <span class="keyword">remove</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="0c6c3227-ecad-6a5f-c1b1-d08745360637.htm">DocumentOpenedEventArgs</a>^&gt;^ <span class="parameter">value</span>);
}</pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p>This event is raised immediately after Revit has finished opening a document.
   It is raised even when document opening failed or was cancelled (during DocumentOpening event).</p><p>
   Handlers of this event are permitted to make modifications to any document (including the active document),
   except for documents that are currently in read-only mode.
   </p><p>Check the 'Status' field in event's argument to see whether the action itself was successful or not.</p><p>This event is not cancellable, for the process of opening document has already been finished.</p><p>If the action was not successful, the document may not be modified and new transactions may not be started.</p><p>The following API functions are not available for the current document during this event:
   <ul><li><a href="da2f27b9-7255-4950-82a2-86e1432ff9f0.htm">Close<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a> and similar overloads.</li></ul></p><p>Exception <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a> will be thrown if any of the above methods is called during this event.</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Application_DocumentOpened : IExternalApplication
{
    <span class="highlight-comment">/// &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement this method to subscribe to event.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnStartup(UIControlledApplication application)
    {
        <span class="highlight-keyword">try</span>
        {
            <span class="highlight-comment">// Register event. </span>
           application.ControlledApplication.DocumentOpened += <span class="highlight-keyword">new</span> EventHandler
                &lt;Autodesk.Revit.DB.Events.DocumentOpenedEventArgs&gt;(application_DocumentOpened);
        }
        <span class="highlight-keyword">catch</span> (Exception)
        {
            <span class="highlight-keyword">return</span> Result.Failed;
        }

        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement OnShutdown method of IExternalApplication interface to unregister subscribed event</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnShutdown(UIControlledApplication application)
    {
        <span class="highlight-comment">// remove the event.</span>
       application.ControlledApplication.DocumentOpened -= application_DocumentOpened;
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-comment">/// &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">/// Code ID: 501</span>
    <span class="highlight-comment">/// For DocumentOpened class description</span>
    <span class="highlight-comment">/// &lt;/TrivialCode&gt;</span>

    <span class="highlight-comment">/// &lt;description&gt;</span>
    <span class="highlight-comment">/// This sample demonstrates how to subscribe to the DocumentOpened event and modify the model in the event handler method. </span>
    <span class="highlight-comment">/// &lt;/description&gt;</span>
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// This is the event handler. We modify the model.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="sender"&gt;Event sender.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="args"&gt;&lt;/param&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> application_DocumentOpened(<span class="highlight-keyword">object</span> sender, DocumentOpenedEventArgs args)
    {
        <span class="highlight-comment">// get document from event args.</span>
        Document doc = args.Document;

        <span class="highlight-comment">// Following code snippet demonstrates support of DocumentOpened event to modify the model.</span>
        <span class="highlight-comment">// Because DocumentOpened supports model changes, it allows user to update document data.</span>
        <span class="highlight-comment">// Here, this sample assigns a specified value to ProjectInformation.Address property. </span>
        <span class="highlight-comment">// User can change other properties of document or create(delete) something as he likes.</span>
        <span class="highlight-comment">// </span>
        <span class="highlight-comment">// Please note that ProjectInformation property is empty for family document.</span>
        <span class="highlight-comment">// So please don't run this sample on family document.</span>
        <span class="highlight-keyword">using</span> (Transaction transaction = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Edit Address"</span>))
        {
           <span class="highlight-keyword">if</span> (transaction.Start() == TransactionStatus.Started)
           {
              doc.ProjectInformation.Address =
                  <span class="highlight-literal">"United States - Massachusetts - Waltham - 1560 Trapelo Road"</span>;
              transaction.Commit();
           }
        }
    }

    <span class="highlight-comment">/// &lt;/ExampleMethod&gt;</span>
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> Application_DocumentOpened
    <span class="highlight-keyword">Implements</span> IExternalApplication
    <span class="highlight-comment">' &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement this method to subscribe to event.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnStartup(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnStartup
        <span class="highlight-keyword">Try</span>
            <span class="highlight-comment">' Register event. </span>
            <span class="highlight-keyword">AddHandler</span> application.ControlledApplication.DocumentOpened, <span class="highlight-keyword">AddressOf</span> application_DocumentOpened
        <span class="highlight-keyword">Catch</span> generatedExceptionName <span class="highlight-keyword">As</span> Exception
            <span class="highlight-keyword">Return</span> Result.Failed
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Try</span>

        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement OnShutdown method of IExternalApplication interface to unregister subscribed event</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnShutdown(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnShutdown
        <span class="highlight-comment">' remove the event.</span>
        <span class="highlight-keyword">RemoveHandler</span> application.ControlledApplication.DocumentOpened, <span class="highlight-keyword">AddressOf</span> application_DocumentOpened
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-comment">' &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">' Code ID: 501</span>
    <span class="highlight-comment">' For DocumentOpened class description</span>
    <span class="highlight-comment">' &lt;/TrivialCode&gt;</span>


    <span class="highlight-comment">' &lt;description&gt;</span>
    <span class="highlight-comment">' This sample demonstrates how to subscribe to the DocumentOpened event and modify the model in the event handler method. </span>
    <span class="highlight-comment">' &lt;/description&gt;</span>
    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' This is the event handler. We modify the model.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-comment">' &lt;param name="sender"&gt;Event sender.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="args"&gt;&lt;/param&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> application_DocumentOpened(sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, args <span class="highlight-keyword">As</span> DocumentOpenedEventArgs)
        <span class="highlight-comment">' get document from event args.</span>
        <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = args.Document

        <span class="highlight-comment">' Following code snippet demonstrates support of DocumentOpened event to modify the model.</span>
        <span class="highlight-comment">' Because DocumentOpened supports model changes, it allows user to update document data.</span>
        <span class="highlight-comment">' Here, this sample assigns a specified value to ProjectInformation.Address property. </span>
        <span class="highlight-comment">' User can change other properties of document or create(delete) something as he likes.</span>
        <span class="highlight-comment">'</span>
        <span class="highlight-comment">' Please note that ProjectInformation property is empty for family document.</span>
        <span class="highlight-comment">' So please don't run this sample on family document.</span>
        <span class="highlight-keyword">Using</span> transaction <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Edit Address"</span>)
            <span class="highlight-keyword">If</span> transaction.Start() = TransactionStatus.Started <span class="highlight-keyword">Then</span>
                doc.ProjectInformation.Address = <span class="highlight-literal">"United States - Massachusetts - Waltham - 1560 Trapelo Road"</span>
                transaction.Commit()
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-comment">' &lt;/ExampleMethod&gt;</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="94db8ea8-d2c3-5e71-8030-466bcb8e4426.htm">Application Class</a></div><div class="seeAlsoStyle"><a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">Autodesk.Revit.ApplicationServices Namespace</a></div></div></div></div>