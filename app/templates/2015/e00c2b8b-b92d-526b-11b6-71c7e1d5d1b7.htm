{% macro header() %}<title>FamilyCategory Property </title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_chm" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="e00c2b8b-b92d-526b-11b6-71c7e1d5d1b7" /><meta name="guid" content="e00c2b8b-b92d-526b-11b6-71c7e1d5d1b7" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2015 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Family<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>FamilyCategory Property </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="f51d019d-6ff3-692b-d1d2-b497cab564de.htm">Family Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2015 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">Retrieves or sets a Category object that represents the category or sub category in which the elements
( this family could generate ) reside.</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <a href="d390ecf6-e5db-d7c1-d7f2-766c0686e975.htm">Category</a> <span class="identifier">FamilyCategory</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">FamilyCategory</span> <span class="keyword">As</span> <a href="d390ecf6-e5db-d7c1-d7f2-766c0686e975.htm">Category</a>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">property</span> <a href="d390ecf6-e5db-d7c1-d7f2-766c0686e975.htm">Category</a>^ <span class="identifier">FamilyCategory</span> {
	<a href="d390ecf6-e5db-d7c1-d7f2-766c0686e975.htm">Category</a>^ <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<a href="d390ecf6-e5db-d7c1-d7f2-766c0686e975.htm">Category</a>^ <span class="parameter">value</span>);
}</pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">All category objects can be retrieved from the application by using the Categories property
of the Application.Settings object.</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetBeamAndColumnSymbols(Document document)
{
    FamilySymbolSet columnTypes = <span class="highlight-keyword">new</span> FamilySymbolSet();
    FamilySymbolSet framingTypes = <span class="highlight-keyword">new</span> FamilySymbolSet();
    FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    ICollection&lt;Element&gt; elements = collector.OfClass(<span class="highlight-keyword">typeof</span>(Family)).ToElements();

    <span class="highlight-keyword">foreach</span>(Element element <span class="highlight-keyword">in</span> elements)
    {
        Family family = element <span class="highlight-keyword">as</span> Family;
        Category category = family.FamilyCategory;
        <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != category)
        {
            ISet&lt;ElementId&gt; familySymbolIds = family.GetFamilySymbolIds();
            <span class="highlight-keyword">if</span> ((<span class="highlight-keyword">int</span>)BuiltInCategory.OST_StructuralColumns == category.Id.IntegerValue)
            {
                <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> familySymbolIds)
                {
                    FamilySymbol symbol = family.Document.GetElement(id) <span class="highlight-keyword">as</span> FamilySymbol;
                    columnTypes.Insert(symbol);
                }
            }
            <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> ((<span class="highlight-keyword">int</span>)BuiltInCategory.OST_StructuralFraming == category.Id.IntegerValue)
            {
                <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> familySymbolIds)
                {
                    FamilySymbol symbol = family.Document.GetElement(id) <span class="highlight-keyword">as</span> FamilySymbol;
                    framingTypes.Insert(symbol);
                }
            }
        }
    }

    <span class="highlight-keyword">string</span> message = <span class="highlight-literal">"Column Types: "</span>;
    FamilySymbolSetIterator fsItor = columnTypes.ForwardIterator();
    fsItor.Reset();
    <span class="highlight-keyword">while</span> (fsItor.MoveNext())
    {
        FamilySymbol familySybmol = fsItor.Current <span class="highlight-keyword">as</span> FamilySymbol;
        message += <span class="highlight-literal">"\n"</span> + familySybmol.Name;
    }

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,message);
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetBeamAndColumnSymbols(document <span class="highlight-keyword">As</span> Document)
    <span class="highlight-keyword">Dim</span> columnTypes <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FamilySymbolSet()
    <span class="highlight-keyword">Dim</span> framingTypes <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FamilySymbolSet()
    <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
    <span class="highlight-keyword">Dim</span> elements <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element) = collector.OfClass(<span class="highlight-keyword">GetType</span>(Family)).ToElements()

    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> element <span class="highlight-keyword">As</span> Element <span class="highlight-keyword">In</span> elements
        <span class="highlight-keyword">Dim</span> family <span class="highlight-keyword">As</span> Family = <span class="highlight-keyword">TryCast</span>(element, Family)
        <span class="highlight-keyword">Dim</span> category <span class="highlight-keyword">As</span> Category = family.FamilyCategory
        <span class="highlight-keyword">If</span> category <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> familySymbolIds <span class="highlight-keyword">As</span> ISet(<span class="highlight-keyword">Of</span> ElementId) = family.GetFamilySymbolIds()
            <span class="highlight-keyword">If</span> <span class="highlight-keyword">CInt</span>(BuiltInCategory.OST_StructuralColumns) = category.Id.IntegerValue <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> familySymbolIds
                    <span class="highlight-keyword">Dim</span> symbol <span class="highlight-keyword">As</span> FamilySymbol = <span class="highlight-keyword">TryCast</span>(family.Document.GetElement(id), FamilySymbol)
                    columnTypes.Insert(symbol)
                <span class="highlight-keyword">Next</span>
            <span class="highlight-keyword">ElseIf</span> <span class="highlight-keyword">CInt</span>(BuiltInCategory.OST_StructuralFraming) = category.Id.IntegerValue <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> familySymbolIds
                    <span class="highlight-keyword">Dim</span> symbol <span class="highlight-keyword">As</span> FamilySymbol = <span class="highlight-keyword">TryCast</span>(family.Document.GetElement(id), FamilySymbol)
                    framingTypes.Insert(symbol)
                <span class="highlight-keyword">Next</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"Column Types: "</span>
    <span class="highlight-keyword">Dim</span> fsItor <span class="highlight-keyword">As</span> FamilySymbolSetIterator = columnTypes.ForwardIterator()
    fsItor.Reset()
    <span class="highlight-keyword">While</span> fsItor.MoveNext()
        <span class="highlight-keyword">Dim</span> familySybmol <span class="highlight-keyword">As</span> FamilySymbol = <span class="highlight-keyword">TryCast</span>(fsItor.Current, FamilySymbol)
        message += vbLf + familySybmol.Name
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">While</span>

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentException</a></td><td>
Thrown when the input category cannot be assigned to this family.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
Thrown when the input category is <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span>.
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="f51d019d-6ff3-692b-d1d2-b497cab564de.htm">Family Class</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
