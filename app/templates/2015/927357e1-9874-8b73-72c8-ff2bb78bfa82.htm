{% macro header() %}<title>AnalysisDisplayStyle Class</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB.Analysis" /><meta name="file" content="927357e1-9874-8b73-72c8-ff2bb78bfa82" /><meta name="guid" content="927357e1-9874-8b73-72c8-ff2bb78bfa82" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2015 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">AnalysisDisplayStyle Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="ea2b6aa1-9174-4f95-17f9-f75496564de0.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2015 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Exposes API for manipulation of analysis display style.
</div><p /><b>Namespace:</b> <a href="958e2e12-587d-f188-5d7b-f13d7dbfdf48.htm">Autodesk.Revit.DB.Analysis</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)<br /><b>Since:</b> 
   2011
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">AnalysisDisplayStyle</span> : <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">AnalysisDisplayStyle</span> _
	<span class="keyword">Inherits</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">AnalysisDisplayStyle</span> : <span class="keyword">public</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve">Document doc = commandData.Application.ActiveUIDocument.Document;

AnalysisDisplayStyle analysisDisplayStyle = <span class="highlight-keyword">null</span>;
<span class="highlight-comment">// Look for an existing analysis display style with a specific name</span>
FilteredElementCollector collector1 = <span class="highlight-keyword">new</span> FilteredElementCollector(doc);
ICollection&lt;Element&gt; collection = collector1.OfClass(<span class="highlight-keyword">typeof</span>(AnalysisDisplayStyle)).ToElements();
var displayStyle = from element <span class="highlight-keyword">in</span> collection 
                   where element.Name == <span class="highlight-literal">"Display Style 1"</span> 
                   select element;

<span class="highlight-comment">// If display style does not already exist in the document, create it</span>
<span class="highlight-keyword">if</span> (displayStyle.Count() == <span class="highlight-number">0</span>)
{
    AnalysisDisplayColoredSurfaceSettings coloredSurfaceSettings = 
        <span class="highlight-keyword">new</span> AnalysisDisplayColoredSurfaceSettings();
    coloredSurfaceSettings.ShowGridLines = <span class="highlight-keyword">true</span>;

    AnalysisDisplayColorSettings colorSettings = <span class="highlight-keyword">new</span> AnalysisDisplayColorSettings();
    Color orange = <span class="highlight-keyword">new</span> Color(<span class="highlight-number">255</span>, <span class="highlight-number">205</span>, <span class="highlight-number">0</span>);
    Color purple = <span class="highlight-keyword">new</span> Color(<span class="highlight-number">200</span>, <span class="highlight-number">0</span>, <span class="highlight-number">200</span>);
    colorSettings.MaxColor = orange;
    colorSettings.MinColor = purple;

    AnalysisDisplayLegendSettings legendSettings = <span class="highlight-keyword">new</span> AnalysisDisplayLegendSettings();
    legendSettings.NumberOfSteps = <span class="highlight-number">10</span>;
    legendSettings.Rounding = <span class="highlight-number">0.05</span>;
    legendSettings.ShowDataDescription = <span class="highlight-keyword">false</span>;
    legendSettings.ShowLegend = <span class="highlight-keyword">true</span>;

    analysisDisplayStyle = AnalysisDisplayStyle.CreateAnalysisDisplayStyle(doc, 
        <span class="highlight-literal">"Display Style 1"</span>, coloredSurfaceSettings, colorSettings, legendSettings);
}
<span class="highlight-keyword">else</span>
{
    analysisDisplayStyle = displayStyle.Cast&lt;AnalysisDisplayStyle&gt;().ElementAt&lt;AnalysisDisplayStyle&gt;(<span class="highlight-number">0</span>);
}

<span class="highlight-comment">// now assign the display style to the view</span>
doc.ActiveView.AnalysisDisplayStyleId = analysisDisplayStyle.Id;</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = commandData.Application.ActiveUIDocument.Document

<span class="highlight-keyword">Dim</span> analysisDisplayStyle__1 <span class="highlight-keyword">As</span> AnalysisDisplayStyle = <span class="highlight-keyword">Nothing</span>
<span class="highlight-comment">' Look for an existing analysis display style with a specific name</span>
<span class="highlight-keyword">Dim</span> collector1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(doc)
<span class="highlight-keyword">Dim</span> collection <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Element) = collector1.OfClass(<span class="highlight-keyword">GetType</span>(AnalysisDisplayStyle)).ToElements()
<span class="highlight-keyword">Dim</span> displayStyle <span class="highlight-keyword">As</span> System.Collections.Generic.IEnumerable(<span class="highlight-keyword">Of</span> Autodesk.Revit.DB.Element)
displayStyle = From element <span class="highlight-keyword">In</span> collector1 _
 Where element.Name = <span class="highlight-literal">"Display Style 1"</span> _
 <span class="highlight-keyword">Select</span> element

<span class="highlight-comment">' If display style does not already exist in the document, create it</span>
<span class="highlight-keyword">If</span> displayStyle.Count() = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
    <span class="highlight-keyword">Dim</span> coloredSurfaceSettings <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> AnalysisDisplayColoredSurfaceSettings()
    coloredSurfaceSettings.ShowGridLines = <span class="highlight-keyword">True</span>

    <span class="highlight-keyword">Dim</span> colorSettings <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> AnalysisDisplayColorSettings()
    <span class="highlight-keyword">Dim</span> orange <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Color(<span class="highlight-number">255</span>, <span class="highlight-number">205</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> purple <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Color(<span class="highlight-number">200</span>, <span class="highlight-number">0</span>, <span class="highlight-number">200</span>)
    colorSettings.MaxColor = orange
    colorSettings.MinColor = purple

    <span class="highlight-keyword">Dim</span> legendSettings <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> AnalysisDisplayLegendSettings()
    legendSettings.NumberOfSteps = <span class="highlight-number">10</span>
    legendSettings.Rounding = <span class="highlight-number">0.05</span>
    legendSettings.ShowDataDescription = <span class="highlight-keyword">False</span>
    legendSettings.ShowLegend = <span class="highlight-keyword">True</span>

    analysisDisplayStyle__1 = AnalysisDisplayStyle.CreateAnalysisDisplayStyle(doc, <span class="highlight-literal">"Display Style 1"</span>, coloredSurfaceSettings, colorSettings, legendSettings)
<span class="highlight-keyword">Else</span>
    analysisDisplayStyle__1 = displayStyle.Cast(<span class="highlight-keyword">Of</span> AnalysisDisplayStyle)().ElementAt(<span class="highlight-number">0</span>)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

<span class="highlight-comment">' now assign the display style to the view</span>
doc.ActiveView.AnalysisDisplayStyleId = analysisDisplayStyle__1.Id</pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</a><br />  <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Element</a><br />    <span class="selflink">Autodesk.Revit.DB.Analysis<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>AnalysisDisplayStyle</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="ea2b6aa1-9174-4f95-17f9-f75496564de0.htm">AnalysisDisplayStyle Members</a></div><div class="seeAlsoStyle"><a href="958e2e12-587d-f188-5d7b-f13d7dbfdf48.htm">Autodesk.Revit.DB.Analysis Namespace</a></div></div></div></div>