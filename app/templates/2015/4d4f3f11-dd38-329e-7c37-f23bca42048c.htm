{% macro header() %}<title>NewPipe Method (XYZ, XYZ, PipeType)</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_chm" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.Creation" /><meta name="file" content="4d4f3f11-dd38-329e-7c37-f23bca42048c" /><meta name="guid" content="4d4f3f11-dd38-329e-7c37-f23bca42048c" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2015 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Document<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>NewPipe Method (XYZ, XYZ, PipeType)</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">Document Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2015 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">Adds a new pipe into the document,
using two points and pipe type.</div><p /><b>Namespace:</b> <a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve">[<a href="http://msdn2.microsoft.com/en-us/library/fwz0y5c2" target="_blank">ObsoleteAttribute</a>("This method is obsolete in Revit 2015. Please use Pipe.Create() instead.")]
<span class="keyword">public</span> <a href="aa1b8294-c12d-ece0-00af-b17c1f1c9e03.htm">Pipe</a> <span class="identifier">NewPipe</span>(
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a> <span class="parameter">point1</span>,
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a> <span class="parameter">point2</span>,
	<a href="7d3cc77e-0148-a23b-8142-7e08ebdad6b7.htm">PipeType</a> <span class="parameter">pipeType</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve">&lt;<a href="http://msdn2.microsoft.com/en-us/library/fwz0y5c2" target="_blank">ObsoleteAttribute</a>("This method is obsolete in Revit 2015. Please use Pipe.Create() instead.")&gt; _
<span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewPipe</span> ( _
	<span class="parameter">point1</span> <span class="keyword">As</span> <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>, _
	<span class="parameter">point2</span> <span class="keyword">As</span> <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>, _
	<span class="parameter">pipeType</span> <span class="keyword">As</span> <a href="7d3cc77e-0148-a23b-8142-7e08ebdad6b7.htm">PipeType</a> _
) <span class="keyword">As</span> <a href="aa1b8294-c12d-ece0-00af-b17c1f1c9e03.htm">Pipe</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve">[<a href="http://msdn2.microsoft.com/en-us/library/fwz0y5c2" target="_blank">ObsoleteAttribute</a>(L"This method is obsolete in Revit 2015. Please use Pipe.Create() instead.")]
<span class="keyword">public</span>:
<a href="aa1b8294-c12d-ece0-00af-b17c1f1c9e03.htm">Pipe</a>^ <span class="identifier">NewPipe</span>(
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>^ <span class="parameter">point1</span>,
	<a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">XYZ</a>^ <span class="parameter">point2</span>,
	<a href="7d3cc77e-0148-a23b-8142-7e08ebdad6b7.htm">PipeType</a>^ <span class="parameter">pipeType</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="point1"><dt><span class="parameter">point1</span></dt><dd>Type: <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>XYZ</a><br /> The first point of the pipe. </dd></dl><dl paramName="point2"><dt><span class="parameter">point2</span></dt><dd>Type: <a href="c2fd995c-95c0-58fb-f5de-f3246cbc5600.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>XYZ</a><br /> The second point of the pipe. </dd></dl><dl paramName="pipeType"><dt><span class="parameter">pipeType</span></dt><dd>Type: <a href="7d3cc77e-0148-a23b-8142-7e08ebdad6b7.htm">Autodesk.Revit.DB.Plumbing<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>PipeType</a><br /> The type of the pipe. </dd></dl></div><h4 class="subHeading">Return Value</h4> If creation was successful then a new pipe is returned,
otherwise an exception with failure information will be thrown.</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> Pipe CreateNewPipe(Document document, ElementId systemTypeId, ElementId levelId)
{
    <span class="highlight-comment">// find a pipe type</span>

    FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    collector.OfClass(<span class="highlight-keyword">typeof</span>(PipeType));
    PipeType pipeType = collector.FirstElement() <span class="highlight-keyword">as</span> PipeType;

    Pipe pipe = <span class="highlight-keyword">null</span>;
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != pipeType)
    {
        <span class="highlight-comment">// create pipe between 2 points</span>
        XYZ p1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ p2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);

        pipe = Pipe.Create(document, systemTypeId, pipeType.Id, levelId, p1, p2);
    }

    <span class="highlight-keyword">return</span> pipe;
}</pre></div></span><span id="cbc_2" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> Pipe CreateNewPipe(Document document, ElementId systemTypeId, ElementId levelId)
{
    <span class="highlight-comment">// find a pipe type</span>

    FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    collector.OfClass(<span class="highlight-keyword">typeof</span>(PipeType));
    PipeType pipeType = collector.FirstElement() <span class="highlight-keyword">as</span> PipeType;

    Pipe pipe = <span class="highlight-keyword">null</span>;
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != pipeType)
    {
        <span class="highlight-comment">// create pipe between 2 points</span>
        XYZ p1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ p2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);

        pipe = Pipe.Create(document, systemTypeId, pipeType.Id, levelId, p1, p2);
    }

    <span class="highlight-keyword">return</span> pipe;
}</pre></div></span><span id="cbc_3" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> Pipe CreateNewPipe(Document document, ElementId systemTypeId, ElementId levelId)
{
    <span class="highlight-comment">// find a pipe type</span>

    FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    collector.OfClass(<span class="highlight-keyword">typeof</span>(PipeType));
    PipeType pipeType = collector.FirstElement() <span class="highlight-keyword">as</span> PipeType;

    Pipe pipe = <span class="highlight-keyword">null</span>;
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != pipeType)
    {
        <span class="highlight-comment">// create pipe between 2 points</span>
        XYZ p1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ p2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);

        pipe = Pipe.Create(document, systemTypeId, pipeType.Id, levelId, p1, p2);
    }

    <span class="highlight-keyword">return</span> pipe;
}</pre></div></span><span id="cbc_4" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> Pipe CreateNewPipe(Document document, ElementId systemTypeId, ElementId levelId)
{
    <span class="highlight-comment">// find a pipe type</span>

    FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
    collector.OfClass(<span class="highlight-keyword">typeof</span>(PipeType));
    PipeType pipeType = collector.FirstElement() <span class="highlight-keyword">as</span> PipeType;

    Pipe pipe = <span class="highlight-keyword">null</span>;
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != pipeType)
    {
        <span class="highlight-comment">// create pipe between 2 points</span>
        XYZ p1 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);
        XYZ p2 = <span class="highlight-keyword">new</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>);

        pipe = Pipe.Create(document, systemTypeId, pipeType.Id, levelId, p1, p2);
    }

    <span class="highlight-keyword">return</span> pipe;
}</pre></div></span><span id="cbc_5" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> CreateNewPipe(document <span class="highlight-keyword">As</span> Document, systemTypeId <span class="highlight-keyword">As</span> ElementId, levelId <span class="highlight-keyword">As</span> ElementId) <span class="highlight-keyword">As</span> Pipe
    <span class="highlight-comment">' find a pipe type</span>


    <span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
    collector.OfClass(<span class="highlight-keyword">GetType</span>(PipeType))
    <span class="highlight-keyword">Dim</span> pipeType <span class="highlight-keyword">As</span> PipeType = <span class="highlight-keyword">TryCast</span>(collector.FirstElement(), PipeType)

    <span class="highlight-keyword">Dim</span> pipe__1 <span class="highlight-keyword">As</span> Pipe = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">If</span> pipeType <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' create pipe between 2 points</span>
        <span class="highlight-keyword">Dim</span> p1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)
        <span class="highlight-keyword">Dim</span> p2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> XYZ(<span class="highlight-number">10</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>)

        pipe__1 = Pipe.Create(document, systemTypeId, pipeType.Id, levelId, p1, p2)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Return</span> pipe__1
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
Thrown when the input argument point1 or point2 is <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span>.
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>InvalidOperationException</a></td><td>
Thrown when the pipe cannot be created or regenerate fails.
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">Document Class</a></div><div class="seeAlsoStyle"><a href="6d5d916a-5c40-7bd2-cb61-df052fac6282.htm">NewPipe Overload</a></div><div class="seeAlsoStyle"><a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation Namespace</a></div></div></div></div>
