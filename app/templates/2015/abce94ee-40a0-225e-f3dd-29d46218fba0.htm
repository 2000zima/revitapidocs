{% macro header() %}<title>Create Method </title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="abce94ee-40a0-225e-f3dd-29d46218fba0" /><meta name="guid" content="abce94ee-40a0-225e-f3dd-29d46218fba0" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2015 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">FillPatternElement<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Create Method </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">FillPatternElement Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2015 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Creates a new FillPatternElement.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)<br /><b>Since:</b> 
   2012
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">FillPatternElement</a> <span class="identifier">Create</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a> <span class="parameter">document</span>,
	<a href="cc546ee9-ba80-c13d-4b74-8c0e2517bc28.htm">FillPattern</a> <span class="parameter">fillPattern</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">Create</span> ( _
	<span class="parameter">document</span> <span class="keyword">As</span> <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>, _
	<span class="parameter">fillPattern</span> <span class="keyword">As</span> <a href="cc546ee9-ba80-c13d-4b74-8c0e2517bc28.htm">FillPattern</a> _
) <span class="keyword">As</span> <a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">FillPatternElement</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">FillPatternElement</a>^ <span class="identifier">Create</span>(
	<a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Document</a>^ <span class="parameter">document</span>,
	<a href="cc546ee9-ba80-c13d-4b74-8c0e2517bc28.htm">FillPattern</a>^ <span class="parameter">fillPattern</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="document"><dt><span class="parameter">document</span></dt><dd>Type: <a href="db03274b-a107-aa32-9034-f3e0df4bb1ec.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Document</a><br />
   The document in which to create the FillPatternElement.
</dd></dl><dl paramName="fillPattern"><dt><span class="parameter">fillPattern</span></dt><dd>Type: <a href="cc546ee9-ba80-c13d-4b74-8c0e2517bc28.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>FillPattern</a><br />
   The FillPattern associated to the newly created FillPatternElement.
</dd></dl></div><h4 class="subHeading">Return Value</h4>
   The newly created FillPatternElement.
</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">// Create a complex fill pattern</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> CreateComplexFillPattern(Document doc)
{
    <span class="highlight-comment">// Create the fill pattern</span>
    FillPattern fillPattern = <span class="highlight-keyword">new</span> FillPattern(<span class="highlight-literal">"API-created"</span>, FillPatternTarget.Model,
                                              FillPatternHostOrientation.ToHost);

    <span class="highlight-comment">// Add grids</span>
    List&lt;FillGrid&gt; grids = <span class="highlight-keyword">new</span> List&lt;FillGrid&gt;();

    <span class="highlight-comment">//Horizontal lines.  </span>
    <span class="highlight-comment">// The arguments: origin, offset (vertical distance between lines), </span>
    <span class="highlight-comment">// angle, shift (delta between location of start point per line)</span>
    <span class="highlight-comment">// The last two arguments are the segments: e.g. 1.0 units on, </span>
    <span class="highlight-comment">// 0.1 units off (units are Revit units (ft))</span>
    grids.Add(CreateGrid(<span class="highlight-keyword">new</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0.55</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>));
    grids.Add(CreateGrid(<span class="highlight-keyword">new</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.5</span>), <span class="highlight-number">0.5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0.55</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>));

    <span class="highlight-comment">// Vertical lines.  </span>
    grids.Add(CreateGrid(<span class="highlight-keyword">new</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.55</span>, Math.PI / <span class="highlight-number">2</span>, <span class="highlight-number">0.5</span>, <span class="highlight-number">0.4</span>, <span class="highlight-number">0.6</span>));
    grids.Add(CreateGrid(<span class="highlight-keyword">new</span> UV(<span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.55</span>, Math.PI / <span class="highlight-number">2</span>, <span class="highlight-number">0.5</span>, <span class="highlight-number">0.4</span>, <span class="highlight-number">0.6</span>));

    fillPattern.SetFillGrids(grids);

    <span class="highlight-comment">// Create the fill pattern element. Now document is modified; transaction is needed</span>
    <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Create fill pattern"</span>))
    {
       t.Start();
       FillPatternElement patternElement = FillPatternElement.Create(doc, fillPattern);
       t.Commit();
    }
}

<span class="highlight-comment">// Creates and returns a new fill grid</span>
<span class="highlight-keyword">private</span> FillGrid CreateGrid(UV origin, <span class="highlight-keyword">double</span> offset, <span class="highlight-keyword">double</span> angle,
                            <span class="highlight-keyword">double</span> shift, <span class="highlight-keyword">params</span> <span class="highlight-keyword">double</span>[] segments)
{
    FillGrid fillGrid = <span class="highlight-keyword">new</span> FillGrid();
    fillGrid.Origin = origin;
    fillGrid.Offset = offset;
    fillGrid.Angle = angle;
    fillGrid.Shift = shift;
    List&lt;<span class="highlight-keyword">double</span>&gt; segmentsList = <span class="highlight-keyword">new</span> List&lt;<span class="highlight-keyword">double</span>&gt;();
    <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">double</span> d <span class="highlight-keyword">in</span> segments)
    {
        segmentsList.Add(d);
    }
    fillGrid.SetSegments(segmentsList);

    <span class="highlight-keyword">return</span> fillGrid;
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">' Create a complex fill pattern</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> CreateComplexFillPattern(doc <span class="highlight-keyword">As</span> Document)
    <span class="highlight-comment">' Create the fill pattern</span>
    <span class="highlight-keyword">Dim</span> fillPattern <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FillPattern(<span class="highlight-literal">"API-created"</span>, FillPatternTarget.Model, FillPatternHostOrientation.ToHost)

    <span class="highlight-comment">' Add grids</span>
    <span class="highlight-keyword">Dim</span> grids <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> FillGrid)()

    <span class="highlight-comment">'Horizontal lines.  </span>
    <span class="highlight-comment">' The arguments: origin, offset (vertical distance between lines), </span>
    <span class="highlight-comment">' angle, shift (delta between location of start point per line)</span>
    <span class="highlight-comment">' The last two arguments are the segments: e.g. 1.0 units on, </span>
    <span class="highlight-comment">' 0.1 units off (units are Revit units (ft))</span>
    grids.Add(CreateGrid(<span class="highlight-keyword">New</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0.55</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>))
    grids.Add(CreateGrid(<span class="highlight-keyword">New</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.5</span>), <span class="highlight-number">0.5</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0.55</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>))

    <span class="highlight-comment">' Vertical lines.  </span>
    grids.Add(CreateGrid(<span class="highlight-keyword">New</span> UV(<span class="highlight-number">0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.55</span>, Math.PI / <span class="highlight-number">2</span>, <span class="highlight-number">0.5</span>, <span class="highlight-number">0.4</span>, <span class="highlight-number">0.6</span>))
    grids.Add(CreateGrid(<span class="highlight-keyword">New</span> UV(<span class="highlight-number">1.0</span>, <span class="highlight-number">0.1</span>), <span class="highlight-number">0.55</span>, Math.PI / <span class="highlight-number">2</span>, <span class="highlight-number">0.5</span>, <span class="highlight-number">0.4</span>, <span class="highlight-number">0.6</span>))

    fillPattern.SetFillGrids(grids)

    <span class="highlight-comment">' Create the fill pattern element. Now document is modified; transaction is needed</span>
    <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Create fill pattern"</span>)
        t.Start()
        <span class="highlight-keyword">Dim</span> patternElement <span class="highlight-keyword">As</span> FillPatternElement = FillPatternElement.Create(doc, fillPattern)
        t.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-comment">' Creates and returns a new fill grid</span>
<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> CreateGrid(origin <span class="highlight-keyword">As</span> UV, offset <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, angle <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, shift <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, <span class="highlight-keyword">ParamArray</span> segments <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>()) <span class="highlight-keyword">As</span> FillGrid
    <span class="highlight-keyword">Dim</span> fillGrid <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FillGrid()
    fillGrid.Origin = origin
    fillGrid.Offset = offset
    fillGrid.Angle = angle
    fillGrid.Shift = shift
    <span class="highlight-keyword">Dim</span> segmentsList <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> <span class="highlight-keyword">Double</span>)()
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> d <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> <span class="highlight-keyword">In</span> segments
        segmentsList.Add(d)
    <span class="highlight-keyword">Next</span>
    fillGrid.SetSegments(segmentsList)

    <span class="highlight-keyword">Return</span> fillGrid
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
   A non-optional argument was NULL
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="64ecefd0-f5c4-5cd9-53bd-10a64739257e.htm">FillPatternElement Class</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
