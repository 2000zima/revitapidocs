{% macro header() %}<title>OnLinkBegin Method </title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="40d99b4a-e6aa-42d7-18ff-b546d1a5154e" /><meta name="guid" content="40d99b4a-e6aa-42d7-18ff-b546d1a5154e" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2015 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">IExportContext<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>OnLinkBegin Method </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="7d0dc6df-db0e-6a07-3b42-8dde1bedb3c1.htm">IExportContext Interface</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2015 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   This method marks the beginning of a link instance to be exported.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)<br /><b>Since:</b> 
   2014
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><a href="39f98799-628b-8d65-765c-ca86949ce7ed.htm">RenderNodeAction</a> <span class="identifier">OnLinkBegin</span>(
	<a href="9141cd14-5aa4-d81f-66ad-8ca3af394886.htm">LinkNode</a> <span class="parameter">node</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Function</span> <span class="identifier">OnLinkBegin</span> ( _
	<span class="parameter">node</span> <span class="keyword">As</span> <a href="9141cd14-5aa4-d81f-66ad-8ca3af394886.htm">LinkNode</a> _
) <span class="keyword">As</span> <a href="39f98799-628b-8d65-765c-ca86949ce7ed.htm">RenderNodeAction</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><a href="39f98799-628b-8d65-765c-ca86949ce7ed.htm">RenderNodeAction</a> <span class="identifier">OnLinkBegin</span>(
	<a href="9141cd14-5aa4-d81f-66ad-8ca3af394886.htm">LinkNode</a>^ <span class="parameter">node</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="node"><dt><span class="parameter">node</span></dt><dd>Type: <a href="9141cd14-5aa4-d81f-66ad-8ca3af394886.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>LinkNode</a><br /></dd></dl></div><h4 class="subHeading">Return Value</h4>
   Return RenderNodeAction.Skip if you wish to skip processing this link instance,
   or return RenderNodeAction.Proceed otherwise.
</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This code demonstrates how to process instances of Revit links.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> RenderNodeAction OnLinkBegin(LinkNode node)
{
   <span class="highlight-comment">// We can get more information about the family instance and its type if we need to</span>
   ElementId symbolId = node.GetSymbolId();
   RevitLinkType linkType = m_document.GetElement(symbolId) <span class="highlight-keyword">as</span> RevitLinkType;
   String linkDocumentName = linkType.Name;

   <span class="highlight-comment">// Typically, an export context has to manage a stack of transformation</span>
   <span class="highlight-comment">// for all nested objects, such as instances, lights, links, etc.</span>
   <span class="highlight-comment">// A combined transformation needs to be applied to the incoming geometry</span>
   <span class="highlight-comment">// (providing all geometry is to be flattened in the resultant format.)</span>
   m_TransformationStack.Push(m_TransformationStack.Peek().Multiply(node.GetTransform()));

   <span class="highlight-comment">// We can either skip this link instance or proceed with rendering it</span>
   <span class="highlight-keyword">return</span> RenderNodeAction.Proceed;
}

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This method marks the end of processing a Revit link</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> OnLinkEnd(LinkNode node)
{
   <span class="highlight-comment">// Note: This method is invoked even for instances that were skipped.</span>

   <span class="highlight-comment">// If we maintain a transformation stack, we need to remove the latest one from it.</span>
   m_TransformationStack.Pop();
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">' &lt;summary&gt;</span>
<span class="highlight-comment">' This code demonstrates how to process instances of Revit links.</span>
<span class="highlight-comment">' &lt;/summary&gt;</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnLinkBegin(node <span class="highlight-keyword">As</span> LinkNode) <span class="highlight-keyword">As</span> RenderNodeAction <span class="highlight-keyword">Implements</span> IExportContext.OnLinkBegin
    <span class="highlight-comment">' We can get more information about the family instance and its type if we need to</span>
    <span class="highlight-keyword">Dim</span> symbolId <span class="highlight-keyword">As</span> ElementId = node.GetSymbolId()
    <span class="highlight-keyword">Dim</span> linkType <span class="highlight-keyword">As</span> RevitLinkType = <span class="highlight-keyword">TryCast</span>(m_document.GetElement(symbolId), RevitLinkType)
    <span class="highlight-keyword">Dim</span> linkDocumentName <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>] = linkType.Name

    <span class="highlight-comment">' Typically, an export context has to manage a stack of transformation</span>
    <span class="highlight-comment">' for all nested objects, such as instances, lights, links, etc.</span>
    <span class="highlight-comment">' A combined transformation needs to be applied to the incoming geometry</span>
    <span class="highlight-comment">' (providing all geometry is to be flattened in the resultant format.)</span>
    m_TransformationStack.Push(m_TransformationStack.Peek().Multiply(node.GetTransform()))

    <span class="highlight-comment">' We can either skip this link instance or proceed with rendering it</span>
    <span class="highlight-keyword">Return</span> RenderNodeAction.Proceed
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

<span class="highlight-comment">' &lt;summary&gt;</span>
<span class="highlight-comment">' This method marks the end of processing a Revit link</span>
<span class="highlight-comment">' &lt;/summary&gt;</span>
<span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> OnLinkEnd(node <span class="highlight-keyword">As</span> LinkNode) <span class="highlight-keyword">Implements</span> IExportContext.OnLinkEnd
    <span class="highlight-comment">' Note: This method is invoked even for instances that were skipped.</span>


    <span class="highlight-comment">' If we maintain a transformation stack, we need to remove the latest one from it.</span>
    m_TransformationStack.Pop()
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="7d0dc6df-db0e-6a07-3b42-8dde1bedb3c1.htm">IExportContext Interface</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
