{% macro header() %}<title>Opening Class</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="720de864-9f4e-c606-c7f4-2e7a0b2da46f" /><meta name="guid" content="720de864-9f4e-c606-c7f4-2e7a0b2da46f" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2015 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Opening Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="44d5feb7-de14-3339-7cc2-aa5319c6e353.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2015 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">An opening in an Autodesk Revit project or family document.</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 2015.0.0.0 (2015.0.0.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Opening</span> : <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Opening</span> _
	<span class="keyword">Inherits</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Opening</span> : <span class="keyword">public</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">
The object represents a variety of different types of openings:
<ul><li>A rectangular opening in a wall created by two boundary points in a revit project.</li><li>An opening created by a set of curves applied to a roof, floor, ceiling, beam, brace or column.</li><li>A vertical shaft opening extending one or more levels.</li><li>A simple opening created on a wall or ceiling in a family document. </li></ul>
Depending upon the type of opening, some of the properties of this class will not be available.</div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">This object derived from the Element base object and such supports all the
methods of that object such as the ability to retrieve the parameters of that object. This
object also supports access to a structural analytical model but this feature is only
available with Autodesk Revit Structure.</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Getinfo_Opening(Opening opening)
{
    <span class="highlight-keyword">string</span> message = <span class="highlight-literal">"Opening:"</span>;

    <span class="highlight-comment">//get the host element of this opening</span>
    message += <span class="highlight-literal">"\nThe id of the opening's host element is : "</span> + opening.Host.Id.IntegerValue;

    <span class="highlight-comment">//get the information whether the opening has a rect boundary</span>
    <span class="highlight-comment">//If the opening has a rect boundary, we can get the geometry information from BoundaryRect property.</span>
    <span class="highlight-comment">//Otherwise we should get the geometry information from BoundaryCurves property</span>
    <span class="highlight-keyword">if</span> (opening.IsRectBoundary)
    {
        message += <span class="highlight-literal">"\nThe opening has a rectangular boundary."</span>;
        <span class="highlight-comment">//array contains two XYZ objects: the max and min coords of boundary</span>
        IList&lt;XYZ&gt; boundaryRect = opening.BoundaryRect;

        <span class="highlight-comment">//get the coordinate value of the min coordinate point</span>
        XYZ point = opening.BoundaryRect[<span class="highlight-number">0</span>];
        message += <span class="highlight-literal">"\nMin coordinate point:("</span> + point.X + <span class="highlight-literal">", "</span>
                                + point.Y + <span class="highlight-literal">", "</span> + point.Z + <span class="highlight-literal">")"</span>;

        <span class="highlight-comment">//get the coordinate value of the Max coordinate point</span>
        point = opening.BoundaryRect[<span class="highlight-number">1</span>];
        message += <span class="highlight-literal">"\nMax coordinate point: ("</span> + point.X + <span class="highlight-literal">", "</span>
                                + point.Y + <span class="highlight-literal">", "</span> + point.Z + <span class="highlight-literal">")"</span>;
    }
    <span class="highlight-keyword">else</span>
    {
        message += <span class="highlight-literal">"\nThe opening doesn't have a rectangular boundary."</span>;
        <span class="highlight-comment">// Get curve number</span>
        <span class="highlight-keyword">int</span> curves = opening.BoundaryCurves.Size;
        message += <span class="highlight-literal">"\nNumber of curves is : "</span> + curves;
        <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; curves; i++)
        {
            Autodesk.Revit.DB.Curve curve = opening.BoundaryCurves.get_Item(i);
            <span class="highlight-comment">// Get curve start point</span>
            message += <span class="highlight-literal">"\nCurve start point: "</span> + XYZToString(curve.GetEndPoint(<span class="highlight-number">0</span>));
            <span class="highlight-comment">// Get curve end point</span>
            message += <span class="highlight-literal">"; Curve end point: "</span> + XYZToString(curve.GetEndPoint(<span class="highlight-number">1</span>));
        }
    }
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,message);
}

<span class="highlight-comment">// output the point's three coordinates</span>
<span class="highlight-keyword">string</span> XYZToString(XYZ point)
{
    <span class="highlight-keyword">return</span> <span class="highlight-literal">"("</span> + point.X + <span class="highlight-literal">", "</span> + point.Y + <span class="highlight-literal">", "</span> + point.Z + <span class="highlight-literal">")"</span>;
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> Getinfo_Opening(opening <span class="highlight-keyword">As</span> Opening)
    <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"Opening:"</span>

    <span class="highlight-comment">'get the host element of this opening</span>
    message += vbLf &amp; <span class="highlight-literal">"The id of the opening's host element is : "</span> &amp; Convert.ToString(opening.Host.Id.IntegerValue)

    <span class="highlight-comment">'get the information whether the opening has a rect boundary</span>
    <span class="highlight-comment">'If the opening has a rect boundary, we can get the geometry information from BoundaryRect property.</span>
    <span class="highlight-comment">'Otherwise we should get the geometry information from BoundaryCurves property</span>
    <span class="highlight-keyword">If</span> opening.IsRectBoundary <span class="highlight-keyword">Then</span>
        message += vbLf &amp; <span class="highlight-literal">"The opening has a rectangular boundary."</span>
        <span class="highlight-comment">'array contains two XYZ objects: the max and min coords of boundary</span>
        <span class="highlight-keyword">Dim</span> boundaryRect <span class="highlight-keyword">As</span> IList(<span class="highlight-keyword">Of</span> XYZ) = opening.BoundaryRect

        <span class="highlight-comment">'get the coordinate value of the min coordinate point</span>
        <span class="highlight-keyword">Dim</span> point <span class="highlight-keyword">As</span> XYZ = opening.BoundaryRect(<span class="highlight-number">0</span>)
        message += ((vbLf &amp; <span class="highlight-literal">"Min coordinate point:("</span> + point.X &amp; <span class="highlight-literal">", "</span>) + point.Y &amp; <span class="highlight-literal">", "</span>) + point.Z &amp; <span class="highlight-literal">")"</span>

        <span class="highlight-comment">'get the coordinate value of the Max coordinate point</span>
        point = opening.BoundaryRect(<span class="highlight-number">1</span>)
        message += ((vbLf &amp; <span class="highlight-literal">"Max coordinate point: ("</span> + point.X &amp; <span class="highlight-literal">", "</span>) + point.Y &amp; <span class="highlight-literal">", "</span>) + point.Z &amp; <span class="highlight-literal">")"</span>
    <span class="highlight-keyword">Else</span>
        message += vbLf &amp; <span class="highlight-literal">"The opening doesn't have a rectangular boundary."</span>
        <span class="highlight-comment">' Get curve number</span>
        <span class="highlight-keyword">Dim</span> curves <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = opening.BoundaryCurves.Size
        message += vbLf &amp; <span class="highlight-literal">"Number of curves is : "</span> &amp; curves
        <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> curves - <span class="highlight-number">1</span>
            <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Curve = opening.BoundaryCurves.Item(i)
            <span class="highlight-comment">' Get curve start point</span>
            message += vbLf &amp; <span class="highlight-literal">"Curve start point: "</span> &amp; XYZToString(curve.GetEndPoint(<span class="highlight-number">0</span>))
            <span class="highlight-comment">' Get curve end point</span>
            message += <span class="highlight-literal">"; Curve end point: "</span> &amp; XYZToString(curve.GetEndPoint(<span class="highlight-number">1</span>))
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-comment">' output the point's three coordinates</span>
<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> XYZToString(point <span class="highlight-keyword">As</span> XYZ) <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
    <span class="highlight-keyword">Return</span> <span class="highlight-literal">"("</span> &amp; Convert.ToString(point.X) &amp; <span class="highlight-literal">", "</span> &amp; Convert.ToString(point.Y) &amp; <span class="highlight-literal">", "</span> &amp; Convert.ToString(point.Z) &amp; <span class="highlight-literal">")"</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</a><br />  <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Element</a><br />    <span class="selflink">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Opening</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="44d5feb7-de14-3339-7cc2-aa5319c6e353.htm">Opening Members</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>