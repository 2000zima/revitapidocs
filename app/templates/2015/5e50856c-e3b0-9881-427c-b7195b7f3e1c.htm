{% macro header() %}<title>Elements Property </title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_chm" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.UI.Selection" /><meta name="file" content="5e50856c-e3b0-9881-427c-b7195b7f3e1c" /><meta name="guid" content="5e50856c-e3b0-9881-427c-b7195b7f3e1c" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2015 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Selection<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Elements Property </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="31b73d46-7d67-5dbb-4dad-80aa597c9afc.htm">Selection Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2015 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">The elements that are shown as selected in the Revit user-interface.</div><p /><b>Namespace:</b> <a href="11785869-cc9e-03fc-97db-767a59af10a1.htm">Autodesk.Revit.UI.Selection</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPIUI</span> (in RevitAPIUI.dll) Version: 2015.0.0.0 (2015.0.0.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve">[<a href="http://msdn2.microsoft.com/en-us/library/fwz0y5c2" target="_blank">ObsoleteAttribute</a>("This property is deprecated in Revit 2015. Use GetElementIds() and SetElementIds instead.")]
<span class="keyword">public</span> <a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a> <span class="identifier">Elements</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve">&lt;<a href="http://msdn2.microsoft.com/en-us/library/fwz0y5c2" target="_blank">ObsoleteAttribute</a>("This property is deprecated in Revit 2015. Use GetElementIds() and SetElementIds instead.")&gt; _
<span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">Elements</span> <span class="keyword">As</span> <a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve">[<a href="http://msdn2.microsoft.com/en-us/library/fwz0y5c2" target="_blank">ObsoleteAttribute</a>(L"This property is deprecated in Revit 2015. Use GetElementIds() and SetElementIds instead.")]
<span class="keyword">public</span>:
<span class="keyword">property</span> <a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a>^ <span class="identifier">Elements</span> {
	<a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a>^ <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<a href="73b3008c-81fb-6b72-3d0d-b60d9241f1fc.htm">SelElementSet</a>^ <span class="parameter">value</span>);
}</pre></td></tr></table></span></div><h4 class="subHeading">Field Value</h4>The selected elements.</div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">PickOne and WindowSelect add to this set because they modify the set of elements selected in the user-interface
after the External Command is complete. Selections made with PickObject, PickObjects, and PickElementsByRectangle do not
persist after the External Command is complete, and therefore they do not affect this property. </div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> ChangeSelection(UIDocument uidoc)
{
    <span class="highlight-comment">// Get selected elements from current document.</span>
    ICollection&lt;ElementId&gt; selectedIds = uidoc.Selection.GetElementIds();

    <span class="highlight-comment">// Display current number of selected elements</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Number of selected elements: "</span> + selectedIds.Count.ToString());

    <span class="highlight-comment">// Go through the selected items and filter out walls only.</span>
    ICollection&lt;ElementId&gt; selectedWallIds = <span class="highlight-keyword">new</span> List&lt;ElementId&gt;();

    <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> selectedIds)
    {
        Element elements = uidoc.Document.GetElement(id);
        <span class="highlight-keyword">if</span> (elements <span class="highlight-keyword">is</span> Wall)
        {
            selectedWallIds.Add(id);
        }
    }

    <span class="highlight-comment">// Set the created element set as current select element set.</span>
    uidoc.Selection.SetElementIds(selectedWallIds);

    <span class="highlight-comment">// Give the user some information.</span>
    <span class="highlight-keyword">if</span> (<span class="highlight-number">0</span> != selectedWallIds.Count)
    {
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, selectedWallIds.Count.ToString() + <span class="highlight-literal">" Walls are selected!"</span>);
    }
    <span class="highlight-keyword">else</span>
    {
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,<span class="highlight-literal">"No Walls have been selected!"</span>);
    }
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> ChangeSelection(uidoc <span class="highlight-keyword">As</span> UIDocument)
    <span class="highlight-comment">' Get selected elements from current document.</span>
    <span class="highlight-keyword">Dim</span> selectedIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = uidoc.Selection.GetElementIds()

    <span class="highlight-comment">' Display current number of selected elements</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Number of selected elements: "</span> &amp; selectedIds.Count.ToString())

    <span class="highlight-comment">' Go through the selected items and filter out walls only.</span>
    <span class="highlight-keyword">Dim</span> selectedWallIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> ElementId)()

    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> selectedIds
        <span class="highlight-keyword">Dim</span> elements <span class="highlight-keyword">As</span> Element = uidoc.Document.GetElement(id)
        <span class="highlight-keyword">If</span> <span class="highlight-keyword">TypeOf</span> elements <span class="highlight-keyword">Is</span> Wall <span class="highlight-keyword">Then</span>
            selectedWallIds.Add(id)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-comment">' Set the created element set as current select element set.</span>
    uidoc.Selection.SetElementIds(selectedWallIds)

    <span class="highlight-comment">' Give the user some information.</span>
    <span class="highlight-keyword">If</span> <span class="highlight-number">0</span> &lt;&gt; selectedWallIds.Count <span class="highlight-keyword">Then</span>
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, selectedWallIds.Count.ToString() &amp; <span class="highlight-literal">" Walls are selected!"</span>)
    <span class="highlight-keyword">Else</span>
        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"No Walls have been selected!"</span>)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="31b73d46-7d67-5dbb-4dad-80aa597c9afc.htm">Selection Class</a></div><div class="seeAlsoStyle"><a href="11785869-cc9e-03fc-97db-767a59af10a1.htm">Autodesk.Revit.UI.Selection Namespace</a></div></div></div></div>
