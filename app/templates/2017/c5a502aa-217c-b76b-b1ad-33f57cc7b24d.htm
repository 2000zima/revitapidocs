{% macro header() %}<title>MaterialId Property </title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_chm" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="c5a502aa-217c-b76b-b1ad-33f57cc7b24d" /><meta name="guid" content="c5a502aa-217c-b76b-b1ad-33f57cc7b24d" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2017 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">CompoundStructureLayer<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>MaterialId Property </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="faece83a-6d49-41b0-2713-fe6cfaa5a3b5.htm">CompoundStructureLayer Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2017 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Id of the material assigned to this layer.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="identifier">MaterialId</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">MaterialId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">property</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="identifier">MaterialId</span> {
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">value</span>);
}</pre></td></tr></table></span></div><h4 class="subHeading">Field Value</h4>
   The default is InvalidElementId.
</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GetWallLayerMaterial(Autodesk.Revit.DB.Document document, Wall wall)
{
    <span class="highlight-comment">// get WallType of wall</span>
    WallType aWallType = wall.WallType;
    <span class="highlight-comment">// Only Basic Wall has compoundStructure</span>
    <span class="highlight-keyword">if</span> (WallKind.Basic == aWallType.Kind)
    {
        <span class="highlight-comment">// Get CompoundStructure</span>
        CompoundStructure comStruct = aWallType.GetCompoundStructure();
        Categories allCategories = document.Settings.Categories;

        <span class="highlight-comment">// Get the category OST_Walls default Material; </span>
        <span class="highlight-comment">// use if that layer's default Material is &lt;By Category&gt;</span>
        Category wallCategory = allCategories.get_Item(BuiltInCategory.OST_Walls);
        Autodesk.Revit.DB.Material wallMaterial = wallCategory.Material;

        <span class="highlight-keyword">foreach</span> (CompoundStructureLayer structLayer <span class="highlight-keyword">in</span> comStruct.GetLayers())
        {
            Autodesk.Revit.DB.Material layerMaterial = document.GetElement(structLayer.MaterialId) <span class="highlight-keyword">as</span> Material;

            <span class="highlight-comment">// If CompoundStructureLayer's Material is specified, use default</span>
            <span class="highlight-comment">// Material of its Category</span>
            <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == layerMaterial)
            {
                <span class="highlight-keyword">switch</span> (structLayer.Function)
                {
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Finish1:
                        layerMaterial =
                            allCategories.get_Item(BuiltInCategory.OST_WallsFinish1).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Finish2:
                        layerMaterial =
                            allCategories.get_Item(BuiltInCategory.OST_WallsFinish2).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Membrane:
                        layerMaterial =
                            allCategories.get_Item(BuiltInCategory.OST_WallsMembrane).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Structure:
                        layerMaterial =
                            allCategories.get_Item(BuiltInCategory.OST_WallsStructure).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Substrate:
                        layerMaterial =
                            allCategories.get_Item(BuiltInCategory.OST_WallsSubstrate).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">case</span> MaterialFunctionAssignment.Insulation:
                        layerMaterial =
                            allCategories.get_Item(BuiltInCategory.OST_WallsInsulation).Material;
                        <span class="highlight-keyword">break</span>;
                    <span class="highlight-keyword">default</span>:
                        <span class="highlight-comment">// It is impossible to reach here</span>
                        <span class="highlight-keyword">break</span>;
                }
                <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == layerMaterial)
                {
                    <span class="highlight-comment">// CompoundStructureLayer's default Material is its SubCategory</span>
                    layerMaterial = wallMaterial;
                }
            }
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,<span class="highlight-literal">"Layer Material: "</span> + layerMaterial);
        }
    }
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> GetWallLayerMaterial(document <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Document, wall <span class="highlight-keyword">As</span> Wall)
    <span class="highlight-comment">' get WallType of wall</span>
    <span class="highlight-keyword">Dim</span> aWallType <span class="highlight-keyword">As</span> WallType = wall.WallType
    <span class="highlight-comment">' Only Basic Wall has compoundStructure</span>
    <span class="highlight-keyword">If</span> WallKind.Basic = aWallType.Kind <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' Get CompoundStructure</span>
        <span class="highlight-keyword">Dim</span> comStruct <span class="highlight-keyword">As</span> CompoundStructure = aWallType.GetCompoundStructure()
        <span class="highlight-keyword">Dim</span> allCategories <span class="highlight-keyword">As</span> Categories = document.Settings.Categories

        <span class="highlight-comment">' Get the category OST_Walls default Material; </span>
        <span class="highlight-comment">' use if that layer's default Material is &lt;By Category&gt;</span>
        <span class="highlight-keyword">Dim</span> wallCategory <span class="highlight-keyword">As</span> Category = allCategories.Item(BuiltInCategory.OST_Walls)
        <span class="highlight-keyword">Dim</span> wallMaterial <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Material = wallCategory.Material

        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> structLayer <span class="highlight-keyword">As</span> CompoundStructureLayer <span class="highlight-keyword">In</span> comStruct.GetLayers()
            <span class="highlight-keyword">Dim</span> layerMaterial <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Material = <span class="highlight-keyword">TryCast</span>(document.GetElement(structLayer.MaterialId), Material)

            <span class="highlight-comment">' If CompoundStructureLayer's Material is specified, use default</span>
            <span class="highlight-comment">' Material of its Category</span>
            <span class="highlight-keyword">If</span> layerMaterial <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> structLayer.[<span class="highlight-keyword">Function</span>]
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Finish1
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsFinish1).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Finish2
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsFinish2).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Membrane
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsMembrane).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.[<span class="highlight-keyword">Structure</span>]
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsStructure).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Substrate
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsSubstrate).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> MaterialFunctionAssignment.Insulation
                        layerMaterial = allCategories.Item(BuiltInCategory.OST_WallsInsulation).Material
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                    <span class="highlight-keyword">Case</span> <span class="highlight-keyword">Else</span>
                        <span class="highlight-comment">' It is impossible to reach here</span>
                        <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>
                <span class="highlight-keyword">If</span> layerMaterial <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
                    <span class="highlight-comment">' CompoundStructureLayer's default Material is its SubCategory</span>
                    layerMaterial = wallMaterial
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
            TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, <span class="highlight-literal">"Layer Material: "</span> &amp; layerMaterial.ToString())
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
   When setting this property: A non-optional argument was NULL
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="faece83a-6d49-41b0-2713-fe6cfaa5a3b5.htm">CompoundStructureLayer Class</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
