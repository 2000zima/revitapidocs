{% macro header() %}<title>View Class</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="fb92a4e7-f3a7-ef14-e631-342179b18de9" /><meta name="guid" content="fb92a4e7-f3a7-ef14-e631-342179b18de9" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2017 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">View Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="d8d64cdb-46b7-6486-7cb5-07178b65a87b.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2017 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Base class for all types of views in Autodesk Revit.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">View</span> : <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">View</span> _
	<span class="keyword">Inherits</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">View</span> : <span class="keyword">public</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">
   A view can display an image produced from a Revit model.
   Views can be graphical (e.g. plans, elevations, or 3D views)
   or textual (e.g. schedules). Views keep track of Elements that can be seen in them.
</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> Getinfo_View(Autodesk.Revit.DB.View view)
{
    <span class="highlight-keyword">string</span> message = <span class="highlight-literal">"View: "</span>;

    <span class="highlight-comment">//get the name of the view</span>
    message += <span class="highlight-literal">"\nView name: "</span> + view.ViewName;

    <span class="highlight-comment">//The crop box sets display bounds of the view</span>
    BoundingBoxXYZ cropBox = view.CropBox;
    XYZ max = cropBox.Max; <span class="highlight-comment">//Maximum coordinates (upper-right-front corner of the box).</span>
    XYZ min = cropBox.Min; <span class="highlight-comment">//Minimum coordinates (lower-left-rear corner of the box).</span>
    message += <span class="highlight-literal">"\nCrop Box: "</span>;
    message += <span class="highlight-literal">"\nMaximum coordinates: ("</span> + max.X + <span class="highlight-literal">", "</span> + max.Y + <span class="highlight-literal">", "</span> + max.Z + <span class="highlight-literal">")"</span>;
    message += <span class="highlight-literal">"\nMinimum coordinates: ("</span> + min.X + <span class="highlight-literal">", "</span> + min.Y + <span class="highlight-literal">", "</span> + min.Z + <span class="highlight-literal">")"</span>;


   <span class="highlight-comment">//get the origin of the screen</span>
    XYZ origin = view.Origin;
    message += <span class="highlight-literal">"\nOrigin: ("</span> + origin.X + <span class="highlight-literal">", "</span> + origin.Y + <span class="highlight-literal">", "</span> + origin.Z + <span class="highlight-literal">")"</span>;


    <span class="highlight-comment">//The bounds of the view in paper space (in inches).</span>
    BoundingBoxUV outline = view.Outline;
    UV maxUv = outline.Max; <span class="highlight-comment">//Maximum coordinates (upper-right corner of the box).</span>
    UV minUv = outline.Min; <span class="highlight-comment">//Minimum coordinates (lower-left corner of the box).</span>
    message += <span class="highlight-literal">"\nOutline: "</span>;
    message += <span class="highlight-literal">"\nMaximum coordinates: ("</span> + maxUv.U + <span class="highlight-literal">", "</span> + maxUv.V + <span class="highlight-literal">")"</span>;
    message += <span class="highlight-literal">"\nMinimum coordinates: ("</span> + minUv.U + <span class="highlight-literal">", "</span> + minUv.V + <span class="highlight-literal">")"</span>;

    <span class="highlight-comment">//The direction towards the right side of the screen</span>
    XYZ rightDirection = view.RightDirection;
    message += <span class="highlight-literal">"\nRight direction: ("</span> + rightDirection.X + <span class="highlight-literal">", "</span> +
                   rightDirection.Y + <span class="highlight-literal">", "</span> + rightDirection.Z + <span class="highlight-literal">")"</span>;

    <span class="highlight-comment">//The direction towards the top of the screen</span>
    XYZ upDirection = view.UpDirection;
    message += <span class="highlight-literal">"\nUp direction: ("</span> + upDirection.X + <span class="highlight-literal">", "</span> +
                   upDirection.Y + <span class="highlight-literal">", "</span> + upDirection.Z + <span class="highlight-literal">")"</span>;

    <span class="highlight-comment">//The direction towards the viewer</span>
    XYZ viewDirection = view.ViewDirection;
    message += <span class="highlight-literal">"\nView direction: ("</span> + viewDirection.X + <span class="highlight-literal">", "</span> +
                   viewDirection.Y + <span class="highlight-literal">", "</span> + viewDirection.Z + <span class="highlight-literal">")"</span>;

    <span class="highlight-comment">//The scale of the view</span>
    message += <span class="highlight-literal">"\nScale: "</span> + view.Scale;
    <span class="highlight-comment">// Scale is meaningless for Schedules</span>
    <span class="highlight-keyword">if</span> (view.ViewType != ViewType.Schedule)
    {
        <span class="highlight-keyword">int</span> testScale = <span class="highlight-number">5</span>;
        <span class="highlight-comment">//set the scale of the view</span>
        view.Scale = testScale;
        message += <span class="highlight-literal">"\nScale after set: "</span> + view.Scale;
    }

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,message);
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> Getinfo_View(view <span class="highlight-keyword">As</span> Autodesk.Revit.DB.View)
   <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">"View: "</span>

   <span class="highlight-comment">'get the name of the view</span>
   message += vbLf &amp; <span class="highlight-literal">"View name: "</span> &amp; Convert.ToString(view.ViewName)

   <span class="highlight-comment">'The crop box sets display bounds of the view</span>
   <span class="highlight-keyword">Dim</span> cropBox <span class="highlight-keyword">As</span> BoundingBoxXYZ = view.CropBox
   <span class="highlight-keyword">Dim</span> max <span class="highlight-keyword">As</span> XYZ = cropBox.Max
   <span class="highlight-comment">'Maximum coordinates (upper-right-front corner of the box).</span>
   <span class="highlight-keyword">Dim</span> min <span class="highlight-keyword">As</span> XYZ = cropBox.Min
   <span class="highlight-comment">'Minimum coordinates (lower-left-rear corner of the box).</span>
   message += vbLf &amp; <span class="highlight-literal">"Crop Box: "</span>
   message += ((vbLf &amp; <span class="highlight-literal">"Maximum coordinates: ("</span> + max.X &amp; <span class="highlight-literal">", "</span>) + max.Y &amp; <span class="highlight-literal">", "</span>) + max.Z &amp; <span class="highlight-literal">")"</span>
   message += ((vbLf &amp; <span class="highlight-literal">"Minimum coordinates: ("</span> + min.X &amp; <span class="highlight-literal">", "</span>) + min.Y &amp; <span class="highlight-literal">", "</span>) + min.Z &amp; <span class="highlight-literal">")"</span>


   <span class="highlight-comment">'get the origin of the screen</span>
   <span class="highlight-keyword">Dim</span> origin <span class="highlight-keyword">As</span> XYZ = view.Origin
   message += ((vbLf &amp; <span class="highlight-literal">"Origin: ("</span> + origin.X &amp; <span class="highlight-literal">", "</span>) + origin.Y &amp; <span class="highlight-literal">", "</span>) + origin.Z &amp; <span class="highlight-literal">")"</span>


   <span class="highlight-comment">'The bounds of the view in paper space (in inches).</span>
   <span class="highlight-keyword">Dim</span> outline <span class="highlight-keyword">As</span> BoundingBoxUV = view.Outline
   <span class="highlight-keyword">Dim</span> maxUv <span class="highlight-keyword">As</span> UV = outline.Max
   <span class="highlight-comment">'Maximum coordinates (upper-right corner of the box).</span>
   <span class="highlight-keyword">Dim</span> minUv <span class="highlight-keyword">As</span> UV = outline.Min
   <span class="highlight-comment">'Minimum coordinates (lower-left corner of the box).</span>
   message += vbLf &amp; <span class="highlight-literal">"Outline: "</span>
   message += (vbLf &amp; <span class="highlight-literal">"Maximum coordinates: ("</span> + maxUv.U &amp; <span class="highlight-literal">", "</span>) + maxUv.V &amp; <span class="highlight-literal">")"</span>
   message += (vbLf &amp; <span class="highlight-literal">"Minimum coordinates: ("</span> + minUv.U &amp; <span class="highlight-literal">", "</span>) + minUv.V &amp; <span class="highlight-literal">")"</span>

   <span class="highlight-comment">'The direction towards the right side of the screen</span>
   <span class="highlight-keyword">Dim</span> rightDirection <span class="highlight-keyword">As</span> XYZ = view.RightDirection
   message += ((vbLf &amp; <span class="highlight-literal">"Right direction: ("</span> + rightDirection.X &amp; <span class="highlight-literal">", "</span>) + rightDirection.Y &amp; <span class="highlight-literal">", "</span>) + rightDirection.Z &amp; <span class="highlight-literal">")"</span>

   <span class="highlight-comment">'The direction towards the top of the screen</span>
   <span class="highlight-keyword">Dim</span> upDirection <span class="highlight-keyword">As</span> XYZ = view.UpDirection
   message += ((vbLf &amp; <span class="highlight-literal">"Up direction: ("</span> + upDirection.X &amp; <span class="highlight-literal">", "</span>) + upDirection.Y &amp; <span class="highlight-literal">", "</span>) + upDirection.Z &amp; <span class="highlight-literal">")"</span>

   <span class="highlight-comment">'The direction towards the viewer</span>
   <span class="highlight-keyword">Dim</span> viewDirection <span class="highlight-keyword">As</span> XYZ = view.ViewDirection
   message += ((vbLf &amp; <span class="highlight-literal">"View direction: ("</span> + viewDirection.X &amp; <span class="highlight-literal">", "</span>) + viewDirection.Y &amp; <span class="highlight-literal">", "</span>) + viewDirection.Z &amp; <span class="highlight-literal">")"</span>

   <span class="highlight-comment">'The scale of the view</span>
   message += vbLf &amp; <span class="highlight-literal">"Scale: "</span> &amp; Convert.ToString(view.Scale)
   <span class="highlight-comment">' Scale is meaningless for Schedules</span>
   <span class="highlight-keyword">If</span> view.ViewType &lt;&gt; ViewType.Schedule <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Dim</span> testScale <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">5</span>
      <span class="highlight-comment">'set the scale of the view</span>
      view.Scale = testScale
      message += vbLf &amp; <span class="highlight-literal">"Scale after set: "</span> &amp; Convert.ToString(view.Scale)
   <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

   TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</a><br />  <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Element</a><br />    <span class="selflink">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>View</span><br />      <a href="ba608411-21af-e924-2aa2-3595548ab39f.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>TableView</a><br />      <a href="d795a238-fc24-1875-e64f-a2bef56ae949.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>View3D</a><br />      <a href="d0876cac-a93b-b89c-fa30-bcc14ab9d7f0.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ViewDrafting</a><br />      <a href="0520580a-74ec-ed8c-35ea-5274c42276a3.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ViewPlan</a><br />      <a href="fcc75682-bd99-a97d-5a4d-0f8eb9e92ab5.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ViewSection</a><br />      <a href="af2ee879-173d-df3a-9793-8d5750a17b49.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ViewSheet</a><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="d8d64cdb-46b7-6486-7cb5-07178b65a87b.htm">View Members</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>