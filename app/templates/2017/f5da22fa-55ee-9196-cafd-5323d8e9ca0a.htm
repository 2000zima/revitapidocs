{% macro header() %}<title>TransactWithCentralOptions Class</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="f5da22fa-55ee-9196-cafd-5323d8e9ca0a" /><meta name="guid" content="f5da22fa-55ee-9196-cafd-5323d8e9ca0a" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2017 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">TransactWithCentralOptions Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="a382b180-be52-6fa7-dfe1-b478ccc6ed5f.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2017 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Options to customize Revit behavior when accessing the central model.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)<br /><b>Since:</b> 
   2014
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">TransactWithCentralOptions</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">TransactWithCentralOptions</span> _
	<span class="keyword">Implements</span> <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">TransactWithCentralOptions</span> : <a href="http://msdn2.microsoft.com/en-us/library/aax125c9" target="_blank">IDisposable</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> SynchWithCentralWithMessage(Document doc)
{
    <span class="highlight-comment">// Checkout workset (for use with "keep checked out worksets" option later)</span>
    FilteredWorksetCollector fwc = <span class="highlight-keyword">new</span> FilteredWorksetCollector(doc);
    fwc.OfKind(WorksetKind.UserWorkset);
    Workset workset1 = fwc.First&lt;Workset&gt;(ws =&gt; ws.Name == <span class="highlight-literal">"Workset1"</span>);

    WorksharingUtils.CheckoutWorksets(doc, <span class="highlight-keyword">new</span> WorksetId[] { workset1.Id });

    <span class="highlight-comment">// Make a change</span>
    <span class="highlight-keyword">using</span> (Transaction t = <span class="highlight-keyword">new</span> Transaction(doc, <span class="highlight-literal">"Add Level"</span>))
    {
        t.Start();
        Level.Create(doc, <span class="highlight-number">100</span>);
        t.Commit();
    }

    <span class="highlight-comment">// Tell user what we're doing</span>
    TaskDialog td = <span class="highlight-keyword">new</span> TaskDialog(<span class="highlight-literal">"Alert"</span>);
    td.MainInstruction = <span class="highlight-literal">"Application 'Automatic element creator' has made changes and is prepared to synchronize with central."</span>;
    td.MainContent = <span class="highlight-literal">"This will update central with all changes currently made in the project by the application or by the user.  This operation "</span> +
                     <span class="highlight-literal">"may take some time depending on the number of changes made by the app and by the user."</span>;

    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink1, <span class="highlight-literal">"Do not synchronize at this time."</span>);
    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink2, <span class="highlight-literal">"Synchronize and relinquish all elements."</span>);
    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink3, <span class="highlight-literal">"Synchronize but keep checked out worksets."</span>);
    td.DefaultButton = TaskDialogResult.CommandLink1;

    TaskDialogResult result = td.Show();

    <span class="highlight-keyword">switch</span> (result)
    {
        <span class="highlight-keyword">case</span> TaskDialogResult.CommandLink1:
        <span class="highlight-keyword">default</span>:
            {
                <span class="highlight-comment">// Do not synch.  Nothing to do.</span>
                <span class="highlight-keyword">break</span>;
            }
        <span class="highlight-keyword">case</span> TaskDialogResult.CommandLink2:
        <span class="highlight-keyword">case</span> TaskDialogResult.CommandLink3:
            {
                <span class="highlight-comment">// Prepare to synch</span>
                <span class="highlight-comment">// TransactWithCentralOptions has to do with the behavior related to locked or busy central models.</span>
                <span class="highlight-comment">// We'll use the default behavior.</span>
                TransactWithCentralOptions twcOpts = <span class="highlight-keyword">new</span> TransactWithCentralOptions();

                <span class="highlight-comment">// Setup synch-with-central options (add a comment about our change)</span>
                SynchronizeWithCentralOptions swcOpts = <span class="highlight-keyword">new</span> SynchronizeWithCentralOptions();
                swcOpts.Comment = <span class="highlight-literal">"Synchronized by 'Automatic element creator' with user acceptance."</span>;

                <span class="highlight-keyword">if</span> (result == TaskDialogResult.CommandLink3)
                {
                    <span class="highlight-comment">// Setup relinquish options to keep user worksets checked out</span>
                    RelinquishOptions rOptions = <span class="highlight-keyword">new</span> RelinquishOptions(<span class="highlight-keyword">true</span>);
                    rOptions.UserWorksets = <span class="highlight-keyword">false</span>;
                    swcOpts.SetRelinquishOptions(rOptions);
                }

                doc.SynchronizeWithCentral(twcOpts, swcOpts);

                <span class="highlight-keyword">break</span>;
            }
    }
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> SynchWithCentralWithMessage(doc <span class="highlight-keyword">As</span> Document)
    <span class="highlight-comment">' Checkout workset (for use with "keep checked out worksets" option later)</span>
    <span class="highlight-keyword">Dim</span> fwc <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredWorksetCollector(doc)
    fwc.OfKind(WorksetKind.UserWorkset)
    <span class="highlight-keyword">Dim</span> workset1 <span class="highlight-keyword">As</span> Workset = fwc.First(<span class="highlight-keyword">Function</span>(ws) ws.Name = <span class="highlight-literal">"Workset1"</span>)

    WorksharingUtils.CheckoutWorksets(doc, <span class="highlight-keyword">New</span> WorksetId() {workset1.Id})

    <span class="highlight-comment">' Make a change</span>
    <span class="highlight-keyword">Using</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Transaction(doc, <span class="highlight-literal">"Add Level"</span>)
        t.Start()
        Level.Create(doc, <span class="highlight-number">100</span>)
        t.Commit()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Using</span>

    <span class="highlight-comment">' Tell user what we're doing</span>
    <span class="highlight-keyword">Dim</span> td <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TaskDialog(<span class="highlight-literal">"Alert"</span>)
    td.MainInstruction = <span class="highlight-comment">"Application 'Automatic element creator' has made changes and is prepared to synchronize with central."</span>
    td.MainContent = <span class="highlight-literal">"This will update central with all changes currently made in the project by the application or by the user.  This operation "</span> + <span class="highlight-literal">"may take some time depending on the number of changes made by the app and by the user."</span>

    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink1, <span class="highlight-literal">"Do not synchronize at this time."</span>)
    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink2, <span class="highlight-literal">"Synchronize and relinquish all elements."</span>)
    td.AddCommandLink(TaskDialogCommandLinkId.CommandLink3, <span class="highlight-literal">"Synchronize but keep checked out worksets."</span>)
    td.DefaultButton = TaskDialogResult.CommandLink1

    <span class="highlight-keyword">Dim</span> result <span class="highlight-keyword">As</span> TaskDialogResult = td.Show()

    <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> result
        <span class="highlight-keyword">Case</span> TaskDialogResult.CommandLink1
            <span class="highlight-keyword">If</span> <span class="highlight-keyword">True</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' Do not synch.  Nothing to do.</span>
                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Case</span> TaskDialogResult.CommandLink2, TaskDialogResult.CommandLink3
            <span class="highlight-keyword">If</span> <span class="highlight-keyword">True</span> <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' Prepare to synch</span>
                <span class="highlight-comment">' TransactWithCentralOptions has to do with the behavior related to locked or busy central models.</span>
                <span class="highlight-comment">' We'll use the default behavior.</span>
                <span class="highlight-keyword">Dim</span> twcOpts <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TransactWithCentralOptions()

                <span class="highlight-comment">' Setup synch-with-central options (add a comment about our change)</span>
                <span class="highlight-keyword">Dim</span> swcOpts <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> SynchronizeWithCentralOptions()
                swcOpts.Comment = <span class="highlight-comment">"Synchronized by 'Automatic element creator' with user acceptance."</span>

                <span class="highlight-keyword">If</span> result = TaskDialogResult.CommandLink3 <span class="highlight-keyword">Then</span>
                    <span class="highlight-comment">' Setup relinquish options to keep user worksets checked out</span>
                    <span class="highlight-keyword">Dim</span> rOptions <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> RelinquishOptions(<span class="highlight-keyword">True</span>)
                    rOptions.UserWorksets = <span class="highlight-keyword">False</span>
                    swcOpts.SetRelinquishOptions(rOptions)
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

                doc.SynchronizeWithCentral(twcOpts, swcOpts)

                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</a><br />  <span class="selflink">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>TransactWithCentralOptions</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="a382b180-be52-6fa7-dfe1-b478ccc6ed5f.htm">TransactWithCentralOptions Members</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
