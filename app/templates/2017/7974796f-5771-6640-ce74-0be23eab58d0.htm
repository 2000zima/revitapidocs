{% macro header() %}<title>SetFormula Method </title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="7974796f-5771-6640-ce74-0be23eab58d0" /><meta name="guid" content="7974796f-5771-6640-ce74-0be23eab58d0" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2017 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">GlobalParameter<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>SetFormula Method </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="b0e53a4a-84ad-abb4-358d-9797870f101b.htm">GlobalParameter Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2017 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Sets a formula expression for this parameter.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)<br /><b>Since:</b> 
   2016 Subscription Update
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SetFormula</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">string</a> <span class="parameter">expression</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">SetFormula</span> ( _
	<span class="parameter">expression</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a> _
)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">SetFormula</span>(
	<a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">String</a>^ <span class="parameter">expression</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="expression"><dt><span class="parameter">expression</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>String</a><br />
   Valid formula string.
</dd></dl></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">
   An assigned expression will compute the parameter's actual value.
   <p>In order to set a formula, the global parameter must be non-reporting. Therefore
   a reporting parameter must be changed to non-reporting first before assigning a formula.
   </p><p>
   Value of the evaluated formula must be compatible with the value-type of the parameter.
   For example, it is permitted  to use <b>Integer</b> parameters in a formula assigned to
   a Double (<b>Number</b>) parameter, or vice versa. It is not allowed, however, to use
   <b>Length</b> or <b>Angle</b> arguments in a formula in a parameter of which type is ether
   <b>Integer</b> or <b>Number</b>. To test whether a formula is valid for a global parameter,
   the method <a href="50c83d89-22da-4398-bba8-197345f76192.htm">IsValidFormula(String)</a> can be used.
   </p><p>
   An empty string can be used to remove an existing formula. When a formula is removed,
   the parameter retains its value as it was previously computed using the formula.
   </p><p>
   Formulas may include all standard arithmetic operations and logical operations (as functions <b>and</b>,
   <b>or</b>, <b>not</b>.) Input to logical operations must be Boolean values (parameters of <b>YesNo</b> type).
   Consequently, arithmetic operations can be applied to numeric values only. While there are no operations
   supported for string (text) arguments, strings can be used as results of a logical <b>If</b> operation.</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Create global parameters and then set a formula to one so it has a value of</span>
<span class="highlight-comment">/// either of two other parameters depending on the boolean value of the forth one.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="document"&gt;Revit project document in which we create global parameters.&lt;/param&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> SetCombinationParameters(Document document)
{
    GlobalParameter gpB = <span class="highlight-keyword">null</span>;
    GlobalParameter gpT = <span class="highlight-keyword">null</span>;
    GlobalParameter gpF = <span class="highlight-keyword">null</span>;
    GlobalParameter gpX = <span class="highlight-keyword">null</span>;

    <span class="highlight-keyword">int</span> TRUE = <span class="highlight-number">1</span>;
    <span class="highlight-keyword">int</span> FALSE = <span class="highlight-number">0</span>;

    <span class="highlight-comment">// transaction to create global parameters and set their values</span>
    <span class="highlight-keyword">using</span> (Transaction trans = <span class="highlight-keyword">new</span> Transaction(document, <span class="highlight-literal">"Creating global parameters"</span>))
    {
        <span class="highlight-comment">// create 4 new global parameters</span>

        trans.Start();

        gpB = GlobalParameter.Create(document, <span class="highlight-literal">"GPB"</span>, ParameterType.YesNo);
        gpT = GlobalParameter.Create(document, <span class="highlight-literal">"GPT"</span>, ParameterType.Text);
        gpF = GlobalParameter.Create(document, <span class="highlight-literal">"GPF"</span>, ParameterType.Text);
        gpX = GlobalParameter.Create(document, <span class="highlight-literal">"GPX"</span>, ParameterType.Text);

        <span class="highlight-comment">// assign initial values and a formula to the global parameters</span>

        gpB.SetValue(<span class="highlight-keyword">new</span> IntegerParameterValue(TRUE));
        gpT.SetValue(<span class="highlight-keyword">new</span> StringParameterValue(<span class="highlight-literal">"TypeA"</span>));
        gpF.SetValue(<span class="highlight-keyword">new</span> StringParameterValue(<span class="highlight-literal">"TypeB"</span>));

        <span class="highlight-comment">// Set the formula to GPX so that its final value is either the value of GPT (TypeA)</span>
        <span class="highlight-comment">// or GPF (TypeB) depending on whether the value of GPB is True or False.</span>
        <span class="highlight-comment">// Note: in this particular case we are certain the formula is valid, but if weren't </span>
        <span class="highlight-comment">// certain, we could use a validation method as we are now going to illustrate here:</span>
        <span class="highlight-keyword">string</span> expression = <span class="highlight-literal">"if(GPB,GPT,GPF)"</span>; <span class="highlight-comment">// XPX &lt;== if (GPB == TRUE) then GPT else GPF</span>
        <span class="highlight-keyword">if</span> (gpX.IsValidFormula(expression))
        {
            gpX.SetFormula(expression);
        }

        trans.Commit();
    }

    <span class="highlight-comment">// we can test that the formula works</span>
    <span class="highlight-comment">// since the boolean value is TRUE, the value of the GPX parameter</span>
    <span class="highlight-comment">// should be the same as the value of the GPT parameters</span>

    StringParameterValue sTrue = gpT.GetValue() <span class="highlight-keyword">as</span> StringParameterValue;
    StringParameterValue sFalse = gpF.GetValue() <span class="highlight-keyword">as</span> StringParameterValue;
    StringParameterValue sValue = gpX.GetValue() <span class="highlight-keyword">as</span> StringParameterValue;

    <span class="highlight-keyword">if</span> (sValue.Value != sTrue.Value)
    {
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Unexpected value of a global parameter"</span>);
    }

    <span class="highlight-comment">// we can also test that evaluation of the formula is affected by changes</span>

    <span class="highlight-keyword">using</span> (Transaction trans = <span class="highlight-keyword">new</span> Transaction(document, <span class="highlight-literal">"Change value of a YesNo parameter"</span>))
    {
        trans.Start();
        gpB.SetValue(<span class="highlight-keyword">new</span> IntegerParameterValue(FALSE));
        trans.Commit();
    }

    sValue = gpX.GetValue() <span class="highlight-keyword">as</span> StringParameterValue;

    <span class="highlight-keyword">if</span> (sValue.Value != sFalse.Value)
    {
        TaskDialog.Show(<span class="highlight-literal">"Error"</span>, <span class="highlight-literal">"Unexpected value of a global parameter"</span>);
    }

}</pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentException</a></td><td>
   The given expression argument is not valid as a formula for this parameter.
</td></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
   A non-optional argument was NULL
</td></tr><tr><td><a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>InvalidOperationException</a></td><td>
   This is a non-reporting global parameter. As such it does not allow the current operation.
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="b0e53a4a-84ad-abb4-358d-9797870f101b.htm">GlobalParameter Class</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>
