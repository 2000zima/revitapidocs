{% macro header() %}<title>DialogBoxShowing Event</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.UI" /><meta name="file" content="cb46ea4c-2b80-0ec2-063f-dda6f662948a" /><meta name="guid" content="cb46ea4c-2b80-0ec2-063f-dda6f662948a" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2017 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">UIApplication<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>DialogBoxShowing Event</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="51ca80e2-3e5f-7dd2-9d95-f210950c72ae.htm">UIApplication Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2017 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Subscribe to the DialogBoxShowing event to be notified when Revit is just about to show a dialog box or a message box.
</div><p /><b>Namespace:</b> <a href="e86fd90a-8957-02a6-da7f-ced248966e3e.htm">Autodesk.Revit.UI</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPIUI</span> (in RevitAPIUI.dll) Version: 17.0.0.0 (17.0.484.0)<br /><b>Since:</b> 
   2010
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> event <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="8b6b969f-45d2-5b90-ca6d-593348ddf8d4.htm">DialogBoxShowingEventArgs</a>&gt; <span class="identifier">DialogBoxShowing</span></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> Event <span class="identifier">DialogBoxShowing</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>(<span class="keyword">Of</span> <a href="8b6b969f-45d2-5b90-ca6d-593348ddf8d4.htm">DialogBoxShowingEventArgs</a>)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
 <span class="keyword">event</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="8b6b969f-45d2-5b90-ca6d-593348ddf8d4.htm">DialogBoxShowingEventArgs</a>^&gt;^ <span class="identifier">DialogBoxShowing</span> {
	<span class="keyword">void</span> <span class="keyword">add</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="8b6b969f-45d2-5b90-ca6d-593348ddf8d4.htm">DialogBoxShowingEventArgs</a>^&gt;^ <span class="parameter">value</span>);
	<span class="keyword">void</span> <span class="keyword">remove</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="8b6b969f-45d2-5b90-ca6d-593348ddf8d4.htm">DialogBoxShowingEventArgs</a>^&gt;^ <span class="parameter">value</span>);
}</pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p>This event is raised when Revit is just about to show a dialog box or a message box.</p><p>Event is not cancellable. The 'Cancellable' property of event's argument is always False.</p><p>Depending on the type of the dialog that is being shown, the event's argument's type varies as follows:
   When it is a dialog box, the event's argument is an object of <a href="8b6b969f-45d2-5b90-ca6d-593348ddf8d4.htm">DialogBoxShowingEventArgs</a>.
   When it is a message box, the event's argument is an object of <a href="aa1b432c-e9b9-b528-aa3b-60514aaea2a3.htm">MessageBoxShowingEventArgs</a>,which is subclass of DialogBoxShowingEventArgs.
   When it is a task dialog, the event's argument is an object of <a href="96cc0900-708b-5a2c-8d07-b2596ec20700.htm">TaskDialogShowingEventArgs</a>,which is subclass of DialogBoxShowingEventArgs.</p><p>No document may be modified during this event.</p><p>The following API functions are not available for the current document during this event:
   <ul><li><a href="da2f27b9-7255-4950-82a2-86e1432ff9f0.htm">Close<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a> and similar overloads.</li><li><a href="8dec13b6-71f4-45d2-74e3-b109153721b5.htm">Save<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a> and similar overloads.</li><li><a href="25c44d4a-b220-5898-b28c-a2cf6a8a8673.htm">SaveAs(String)</a> and similar overloads.</li></ul></p><p>Exception <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a> will be thrown if any of the above methods is called during this event.</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Application_DialogBoxShowing : IExternalApplication
{
    <span class="highlight-comment">// Implement the OnStartup method to register events when Revit starts.</span>
    <span class="highlight-keyword">public</span> Result OnStartup(UIControlledApplication application)
    {
        <span class="highlight-comment">// Register related events</span>
        application.DialogBoxShowing +=
            <span class="highlight-keyword">new</span> EventHandler&lt;Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs&gt;(AppDialogShowing);
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-comment">// Implement this method to unregister the subscribed events when Revit exits.</span>
    <span class="highlight-keyword">public</span> Result OnShutdown(UIControlledApplication application)
    {
        <span class="highlight-comment">// unregister events</span>
        application.DialogBoxShowing -=
            <span class="highlight-keyword">new</span> EventHandler&lt;Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs&gt;(AppDialogShowing);
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-comment">// The DialogBoxShowing event handler, which allow you to </span>
    <span class="highlight-comment">// do some work before the dialog shows</span>
    <span class="highlight-keyword">void</span> AppDialogShowing(<span class="highlight-keyword">object</span> sender, DialogBoxShowingEventArgs args)
    {
        <span class="highlight-comment">// Get the string id of the showing dialog</span>
        String dialogId = args.DialogId;

        <span class="highlight-comment">// Format the prompt information string</span>
        String promptInfo = <span class="highlight-literal">"A Revit dialog will be opened.\n"</span>;
        promptInfo += <span class="highlight-literal">"The DialogId of this dialog is "</span> + dialogId + <span class="highlight-literal">"\n"</span>;
        promptInfo += <span class="highlight-literal">"If you don't want the dialog to open, please press cancel button"</span>;

        <span class="highlight-comment">// Show the prompt message, and allow the user to close the dialog directly.</span>
        TaskDialog taskDialog = <span class="highlight-keyword">new</span> TaskDialog(<span class="highlight-literal">"Revit"</span>);
        taskDialog.Id = <span class="highlight-literal">"Customer DialogId"</span>;
        taskDialog.MainContent = promptInfo;
        TaskDialogCommonButtons buttons = TaskDialogCommonButtons.Ok |
                                            TaskDialogCommonButtons.Cancel;
        taskDialog.CommonButtons = buttons;
        TaskDialogResult result = taskDialog.Show();
        <span class="highlight-keyword">if</span> (TaskDialogResult.Cancel == result)
        {
            <span class="highlight-comment">// Do not show the Revit dialog</span>
            args.OverrideResult(<span class="highlight-number">1</span>);
        }
        <span class="highlight-keyword">else</span>
        {
            <span class="highlight-comment">// Continue to show the Revit dialog</span>
            args.OverrideResult(<span class="highlight-number">0</span>);
        }
    }
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> Application_DialogBoxShowing
    <span class="highlight-keyword">Implements</span> IExternalApplication
    <span class="highlight-comment">' Implement the OnStartup method to register events when Revit starts.</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnStartup(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnStartup
        <span class="highlight-comment">' Register related events</span>
        <span class="highlight-keyword">AddHandler</span> application.DialogBoxShowing, <span class="highlight-keyword">AddressOf</span> AppDialogShowing
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-comment">' Implement this method to unregister the subscribed events when Revit exits.</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnShutdown(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnShutdown
        <span class="highlight-comment">' unregister events</span>
        <span class="highlight-keyword">RemoveHandler</span> application.DialogBoxShowing, <span class="highlight-keyword">AddressOf</span> AppDialogShowing
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-comment">' The DialogBoxShowing event handler, which allow you to </span>
    <span class="highlight-comment">' do some work before the dialog shows</span>
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> AppDialogShowing(sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, args <span class="highlight-keyword">As</span> DialogBoxShowingEventArgs)
        <span class="highlight-comment">' Get the string id of the showing dialog</span>
        <span class="highlight-keyword">Dim</span> dialogId <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = args.DialogId

        <span class="highlight-comment">' Format the prompt information string</span>
        <span class="highlight-keyword">Dim</span> promptInfo <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>] = <span class="highlight-literal">"A Revit dialog will be opened."</span> &amp; vbLf
        promptInfo += <span class="highlight-literal">"The DialogId of this dialog is "</span> &amp; dialogId &amp; vbLf
        promptInfo += <span class="highlight-literal">"If you don't want the dialog to open, please press cancel button"</span>

        <span class="highlight-comment">' Show the prompt message, and allow the user to close the dialog directly.</span>
        <span class="highlight-keyword">Dim</span> taskDialog <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TaskDialog(<span class="highlight-literal">"Revit"</span>)
        taskDialog.Id = <span class="highlight-literal">"Customer DialogId"</span>
        taskDialog.MainContent = promptInfo
        <span class="highlight-keyword">Dim</span> buttons <span class="highlight-keyword">As</span> TaskDialogCommonButtons = TaskDialogCommonButtons.Ok <span class="highlight-keyword">Or</span> TaskDialogCommonButtons.Cancel
        taskDialog.CommonButtons = buttons
        <span class="highlight-keyword">Dim</span> result <span class="highlight-keyword">As</span> TaskDialogResult = taskDialog.Show()
        <span class="highlight-keyword">If</span> TaskDialogResult.Cancel = result <span class="highlight-keyword">Then</span>
            <span class="highlight-comment">' Do not show the Revit dialog</span>
            args.OverrideResult(<span class="highlight-number">1</span>)
        <span class="highlight-keyword">Else</span>
            <span class="highlight-comment">' Continue to show the Revit dialog</span>
            args.OverrideResult(<span class="highlight-number">0</span>)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="51ca80e2-3e5f-7dd2-9d95-f210950c72ae.htm">UIApplication Class</a></div><div class="seeAlsoStyle"><a href="e86fd90a-8957-02a6-da7f-ced248966e3e.htm">Autodesk.Revit.UI Namespace</a></div></div></div></div>
