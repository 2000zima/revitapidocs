{% macro header() %}<title>LineLoad Class</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_chm" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB.Structure" /><meta name="file" content="ee5ec273-350a-1cdb-d136-0c454bb1446a" /><meta name="guid" content="ee5ec273-350a-1cdb-d136-0c454bb1446a" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2017 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">LineLoad Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="2befc0dc-d2e7-7bb0-5779-2d98e0570c79.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2017 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   An object that represents a force/moment applied in a linear manner.
</div><p /><b>Namespace:</b> <a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">Autodesk.Revit.DB.Structure</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">LineLoad</span> : <a href="4130f6dc-1963-2105-d85b-e08a7c34af8b.htm">LoadBase</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">LineLoad</span> _
	<span class="keyword">Inherits</span> <a href="4130f6dc-1963-2105-d85b-e08a7c34af8b.htm">LoadBase</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">LineLoad</span> : <span class="keyword">public</span> <a href="4130f6dc-1963-2105-d85b-e08a7c34af8b.htm">LoadBase</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">
   The load/moment may be uniform or it may vary between the two ends of the line.
</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"> <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> LineLoadInformation(LineLoad lineLoad)
{
     StringBuilder information = <span class="highlight-keyword">new</span> StringBuilder(<span class="highlight-literal">"Line Load: "</span>);

     <span class="highlight-comment">// Get the load case name</span>
     information.Append(<span class="highlight-literal">"\nLoad case for load: "</span> + lineLoad.LoadCaseName);

     <span class="highlight-comment">//Get the three dimensional force applied to the start point and end point of the line load.</span>
     information.Append(<span class="highlight-literal">"\nForce at the start of this line load: "</span> + XYZToString(lineLoad.ForceVector1));
     information.Append(<span class="highlight-literal">"\nForce at the end of this line load: "</span> + XYZToString(lineLoad.ForceVector2));

     <span class="highlight-comment">//Get the three dimensional location of the start point and end point for the line load.</span>
     information.Append(<span class="highlight-literal">"\nStart point of this line load: "</span> + XYZToString(lineLoad.StartPoint));
     information.Append(<span class="highlight-literal">"\nEnd Point of this line load: "</span> + XYZToString(lineLoad.EndPoint));

     <span class="highlight-comment">//Get the three dimensional moment applied to the start point and end point of the line load.</span>
     information.Append(<span class="highlight-literal">"\nMoment at the start of this line load: "</span> + XYZToString(lineLoad.MomentVector1));
     information.Append(<span class="highlight-literal">"\nMoment at the end of this line load: "</span> + XYZToString(lineLoad.MomentVector2));

     <span class="highlight-comment">//Whether the load is projected or not</span>
     <span class="highlight-keyword">if</span> (lineLoad.IsProjected)
     {
         information.Append(<span class="highlight-literal">"\nThis line load is projected."</span>);
     }
     <span class="highlight-keyword">else</span>
     {
         information.Append(<span class="highlight-literal">"\nThis line load is not projected"</span>);
     }

     <span class="highlight-comment">//Report if the load is uniform</span>
     <span class="highlight-keyword">if</span> (<span class="highlight-keyword">false</span> != lineLoad.IsUniform)
     {
         information.Append(<span class="highlight-literal">"\nThis load is uniform."</span>);
     }
     <span class="highlight-keyword">else</span>
     {
         information.Append(<span class="highlight-literal">"\nThis load is not uniform."</span>);
     }

     <span class="highlight-comment">//show information of lineload in a MessageBox.</span>
     TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,information.ToString());
 }

 <span class="highlight-comment">// output the point's three coordinates</span>
 <span class="highlight-keyword">string</span> XYZToString(XYZ point)
 {
     <span class="highlight-keyword">return</span> <span class="highlight-literal">"("</span> + point.X + <span class="highlight-literal">", "</span> + point.Y + <span class="highlight-literal">", "</span> + point.Z + <span class="highlight-literal">")"</span>;
 }</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> LineLoadInformation(lineLoad <span class="highlight-keyword">As</span> LineLoad)
    <span class="highlight-keyword">Dim</span> information <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StringBuilder(<span class="highlight-literal">"Line Load: "</span>)

    <span class="highlight-comment">' Get the load case name</span>
    information.Append(vbLf &amp; <span class="highlight-literal">"Load case for load: "</span> &amp; Convert.ToString(lineLoad.LoadCaseName))

    <span class="highlight-comment">'Get the three dimensional force applied to the start point and end point of the line load.</span>
 information.Append(vbLf &amp; <span class="highlight-literal">"Force at the start of this line load: "</span> &amp; XYZToString(lineLoad.ForceVector1))
 information.Append(vbLf &amp; <span class="highlight-literal">"Force at the end of this line load: "</span> &amp; XYZToString(lineLoad.ForceVector2))

    <span class="highlight-comment">'Get the three dimensional location of the start point and end point for the line load.</span>
    information.Append(vbLf &amp; <span class="highlight-literal">"Start point of this line load: "</span> &amp; XYZToString(lineLoad.StartPoint))
    information.Append(vbLf &amp; <span class="highlight-literal">"End Point of this line load: "</span> &amp; XYZToString(lineLoad.EndPoint))

    <span class="highlight-comment">'Get the three dimensional moment applied to the start point and end point of the line load.</span>
 information.Append(vbLf &amp; <span class="highlight-literal">"Moment at the start of this line load: "</span> &amp; XYZToString(lineLoad.MomentVector1))
 information.Append(vbLf &amp; <span class="highlight-literal">"Moment at the end of this line load: "</span> &amp; XYZToString(lineLoad.MomentVector2))

    <span class="highlight-comment">'Whether the load is projected or not</span>
 <span class="highlight-keyword">If</span> lineLoad.IsProjected <span class="highlight-keyword">Then</span>
    information.Append(vbLf &amp; <span class="highlight-literal">"This line load is projected."</span>)
 <span class="highlight-keyword">Else</span>
    information.Append(vbLf &amp; <span class="highlight-literal">"This line load is not projected"</span>)
 <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">'Report if the load is uniform</span>
 <span class="highlight-keyword">If</span> <span class="highlight-keyword">False</span> &lt;&gt; lineLoad.IsUniform <span class="highlight-keyword">Then</span>
    information.Append(vbLf &amp; <span class="highlight-literal">"This load is uniform."</span>)
 <span class="highlight-keyword">Else</span>
    information.Append(vbLf &amp; <span class="highlight-literal">"This load is not uniform."</span>)
 <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">'show information of lineload in a MessageBox.</span>
    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, information.ToString())
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

<span class="highlight-comment">' output the point's three coordinates</span>
<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Function</span> XYZToString(point <span class="highlight-keyword">As</span> XYZ) <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
    <span class="highlight-keyword">Return</span> <span class="highlight-literal">"("</span> &amp; Convert.ToString(point.X) &amp; <span class="highlight-literal">", "</span> &amp; Convert.ToString(point.Y) &amp; <span class="highlight-literal">", "</span> &amp; Convert.ToString(point.Z) &amp; <span class="highlight-literal">")"</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</a><br />  <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Element</a><br />    <a href="4130f6dc-1963-2105-d85b-e08a7c34af8b.htm">Autodesk.Revit.DB.Structure<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>LoadBase</a><br />      <span class="selflink">Autodesk.Revit.DB.Structure<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>LineLoad</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="2befc0dc-d2e7-7bb0-5779-2d98e0570c79.htm">LineLoad Members</a></div><div class="seeAlsoStyle"><a href="d586b341-f687-9d90-e96d-255806b7d4fc.htm">Autodesk.Revit.DB.Structure Namespace</a></div></div></div></div>
