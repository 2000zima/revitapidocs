{% macro header() %}<title>IExternalCommand Interface</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.UI" /><meta name="file" content="ad99887e-db50-bf8f-e4e6-2fb86082b5fb" /><meta name="guid" content="ad99887e-db50-bf8f-e4e6-2fb86082b5fb" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2017 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">IExternalCommand Interface</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="850475b4-01d3-8247-4515-e53ab1e73e65.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2017 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">An interface that should be implemented to provide the implementation for a Revit add-in External Command.</div><p /><b>Namespace:</b> <a href="e86fd90a-8957-02a6-da7f-ced248966e3e.htm">Autodesk.Revit.UI</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPIUI</span> (in RevitAPIUI.dll) Version: 17.0.0.0 (17.0.484.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IExternalCommand</span></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IExternalCommand</span></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IExternalCommand</span></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">To add an external command to Autodesk Revit the developer should implement an object
that supports the IExternalCommand interface.</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> Autodesk.Revit.UI.Result Execute(ExternalCommandData commandData,
    <span class="highlight-keyword">ref</span> <span class="highlight-keyword">string</span> message, ElementSet elements)
{
    <span class="highlight-keyword">try</span>
    {
        Document doc = commandData.Application.ActiveUIDocument.Document;
        UIDocument uidoc = commandData.Application.ActiveUIDocument;
        <span class="highlight-comment">// Delete selected elements</span>

        ICollection&lt;Autodesk.Revit.DB.ElementId&gt; ids =
            doc.Delete(uidoc.Selection.GetElementIds());

        TaskDialog taskDialog = <span class="highlight-keyword">new</span> TaskDialog(<span class="highlight-literal">"Revit"</span>); 
        taskDialog.MainContent = 
           (<span class="highlight-literal">"Click Yes to return Succeeded. Selected members will be deleted.\n"</span> +
           <span class="highlight-literal">"Click No to return Failed.  Selected members will not be deleted.\n"</span> +
           <span class="highlight-literal">"Click Cancel to return Cancelled.  Selected members will not be deleted."</span>);
        TaskDialogCommonButtons buttons = TaskDialogCommonButtons.Yes | 
            TaskDialogCommonButtons.No | TaskDialogCommonButtons.Cancel;
        taskDialog.CommonButtons = buttons;
        TaskDialogResult taskDialogResult = taskDialog.Show();

        <span class="highlight-keyword">if</span> (taskDialogResult == TaskDialogResult.Yes)
        {
            <span class="highlight-keyword">return</span> Autodesk.Revit.UI.Result.Succeeded;
        }
        <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (taskDialogResult == TaskDialogResult.No)
        {
            ICollection&lt;ElementId&gt; selectedElementIds = uidoc.Selection.GetElementIds();
            <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> selectedElementIds)
            {
                elements.Insert( doc.GetElement(id) );
            }
            message = <span class="highlight-literal">"Failed to delete selection."</span>;
            <span class="highlight-keyword">return</span> Autodesk.Revit.UI.Result.Failed;
        }
        <span class="highlight-keyword">else</span>
        {
            <span class="highlight-keyword">return</span> Autodesk.Revit.UI.Result.Cancelled;
        }
    }
    <span class="highlight-keyword">catch</span>
    {
        message = <span class="highlight-literal">"Unexpected Exception thrown."</span>;
        <span class="highlight-keyword">return</span> Autodesk.Revit.UI.Result.Failed;
    }

}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> Execute(commandData <span class="highlight-keyword">As</span> ExternalCommandData, <span class="highlight-keyword">ByRef</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>, elements <span class="highlight-keyword">As</span> ElementSet) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalCommand.Execute
    <span class="highlight-keyword">Try</span>
        <span class="highlight-keyword">Dim</span> doc <span class="highlight-keyword">As</span> Document = commandData.Application.ActiveUIDocument.Document
        <span class="highlight-keyword">Dim</span> uidoc <span class="highlight-keyword">As</span> UIDocument = commandData.Application.ActiveUIDocument
        <span class="highlight-comment">' Delete selected elements</span>


        <span class="highlight-keyword">Dim</span> ids <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> Autodesk.Revit.DB.ElementId) = doc.Delete(uidoc.Selection.GetElementIds())

        <span class="highlight-keyword">Dim</span> taskDialog <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> TaskDialog(<span class="highlight-literal">"Revit"</span>)
        taskDialog.MainContent = (<span class="highlight-literal">"Click Yes to return Succeeded. Selected members will be deleted."</span> &amp; vbLf &amp; <span class="highlight-literal">"Click No to return Failed.  Selected members will not be deleted."</span> &amp; vbLf &amp; <span class="highlight-literal">"Click Cancel to return Cancelled.  Selected members will not be deleted."</span>)
        <span class="highlight-keyword">Dim</span> buttons <span class="highlight-keyword">As</span> TaskDialogCommonButtons = TaskDialogCommonButtons.Yes <span class="highlight-keyword">Or</span> TaskDialogCommonButtons.No <span class="highlight-keyword">Or</span> TaskDialogCommonButtons.Cancel
        taskDialog.CommonButtons = buttons
        <span class="highlight-keyword">Dim</span> taskDialogResult__1 <span class="highlight-keyword">As</span> TaskDialogResult = taskDialog.Show()

        <span class="highlight-keyword">If</span> taskDialogResult__1 = TaskDialogResult.Yes <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Return</span> Autodesk.Revit.UI.Result.Succeeded
        <span class="highlight-keyword">ElseIf</span> taskDialogResult__1 = TaskDialogResult.No <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> selectedElementIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = uidoc.Selection.GetElementIds()
            <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> selectedElementIds
                elements.Insert(doc.GetElement(id))
            <span class="highlight-keyword">Next</span>
            message = <span class="highlight-literal">"Failed to delete selection."</span>
            <span class="highlight-keyword">Return</span> Autodesk.Revit.UI.Result.Failed
        <span class="highlight-keyword">Else</span>
            <span class="highlight-keyword">Return</span> Autodesk.Revit.UI.Result.Cancelled
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Catch</span>
        message = <span class="highlight-literal">"Unexpected Exception thrown."</span>
        <span class="highlight-keyword">Return</span> Autodesk.Revit.UI.Result.Failed
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Try</span>

<span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="850475b4-01d3-8247-4515-e53ab1e73e65.htm">IExternalCommand Members</a></div><div class="seeAlsoStyle"><a href="e86fd90a-8957-02a6-da7f-ced248966e3e.htm">Autodesk.Revit.UI Namespace</a></div></div></div></div>