{% macro header() %}<title>NewFootPrintRoof Method </title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.Creation" /><meta name="file" content="110741bf-b041-9f78-0832-ec9f5892cebc" /><meta name="guid" content="110741bf-b041-9f78-0832-ec9f5892cebc" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2017 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Document<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>NewFootPrintRoof Method </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">Document Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2017 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">Creates a new FootPrintRoof element.</div><p /><b>Namespace:</b> <a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 17.0.0.0 (17.0.484.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <a href="97eb52e6-5dfd-86b3-708d-aabcda389f4a.htm">FootPrintRoof</a> <span class="identifier">NewFootPrintRoof</span>(
	<a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a> <span class="parameter">footPrint</span>,
	<a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a> <span class="parameter">level</span>,
	<a href="00b5948e-1cb6-4f3b-acc1-9f000e8cc40d.htm">RoofType</a> <span class="parameter">roofType</span>,
	<span class="keyword">out</span> <a href="c7852e5b-0a34-771f-584f-3e9513bca50e.htm">ModelCurveArray</a> <span class="parameter">footPrintToModelCurvesMapping</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NewFootPrintRoof</span> ( _
	<span class="parameter">footPrint</span> <span class="keyword">As</span> <a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a>, _
	<span class="parameter">level</span> <span class="keyword">As</span> <a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a>, _
	<span class="parameter">roofType</span> <span class="keyword">As</span> <a href="00b5948e-1cb6-4f3b-acc1-9f000e8cc40d.htm">RoofType</a>, _
	&lt;<a href="http://msdn2.microsoft.com/en-us/library/k8189tfc" target="_blank">OutAttribute</a>&gt; <span class="keyword">ByRef</span> <span class="parameter">footPrintToModelCurvesMapping</span> <span class="keyword">As</span> <a href="c7852e5b-0a34-771f-584f-3e9513bca50e.htm">ModelCurveArray</a> _
) <span class="keyword">As</span> <a href="97eb52e6-5dfd-86b3-708d-aabcda389f4a.htm">FootPrintRoof</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<a href="97eb52e6-5dfd-86b3-708d-aabcda389f4a.htm">FootPrintRoof</a>^ <span class="identifier">NewFootPrintRoof</span>(
	<a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">CurveArray</a>^ <span class="parameter">footPrint</span>, 
	<a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Level</a>^ <span class="parameter">level</span>, 
	<a href="00b5948e-1cb6-4f3b-acc1-9f000e8cc40d.htm">RoofType</a>^ <span class="parameter">roofType</span>, 
	[<a href="http://msdn2.microsoft.com/en-us/library/k8189tfc" target="_blank">OutAttribute</a>] <a href="c7852e5b-0a34-771f-584f-3e9513bca50e.htm">ModelCurveArray</a>^% <span class="parameter">footPrintToModelCurvesMapping</span>
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="footPrint"><dt><span class="parameter">footPrint</span></dt><dd>Type: <a href="55103aad-38fd-45d2-6bf7-67a5203e99f3.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>CurveArray</a><br />The footprint of the FootPrintRoof.</dd></dl><dl paramName="level"><dt><span class="parameter">level</span></dt><dd>Type: <a href="577e5d4e-a558-118c-9dea-3b810b061775.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Level</a><br />The level of the FootPrintRoof.</dd></dl><dl paramName="roofType"><dt><span class="parameter">roofType</span></dt><dd>Type: <a href="00b5948e-1cb6-4f3b-acc1-9f000e8cc40d.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>RoofType</a><br />Type of the FootPrintRoof.</dd></dl><dl paramName="footPrintToModelCurvesMapping"><dt><span class="parameter">footPrintToModelCurvesMapping</span></dt><dd>Type: <a href="c7852e5b-0a34-771f-584f-3e9513bca50e.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ModelCurveArray</a><span class="cpp">%</span><br />An array of Model Curves corresponding to the set of Curves input in the footPrint. By knowing which Model Curve was created by each footPrint curve, you can set properties like SlopeAngle for each curve.</dd></dl></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""> This method will regenerate the document even in manual regeneration mode. </div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">// Before invoking this sample, select some walls to add a roof over.</span>
<span class="highlight-comment">// Make sure there is a level named "Roof" in the document.</span>

<span class="highlight-comment">// find the Roof level</span>
FilteredElementCollector collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
collector.OfClass(<span class="highlight-keyword">typeof</span>(Level));
var elements = from element <span class="highlight-keyword">in</span> collector where element.Name == <span class="highlight-literal">"Roof"</span> select element;
Level level = elements.Cast&lt;Level&gt;().ElementAt&lt;Level&gt;(<span class="highlight-number">0</span>);

collector = <span class="highlight-keyword">new</span> FilteredElementCollector(document);
collector.OfClass(<span class="highlight-keyword">typeof</span>(RoofType));
RoofType roofType = collector.FirstElement() <span class="highlight-keyword">as</span> RoofType; 

<span class="highlight-comment">// Get the handle of the application</span>
Autodesk.Revit.ApplicationServices.Application application = document.Application;

<span class="highlight-comment">// Define the footprint for the roof based on user selection</span>
CurveArray footprint = application.Create.NewCurveArray();
UIDocument uidoc = <span class="highlight-keyword">new</span> UIDocument(document);
ICollection&lt;ElementId&gt; selectedIds = uidoc.Selection.GetElementIds();
<span class="highlight-keyword">if</span> (selectedIds.Count != <span class="highlight-number">0</span>)
{
    <span class="highlight-keyword">foreach</span> (ElementId id <span class="highlight-keyword">in</span> selectedIds)
    {
        Element element = document.GetElement(id);
        Wall wall = element <span class="highlight-keyword">as</span> Wall;
        <span class="highlight-keyword">if</span> (wall != <span class="highlight-keyword">null</span>)
        {
            LocationCurve wallCurve = wall.Location <span class="highlight-keyword">as</span> LocationCurve;
            footprint.Append(wallCurve.Curve);
            <span class="highlight-keyword">continue</span>;
        }

        ModelCurve modelCurve = element <span class="highlight-keyword">as</span> ModelCurve;
        <span class="highlight-keyword">if</span> (modelCurve != <span class="highlight-keyword">null</span>)
        {
            footprint.Append(modelCurve.GeometryCurve);
        }
    }

}
<span class="highlight-keyword">else</span>
{
    <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"You should select a curve loop, or a wall loop, or loops combination \nof walls and curves to create a footprint roof."</span>);
}

ModelCurveArray footPrintToModelCurveMapping = <span class="highlight-keyword">new</span> ModelCurveArray();
FootPrintRoof footprintRoof = document.Create.NewFootPrintRoof(footprint, level, roofType, <span class="highlight-keyword">out</span> footPrintToModelCurveMapping);
ModelCurveArrayIterator iterator = footPrintToModelCurveMapping.ForwardIterator();
iterator.Reset();
<span class="highlight-keyword">while</span> (iterator.MoveNext())
{
    ModelCurve modelCurve = iterator.Current <span class="highlight-keyword">as</span> ModelCurve;
    footprintRoof.set_DefinesSlope(modelCurve, <span class="highlight-keyword">true</span>);
    footprintRoof.set_SlopeAngle(modelCurve, <span class="highlight-number">0.5</span>);
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-comment">' Before invoking this sample, select some walls to add a roof over.</span>
<span class="highlight-comment">' Make sure there is a level named "Roof" in the document.</span>


<span class="highlight-comment">' find the Roof level</span>
<span class="highlight-keyword">Dim</span> collector <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> FilteredElementCollector(document)
collector.OfClass(<span class="highlight-keyword">GetType</span>(Level))
: <span class="highlight-keyword">Dim</span> elements <span class="highlight-keyword">As</span> System.Collections.Generic.IEnumerable(<span class="highlight-keyword">Of</span> Autodesk.Revit.DB.Element)
elements = From element <span class="highlight-keyword">In</span> collector _
 Where element.Name = <span class="highlight-literal">"Roof"</span> _
 <span class="highlight-keyword">Select</span> element

<span class="highlight-keyword">Dim</span> level <span class="highlight-keyword">As</span> Level = elements.Cast(<span class="highlight-keyword">Of</span> Level)().ElementAt(<span class="highlight-number">0</span>)

collector = <span class="highlight-keyword">New</span> FilteredElementCollector(document)
collector.OfClass(<span class="highlight-keyword">GetType</span>(RoofType))
<span class="highlight-keyword">Dim</span> roofType <span class="highlight-keyword">As</span> RoofType = <span class="highlight-keyword">TryCast</span>(collector.FirstElement(), RoofType)

<span class="highlight-comment">' Get the handle of the application</span>
<span class="highlight-keyword">Dim</span> application <span class="highlight-keyword">As</span> Autodesk.Revit.ApplicationServices.Application = document.Application

<span class="highlight-comment">' Define the footprint for the roof based on user selection</span>
<span class="highlight-keyword">Dim</span> footprint <span class="highlight-keyword">As</span> CurveArray = application.Create.NewCurveArray()
<span class="highlight-keyword">Dim</span> uidoc <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> UIDocument(document)
<span class="highlight-keyword">Dim</span> selectedIds <span class="highlight-keyword">As</span> ICollection(<span class="highlight-keyword">Of</span> ElementId) = uidoc.Selection.GetElementIds()
<span class="highlight-keyword">If</span> selectedIds.Count &lt;&gt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> id <span class="highlight-keyword">As</span> ElementId <span class="highlight-keyword">In</span> selectedIds
        <span class="highlight-keyword">Dim</span> element <span class="highlight-keyword">As</span> Element = document.GetElement(id)
        <span class="highlight-keyword">Dim</span> wall <span class="highlight-keyword">As</span> Wall = <span class="highlight-keyword">TryCast</span>(element, Wall)
        <span class="highlight-keyword">If</span> wall <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            <span class="highlight-keyword">Dim</span> wallCurve <span class="highlight-keyword">As</span> LocationCurve = <span class="highlight-keyword">TryCast</span>(wall.Location, LocationCurve)
            footprint.Append(wallCurve.Curve)
            <span class="highlight-keyword">Continue</span> <span class="highlight-keyword">For</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

        <span class="highlight-keyword">Dim</span> modelCurve <span class="highlight-keyword">As</span> ModelCurve = <span class="highlight-keyword">TryCast</span>(element, ModelCurve)
        <span class="highlight-keyword">If</span> modelCurve <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
            footprint.Append(modelCurve.GeometryCurve)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Next</span>
<span class="highlight-keyword">Else</span>
    <span class="highlight-keyword">Throw</span> <span class="highlight-keyword">New</span> Exception(<span class="highlight-literal">"You should select a curve loop, or a wall loop, or loops combination "</span> &amp; vbLf &amp; <span class="highlight-literal">"of walls and curves to create a footprint roof."</span>)
<span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

<span class="highlight-keyword">Dim</span> footPrintToModelCurveMapping <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> ModelCurveArray()
<span class="highlight-keyword">Dim</span> footprintRoof <span class="highlight-keyword">As</span> FootPrintRoof = document.Create.NewFootPrintRoof(footprint, level, roofType, footPrintToModelCurveMapping)
<span class="highlight-keyword">Dim</span> iterator <span class="highlight-keyword">As</span> ModelCurveArrayIterator = footPrintToModelCurveMapping.ForwardIterator()
iterator.Reset()
<span class="highlight-keyword">While</span> iterator.MoveNext()
    <span class="highlight-keyword">Dim</span> modelCurve <span class="highlight-keyword">As</span> ModelCurve = <span class="highlight-keyword">TryCast</span>(iterator.Current, ModelCurve)
    footprintRoof.DefinesSlope(modelCurve) = <span class="highlight-keyword">True</span>
    footprintRoof.SlopeAngle(modelCurve) = <span class="highlight-number">0.5</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">While</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentException</a></td><td>Thrown if the level does not exist in the given document.</td></tr><tr><td><a href="2e6e4206-97a8-dd4b-df5d-4269f4bb6088.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentException</a></td><td>Thrown if the roof type does not exist in the given document.</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="ab1718f9-45fb-b3d3-827e-32ff81cf929c.htm">Document Class</a></div><div class="seeAlsoStyle"><a href="ded320da-058a-4edd-0418-0582389559a7.htm">Autodesk.Revit.Creation Namespace</a></div></div></div></div>