{% macro header() %}<title>AppearanceAssetId Property </title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="d02d0677-341a-8d1a-d3eb-35ff82f01695" /><meta name="guid" content="d02d0677-341a-8d1a-d3eb-35ff82f01695" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2016 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Material<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>AppearanceAssetId Property </span></td></tr><tr id="headerTableRow3"><td align="left"><a href="2ec33007-7a2a-f86a-009b-d4c5d235a307.htm">Material Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2016 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   The ElementId of the AppearanceAssetElement.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 16.0.0.0 (16.0.0.0)<br /><b>Since:</b> 
   2014
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a> <span class="identifier">AppearanceAssetId</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">AppearanceAssetId</span> <span class="keyword">As</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">property</span> <a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="identifier">AppearanceAssetId</span> {
	<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="keyword">get</span> ();
	<span class="keyword">void</span> <span class="keyword">set</span> (<a href="44f3f7b1-3229-3404-93c9-dc5e70337dd6.htm">ElementId</a>^ <span class="parameter">value</span>);
}</pre></td></tr></table></span></div><h4 class="subHeading">Field Value</h4>
   The id of the AppearanceAssetElement, or InvalidElementId if the material does not have an associated
   appearance asset.
</div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="">
   This is the id to the element that contains visual material information used for rendering.
   In some cases where the material is created without setting up custom render appearance properties
   (for example, when the material is created via an import, or when it is created by the API),
   this property will be InvalidElementId.  In that situation the standard material properties such as
   <a href="0c6c0bd9-15db-d839-786d-b33d18311017.htm">Color</a> and <a href="71499d4f-686b-c708-fd87-a3f6523b3189.htm">Transparency</a> will dictate the appearance of the material during rendering.
</div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> ReadMaterialAppearanceProp(Document document, Material material)
{
   ElementId appearanceId = material.AppearanceAssetId;
   AppearanceAssetElement appearanceElem = document.GetElement(appearanceId) <span class="highlight-keyword">as</span> AppearanceAssetElement;
   Asset theAsset = appearanceElem.GetRenderingAsset();
   <span class="highlight-keyword">string</span> libraryName = theAsset.LibraryName;
   <span class="highlight-keyword">string</span> title = theAsset.Title;

   <span class="highlight-comment">// The predefined asset can be empty. at this time, get the system appearance asset instead.</span>
   <span class="highlight-keyword">if</span> (theAsset.Size == <span class="highlight-number">0</span>)
   {
      AssetSet systemAppearanceAssets = document.Application.get_Assets(AssetType.Appearance);
      <span class="highlight-keyword">foreach</span> (Asset systemAsset <span class="highlight-keyword">in</span> systemAppearanceAssets)
      {
         <span class="highlight-keyword">if</span>(theAsset.LibraryName == systemAsset.LibraryName
            &amp;&amp; theAsset.Name == systemAsset.Name)
         {
            <span class="highlight-comment">// Read the Asset information here.</span>
            <span class="highlight-keyword">break</span>;
         }
      }
   }
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> ReadMaterialAppearanceProp(document <span class="highlight-keyword">As</span> Document, material <span class="highlight-keyword">As</span> Material)
    <span class="highlight-keyword">Dim</span> appearanceId <span class="highlight-keyword">As</span> ElementId = material.AppearanceAssetId
    <span class="highlight-keyword">Dim</span> appearanceElem <span class="highlight-keyword">As</span> AppearanceAssetElement = <span class="highlight-keyword">TryCast</span>(document.GetElement(appearanceId), AppearanceAssetElement)
    <span class="highlight-keyword">Dim</span> theAsset <span class="highlight-keyword">As</span> Asset = appearanceElem.GetRenderingAsset()
    <span class="highlight-keyword">Dim</span> libraryName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = theAsset.LibraryName
    <span class="highlight-keyword">Dim</span> title <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = theAsset.Title

    <span class="highlight-comment">' The predefined asset can be empty. at this time, get the system appearance asset instead.</span>
    <span class="highlight-keyword">If</span> theAsset.Size = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> systemAppearanceAssets <span class="highlight-keyword">As</span> AssetSet = document.Application.Assets(AssetType.Appearance)
        <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> systemAsset <span class="highlight-keyword">As</span> Asset <span class="highlight-keyword">In</span> systemAppearanceAssets
            <span class="highlight-keyword">If</span> theAsset.LibraryName = systemAsset.LibraryName <span class="highlight-keyword">AndAlso</span> theAsset.Name = systemAsset.Name <span class="highlight-keyword">Then</span>
                <span class="highlight-comment">' Read the Asset information here.</span>
                <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">For</span>
            <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(exceptionsToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exceptionsToggle, event)" tabindex="0"><img id="exceptionsToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Exceptions</span></h1><div id="exceptionsSection" class="section" name="collapseableSection" style=""><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5" frame="lhs"><tr><th class="exceptionNameColumn">Exception</th><th class="exceptionConditionColumn">Condition</th></tr><tr><td><a href="631e1424-60f4-929b-4e52-dda9dcd26316.htm">Autodesk.Revit.Exceptions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ArgumentNullException</a></td><td>
   When setting this property: A non-optional argument was NULL
</td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="2ec33007-7a2a-f86a-009b-d4c5d235a307.htm">Material Class</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>