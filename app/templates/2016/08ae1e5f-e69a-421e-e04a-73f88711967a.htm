{% macro header() %}<title>ViewPrinted Event</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_chm" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.ApplicationServices" /><meta name="file" content="08ae1e5f-e69a-421e-e04a-73f88711967a" /><meta name="guid" content="08ae1e5f-e69a-421e-e04a-73f88711967a" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2016 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">ControlledApplication<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ViewPrinted Event</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="35859972-2407-3910-cb07-bbb337e307e6.htm">ControlledApplication Class</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2016 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Subscribe to the ViewPrinted event to be notified immediately after Revit has finished printing a view of the document.
</div><p /><b>Namespace:</b> <a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">Autodesk.Revit.ApplicationServices</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 16.0.0.0 (16.0.0.0)<br /><b>Since:</b> 
   2010
<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> event <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="8d683cd4-c19b-034f-8b42-653b024e7aa4.htm">ViewPrintedEventArgs</a>&gt; <span class="identifier">ViewPrinted</span></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> Event <span class="identifier">ViewPrinted</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>(<span class="keyword">Of</span> <a href="8d683cd4-c19b-034f-8b42-653b024e7aa4.htm">ViewPrintedEventArgs</a>)</pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span>:
 <span class="keyword">event</span> <a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="8d683cd4-c19b-034f-8b42-653b024e7aa4.htm">ViewPrintedEventArgs</a>^&gt;^ <span class="identifier">ViewPrinted</span> {
	<span class="keyword">void</span> <span class="keyword">add</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="8d683cd4-c19b-034f-8b42-653b024e7aa4.htm">ViewPrintedEventArgs</a>^&gt;^ <span class="parameter">value</span>);
	<span class="keyword">void</span> <span class="keyword">remove</span> (<a href="http://msdn2.microsoft.com/en-us/library/db0etb8x" target="_blank">EventHandler</a>&lt;<a href="8d683cd4-c19b-034f-8b42-653b024e7aa4.htm">ViewPrintedEventArgs</a>^&gt;^ <span class="parameter">value</span>);
}</pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p>This event is raised immediately after Revit has finished printing a view of the document.
   If multiple views are combined to a single file, this event will be raised only once.
   It is raised even when view printing failed.</p><p>
   Handlers of this event are permitted to make modifications to any document (including the active document),
   except for documents that are currently in read-only mode.
   </p><p>Check the 'Status' field in event's argument to see whether the action was successful or not.</p><p>This event is not cancellable, for the process of view printing has already been finished.</p><p>If the action was not successful, the document may not be modified and new transactions may not be started.</p><p>The following API functions are not available for the current document during this event:
   <ul><li><span class="nolink">[!:Autodesk::Revit::DB::Document::Close()]</span> and similar overloads.</li></ul></p><p>Exception <a href="9e715f03-3884-e539-4dd6-8d7545733adc.htm">InvalidOperationException</a> will be thrown if any of the above methods is called during this event.</p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> Application_ViewPrinted : IExternalApplication
{
    <span class="highlight-comment">/// &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement the OnStartup method to register events when Revit starts.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnStartup(UIControlledApplication application)
    {
        <span class="highlight-comment">// Register related events</span>
        application.ControlledApplication.ViewPrinted += <span class="highlight-keyword">new</span> EventHandler&lt;Autodesk.Revit.DB.Events.ViewPrintedEventArgs&gt;(AppViewPrinted);
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Implement this method to unregister the subscribed events when Revit exits.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> Result OnShutdown(UIControlledApplication application)
    {
        <span class="highlight-comment">// unregister events</span>
       application.ControlledApplication.ViewPrinted -= <span class="highlight-keyword">new</span> EventHandler&lt;Autodesk.Revit.DB.Events.ViewPrintedEventArgs&gt;(AppViewPrinted);
        <span class="highlight-keyword">return</span> Result.Succeeded;
    }
    <span class="highlight-comment">/// &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">/// Code ID: 501</span>
    <span class="highlight-comment">/// For ViewPrinted class description</span>
    <span class="highlight-comment">/// &lt;/TrivialCode&gt;</span>

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Handler method for ViewPrinting event, it will dump some event arguments. </span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> AppViewPrinted(<span class="highlight-keyword">object</span> sender, Autodesk.Revit.DB.Events.ViewPrintedEventArgs args)
    {
        StringBuilder info = <span class="highlight-keyword">new</span> StringBuilder();
        info.AppendLine(<span class="highlight-literal">"ViewPrintedEventArgs Parameters ------&gt;"</span>);
        info.AppendLine(<span class="highlight-literal">"    Event Status        : "</span> + args.Status);
        info.AppendLine(<span class="highlight-literal">"    TotalViews          : "</span> + args.TotalViews);
        info.AppendLine(<span class="highlight-literal">"    View Index          : "</span> + args.Index);
        info.AppendLine(<span class="highlight-literal">"    View Information    :"</span>);
        DumpViewInfo(args.View, <span class="highlight-literal">"      "</span>, <span class="highlight-keyword">ref</span> info);

        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>,info.ToString());
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Dump information of single view: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="view"&gt;View element to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="prefix"&gt;Prefix mark for each line added to message box string.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> DumpViewInfo(Autodesk.Revit.DB.View view, String prefix, <span class="highlight-keyword">ref</span> StringBuilder info)
    {
        info.AppendLine(String.Format(<span class="highlight-literal">"{0} Id: {1}, ViewName: {2}, ViewType: {3}"</span>,
            prefix, view.Id.IntegerValue, view.ViewName, view.ViewType));
    }
    <span class="highlight-comment">/// &lt;/ExampleMethod&gt;</span>
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/copycode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> Application_ViewPrinted
    <span class="highlight-keyword">Implements</span> IExternalApplication
    <span class="highlight-comment">' &lt;ExampleMethod&gt;</span>
    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement the OnStartup method to register events when Revit starts.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnStartup(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnStartup
        <span class="highlight-comment">' Register related events</span>
        <span class="highlight-keyword">AddHandler</span> application.ControlledApplication.ViewPrinted, <span class="highlight-keyword">AddressOf</span> AppViewPrinted
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>

    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Implement this method to unregister the subscribed events when Revit exits.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Function</span> OnShutdown(application <span class="highlight-keyword">As</span> UIControlledApplication) <span class="highlight-keyword">As</span> Autodesk.Revit.UI.Result <span class="highlight-keyword">Implements</span> IExternalApplication.OnShutdown
        <span class="highlight-comment">' unregister events</span>
        <span class="highlight-keyword">RemoveHandler</span> application.ControlledApplication.ViewPrinted, <span class="highlight-keyword">AddressOf</span> AppViewPrinted
        <span class="highlight-keyword">Return</span> Result.Succeeded
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
    <span class="highlight-comment">' &lt;TrivialCode&gt;</span>
    <span class="highlight-comment">' Code ID: 501</span>
    <span class="highlight-comment">' For ViewPrinted class description</span>
    <span class="highlight-comment">' &lt;/TrivialCode&gt;</span>


    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Handler method for ViewPrinting event, it will dump some event arguments. </span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> AppViewPrinted(sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, args <span class="highlight-keyword">As</span> Autodesk.Revit.DB.Events.ViewPrintedEventArgs)
        <span class="highlight-keyword">Dim</span> info <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StringBuilder()
        info.AppendLine(<span class="highlight-literal">"ViewPrintedEventArgs Parameters ------&gt;"</span>)
        info.AppendLine(<span class="highlight-literal">"    Event Status        : "</span> &amp; Convert.ToString(args.Status))
        info.AppendLine(<span class="highlight-literal">"    TotalViews          : "</span> &amp; Convert.ToString(args.TotalViews))
        info.AppendLine(<span class="highlight-literal">"    View Index          : "</span> &amp; Convert.ToString(args.Index))
        info.AppendLine(<span class="highlight-literal">"    View Information    :"</span>)
        DumpViewInfo(args.View, <span class="highlight-literal">"      "</span>, info)

        TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, info.ToString())
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-comment">' &lt;summary&gt;</span>
    <span class="highlight-comment">' Dump information of single view: ViewType, Id and ViewName.</span>
    <span class="highlight-comment">' &lt;/summary&gt;</span>
    <span class="highlight-comment">' &lt;param name="view"&gt;View element to be displayed in message box.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="prefix"&gt;Prefix mark for each line added to message box string.&lt;/param&gt;</span>
    <span class="highlight-comment">' &lt;param name="info"&gt;String where data is stored for display&lt;/param&gt;</span>
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Sub</span> DumpViewInfo(view <span class="highlight-keyword">As</span> Autodesk.Revit.DB.View, prefix <span class="highlight-keyword">As</span> [<span class="highlight-keyword">String</span>], <span class="highlight-keyword">ByRef</span> info <span class="highlight-keyword">As</span> StringBuilder)
        info.AppendLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"{0} Id: {1}, ViewName: {2}, ViewType: {3}"</span>, prefix, view.Id.IntegerValue, view.ViewName, view.ViewType))
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
    <span class="highlight-comment">' &lt;/ExampleMethod&gt;</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="35859972-2407-3910-cb07-bbb337e307e6.htm">ControlledApplication Class</a></div><div class="seeAlsoStyle"><a href="91957e18-2935-006c-83ab-3b5b9dbb5928.htm">Autodesk.Revit.ApplicationServices Namespace</a></div></div></div></div>
