{% macro header() %}<title>Material Class</title>{% assets "css_chm" %}<link rel="stylesheet" type="text/css" href="{{ ASSET_URL }}" />{% endassets %}{% assets "js_assets" %}<script src="{{ ASSET_URL }}"></script>{% endassets %}<meta name="container" content="Autodesk.Revit.DB" /><meta name="file" content="2ec33007-7a2a-f86a-009b-d4c5d235a307" /><meta name="guid" content="2ec33007-7a2a-f86a-009b-d4c5d235a307" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script>{% endmacro %}<div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Revit 2016 API</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Material Class</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="2528df8e-9c01-10be-f6be-f0ebbd9ff4bc.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('revitapifeedback@autodesk.com','Revit 2016 API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td></tr></table></div><div id="mainSection"><div id="mainBody"><div class="summary">
   Represents a material element within an Autodesk Revit project.
</div><p /><b>Namespace:</b> <a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB</a><br /><b>Assembly:</b> <span sdata="assembly">RevitAPI</span> (in RevitAPI.dll) Version: 16.0.0.0 (16.0.0.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Material</span> : <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Material</span> _
	<span class="keyword">Inherits</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Material</span> : <span class="keyword">public</span> <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Element</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> GetMaterialInformation(Material material)
{
   StringBuilder message = <span class="highlight-keyword">new</span> StringBuilder(<span class="highlight-literal">"Material : "</span> + material.Name);
   <span class="highlight-comment">//color of the material</span>
   message.Append(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"\nColor: Red[{0}]; Green[{1}]; Blue[{2}]"</span>,
                   material.Color.Red, material.Color.Green, material.Color.Blue));

   <span class="highlight-comment">//cut pattern and pattern color of the material</span>

   FillPatternElement cutPattern = material.Document.GetElement(material.CutPatternId) <span class="highlight-keyword">as</span> FillPatternElement;
   <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != cutPattern)
   {
      message.Append(<span class="highlight-literal">"\nCut Pattern: "</span> + cutPattern.Name);
      message.Append(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"\nCut Pattern Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>,
                      material.CutPatternColor.Red, material.CutPatternColor.Green, material.CutPatternColor.Blue));
   }

   <span class="highlight-comment">//surface pattern and pattern color of the material</span>
   FillPatternElement surfacePattern = material.Document.GetElement(material.SurfacePatternId) <span class="highlight-keyword">as</span> FillPatternElement;
   <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> != surfacePattern)
   {
      message.Append(<span class="highlight-literal">"\nSurface Pattern: "</span> + surfacePattern.Name);
      message.Append(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"\nSurface Pattern Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>,
                      material.SurfacePatternColor.Red, material.SurfacePatternColor.Green, material.SurfacePatternColor.Blue));
   }

   <span class="highlight-comment">//some shading property of the material</span>
   <span class="highlight-keyword">int</span> shininess = material.Shininess;
   message.Append(<span class="highlight-literal">"\nShininess: "</span> + shininess);
   <span class="highlight-keyword">int</span> smoothness = material.Smoothness;
   message.Append(<span class="highlight-literal">"\nSmoothness: "</span> + smoothness);
   <span class="highlight-keyword">int</span> transparency = material.Transparency;
   message.Append(<span class="highlight-literal">"\nTransparency: "</span> + transparency);

   TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message.ToString());
}</pre></div></span><span id="cbc_2" x-lang="VisualBasic" codeLanguage="VisualBasic"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>VB.NET</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> GetMaterialInformation(material <span class="highlight-keyword">As</span> Material)
    <span class="highlight-keyword">Dim</span> message <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> StringBuilder(<span class="highlight-literal">"Material : "</span> &amp; Convert.ToString(material.Name))
    <span class="highlight-comment">'color of the material</span>
    message.Append(<span class="highlight-keyword">String</span>.Format(vbLf &amp; <span class="highlight-literal">"Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>, material.Color.Red, material.Color.Green, material.Color.Blue))

    <span class="highlight-comment">'cut pattern and pattern color of the material</span>


    <span class="highlight-keyword">Dim</span> cutPattern <span class="highlight-keyword">As</span> FillPatternElement = <span class="highlight-keyword">TryCast</span>(material.Document.GetElement(material.CutPatternId), FillPatternElement)
    <span class="highlight-keyword">If</span> cutPattern <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        message.Append(vbLf &amp; <span class="highlight-literal">"Cut Pattern: "</span> + cutPattern.Name)
        message.Append(<span class="highlight-keyword">String</span>.Format(vbLf &amp; <span class="highlight-literal">"Cut Pattern Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>, material.CutPatternColor.Red, material.CutPatternColor.Green, material.CutPatternColor.Blue))
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">'surface pattern and pattern color of the material</span>
    <span class="highlight-keyword">Dim</span> surfacePattern <span class="highlight-keyword">As</span> FillPatternElement = <span class="highlight-keyword">TryCast</span>(material.Document.GetElement(material.SurfacePatternId), FillPatternElement)
    <span class="highlight-keyword">If</span> surfacePattern <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        message.Append(vbLf &amp; <span class="highlight-literal">"Surface Pattern: "</span> + surfacePattern.Name)
        message.Append(<span class="highlight-keyword">String</span>.Format(vbLf &amp; <span class="highlight-literal">"Surface Pattern Color: Red[{0}]; Green[{1}]; Blue[{2}]"</span>, material.SurfacePatternColor.Red, material.SurfacePatternColor.Green, material.SurfacePatternColor.Blue))
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">'some shading property of the material</span>
    <span class="highlight-keyword">Dim</span> shininess <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = material.Shininess
    message.Append(vbLf &amp; <span class="highlight-literal">"Shininess: "</span> &amp; shininess)
    <span class="highlight-keyword">Dim</span> smoothness <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = material.Smoothness
    message.Append(vbLf &amp; <span class="highlight-literal">"Smoothness: "</span> &amp; smoothness)
    <span class="highlight-keyword">Dim</span> transparency <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = material.Transparency
    message.Append(vbLf &amp; <span class="highlight-literal">"Transparency: "</span> &amp; transparency)

    TaskDialog.Show(<span class="highlight-literal">"Revit"</span>, message.ToString())
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></span></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</a><br />  <a href="eb16114f-69ea-f4de-0d0d-f7388b105a16.htm">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Element</a><br />    <span class="selflink">Autodesk.Revit.DB<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Material</span><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="2528df8e-9c01-10be-f6be-f0ebbd9ff4bc.htm">Material Members</a></div><div class="seeAlsoStyle"><a href="87546ba7-461b-c646-cbb1-2cb8f5bff8b2.htm">Autodesk.Revit.DB Namespace</a></div></div></div></div>